
decmec.elf:     file format elf32-littleriscv
decmec.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x80000000

Program Header:
    LOAD off    0x00001000 vaddr 0x80000000 paddr 0x80000000 align 2**12
         filesz 0x000037fc memsz 0x000037fc flags r-x
    LOAD off    0x00005000 vaddr 0x90000000 paddr 0x800037fc align 2**12
         filesz 0x00000074 memsz 0x00000074 flags rw-
    LOAD off    0x00000074 vaddr 0x90000074 paddr 0x90000074 align 2**12
         filesz 0x00000000 memsz 0x00000134 flags rw-
    LOAD off    0x00000800 vaddr 0x9000f800 paddr 0x900001a8 align 2**12
         filesz 0x00000000 memsz 0x00000800 flags rw-

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000000cc  80000000  80000000  00001000  2**0  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ilalign          00000000  800000cc  800000cc  00005074  2**0  CONTENTS
  2 .text             00003410  800000cc  800000cc  000010cc  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00000320  800034dc  800034dc  000044dc  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .lalign           00000000  800037fc  800037fc  00005074  2**0  CONTENTS
  5 .dalign           00000000  90000000  90000000  00005074  2**0  CONTENTS
  6 .data             00000074  90000000  800037fc  00005000  2**2  CONTENTS, ALLOC, LOAD, DATA
  7 .bss              00000134  90000074  90000074  00005074  2**2  ALLOC
  8 .stack            00000800  9000f800  900001a8  00005800  2**0  ALLOC
  9 .debug_info       00003647  00000000  00000000  00005074  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev     00001199  00000000  00000000  000086bb  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_loc        00001c77  00000000  00000000  00009854  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_aranges    00000338  00000000  00000000  0000b4d0  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_ranges     00000a08  00000000  00000000  0000b808  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_line       00003de2  00000000  00000000  0000c210  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_str        0000140f  00000000  00000000  0000fff2  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .comment          00000012  00000000  00000000  00011401  2**0  CONTENTS, READONLY
 17 .riscv.attributes 00000025  00000000  00000000  00011413  2**0  CONTENTS, READONLY
 18 .debug_frame      00000504  00000000  00000000  00011438  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
80000000 l    d  .init	00000000 .init
800000cc l    d  .ilalign	00000000 .ilalign
800000cc l    d  .text	00000000 .text
800034dc l    d  .rodata	00000000 .rodata
800037fc l    d  .lalign	00000000 .lalign
90000000 l    d  .dalign	00000000 .dalign
90000000 l    d  .data	00000000 .data
90000074 l    d  .bss	00000000 .bss
9000f800 l    d  .stack	00000000 .stack
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 close.c
00000000 l    df *ABS*	00000000 fstat.c
00000000 l    df *ABS*	00000000 isatty.c
00000000 l    df *ABS*	00000000 lseek.c
00000000 l    df *ABS*	00000000 read.c
00000000 l    df *ABS*	00000000 sbrk.c
90000060 l     O .data	00000004 curbrk.0
00000000 l    df *ABS*	00000000 write.c
00000000 l    df *ABS*	00000000 hbirdv2_gpio.c
00000000 l    df *ABS*	00000000 hbirdv2_uart.c
00000000 l    df *ABS*	00000000 hbirdv2_common.c
00000000 l    df *ABS*	00000000 system_hbirdv2.c
80000c7c l     F .text	00000050 system_default_exception_handler
80000ccc l     F .text	00000058 system_default_interrupt_handler
90000084 l     O .bss	00000028 SystemCoreInterruptHandlers
900000ac l     O .bss	0000002c SystemExceptionHandlers
900000d8 l     O .bss	00000044 SystemExtInterruptHandlers
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 sysisatty.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __atexit.c
9000011c l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
80001fdc l     F .text	00000088 std
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
800027d8 l     F .text	0000003c __sfputc_r
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 impure.c
90000000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 
800037fc l       .rodata	00000000 __fini_array_end
800037fc l       .rodata	00000000 __fini_array_start
800037fc l       .rodata	00000000 __init_array_end
800037fc l       .rodata	00000000 __preinit_array_end
800037fc l       .rodata	00000000 __init_array_start
800037fc l       .rodata	00000000 __preinit_array_start
80002e8c g     F .text	00000040 _isatty_r
80001744 g     F .text	00000160 _puts_r
80002ecc g     F .text	00000048 _lseek_r
800016d8 g     F .text	0000006c printf
90000860 g       .data	00000000 __global_pointer$
80002d60 g     F .text	00000058 __sseek
800020dc g     F .text	000000b0 __sinit
800019fc g     F .text	00000138 __swbuf_r
80002070 g     F .text	0000006c __sfmoreglue
80002f3c g     F .text	00000004 __malloc_unlock
80002e48 g     F .text	00000044 _fstat_r
90000074 g     O .bss	00000004 errno
00000800 g       *ABS*	00000000 __stack_size
800008ac g     F .text	0000007c uart_write
800037fc g       .rodata	00000000 __rt_init_start
800037fc g       .rodata	00000000 __fsymtab_end
800000cc g       .ilalign	00000000 _ilm_lma
80002064 g     F .text	0000000c _cleanup_r
800018a4 g     F .text	0000000c puts
800037fc g       .rodata	00000000 __rt_init_end
90000064 g     O .data	00000004 SystemCoreClock
800024a4 g     F .text	0000000c malloc
800019f8 g     F .text	00000004 isatty
80000368  w    F .text	0000002c _fstat
800009a0 g     F .text	000002dc get_cpu_freq
80002c4c g     F .text	00000040 _sbrk_r
80003494 g     F .text	00000048 _read_r
800037fc g       .rodata	00000000 _eilm
9000f800 g       .stack	00000000 _heap_end
80000394  w    F .text	00000008 _isatty
90000070 g     O .data	00000004 _global_impure_ptr
80001644 g     F .text	00000094 __libc_init_array
800011a4 g     F .text	00000434 .hidden __udivdi3
800003e4  w    F .text	0000003c _sbrk
8000119c g     F .text	00000004 _init
800015ec g     F .text	00000058 __libc_fini_array
800000cc g       .ilalign	00000000 _ilm
80000e38 g     F .text	00000360 _premain_init
80003708 g     O .rodata	00000020 __sf_fake_stderr
80000d34 g     F .text	00000104 core_trap_handler
80002814 g     F .text	00000074 __sfputs_r
80000858 g     F .text	00000054 uart_init
80002f14 g     F .text	00000024 memchr
8000258c g     F .text	000000fc _free_r
90000078 g     O .bss	00000004 _global_atexit
90010000 g       .stack	00000000 _sp
80000000 g     F .init	00000000 _start
80001938 g     F .text	000000c0 rand
8000039c  w    F .text	00000008 _lseek
80001ca8 g     F .text	000000a0 __register_exitproc
80002e08 g     F .text	00000040 _close_r
80001b34 g     F .text	00000174 __swsetup_r
8000218c g     F .text	000000e8 __sfp
80002c8c g     F .text	00000050 __sread
80002f38 g     F .text	00000004 __malloc_lock
80001f3c g     F .text	000000a0 _fflush_r
80003728 g     O .rodata	00000020 __sf_fake_stdin
90000074 g       .bss	00000000 __bss_start
800024b0 g     F .text	000000dc memset
800000cc g     F .text	0000028c main
80000764  w      .text	00000000 trap_entry
800018b0 g     F .text	00000088 srand
80002db8 g     F .text	00000008 __sclose
80002688 g     F .text	00000150 _malloc_r
800037fc g       .rodata	00000000 __vsymtab_start
80000d24 g     F .text	00000010 SystemInit
800011a0 g     F .text	00000004 _fini
800016d8 g     F .text	0000006c iprintf
80003608 g     O .rodata	00000100 .hidden __clz_tab
800015d8 g     F .text	00000014 atexit
80002dc0 g     F .text	00000048 _write_r
80002f40 g     F .text	000001b0 _printf_common
90000068 g     O .data	00000004 _impure_ptr
80001d48 g     F .text	000001f4 __sflush_r
90000000 g       .dalign	00000000 _data
800037fc g       .rodata	00000000 __vsymtab_end
80002324 g     F .text	00000090 __swhatbuf_r
80000420  w    F .text	00000344 _write
90000074 g       .bss	00000000 _edata
80001198 g     F .text	00000004 _postmain_fini
900001a8 g       .bss	00000000 _end
800037fc g       .lalign	00000000 _data_lma
80000928 g     F .text	00000078 uart_read
80002cdc g     F .text	00000084 __swrite
80002888 g     F .text	000003c4 _vfiprintf_r
80002274 g     F .text	000000b0 _fwalk_reent
80003748 g     O .rodata	00000020 __sf_fake_stdout
800003a4  w    F .text	00000040 _read
800023b4 g     F .text	000000f0 __smakebuf_r
800030f0 g     F .text	000003a4 _printf_i
90000080 g     O .bss	00000004 __malloc_sbrk_start
9000007c g     O .bss	00000004 __malloc_free_list
800037fc g       .rodata	00000000 __fsymtab_start
80002888 g     F .text	000003c4 _vfprintf_r
80000834 g     F .text	00000024 gpio_iof_config
80000358  w    F .text	00000010 _close



Disassembly of section .init:

80000000 <_start>:
_start():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:40
 * Reset Handler called on controller reset
 */
_start:
    /* ===== Startup Stage 1 ===== */
    /* Disable Global Interrupt */
    csrc CSR_MSTATUS, MSTATUS_MIE
80000000:	30047073          	csrci	mstatus,8
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:42
    /* Disable all interrupts controlled by CSR MIE */
    csrw CSR_MIE, 0x0
80000004:	30405073          	csrwi	mie,0
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:47

    /* Initialize GP and Stack Pointer SP */
    .option push
    .option norelax
    la gp, __global_pointer$
80000008:	10001197          	auipc	gp,0x10001
8000000c:	85818193          	addi	gp,gp,-1960 # 90000860 <__global_pointer$>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:49
    .option pop
    la sp, _sp
80000010:	10010117          	auipc	sp,0x10010
80000014:	ff010113          	addi	sp,sp,-16 # 90010000 <_sp>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:54

    /*
     * Set Trap Entry MTVEC to trap_entry
     */
    la t0, trap_entry
80000018:	00000297          	auipc	t0,0x0
8000001c:	74c28293          	addi	t0,t0,1868 # 80000764 <trap_entry>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:55
    csrw CSR_MTVEC, t0
80000020:	30529073          	csrw	mtvec,t0
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:58

    /* Direct Mode: All exceptions set pc to BASE. */
    csrc CSR_MTVEC, 0x3
80000024:	3051f073          	csrci	mtvec,3
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:74
    /* ===== Startup Stage 3 ===== */
    /*
     * Load code section frm FLASH to ILM
     * when code LMA is different with VMA
     */
    la a0, _ilm_lma
80000028:	00000517          	auipc	a0,0x0
8000002c:	0a450513          	addi	a0,a0,164 # 800000cc <main>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:75
    la a1, _ilm
80000030:	00000597          	auipc	a1,0x0
80000034:	09c58593          	addi	a1,a1,156 # 800000cc <main>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:77
    /* If the ILM phy-address same as the logic-address, then quit */
    beq a0, a1, 2f
80000038:	02b50263          	beq	a0,a1,8000005c <_start+0x5c>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:78
    la a2, _eilm
8000003c:	00003617          	auipc	a2,0x3
80000040:	7c060613          	addi	a2,a2,1984 # 800037fc <__fsymtab_end>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:79
    bgeu a1, a2, 2f
80000044:	00c5fc63          	bgeu	a1,a2,8000005c <_start+0x5c>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:83

1:
    /* Load code section if necessary */
    lw t0, (a0)
80000048:	00052283          	lw	t0,0(a0)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:84
    sw t0, (a1)
8000004c:	0055a023          	sw	t0,0(a1)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:85
    addi a0, a0, 4
80000050:	00450513          	addi	a0,a0,4
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:86
    addi a1, a1, 4
80000054:	00458593          	addi	a1,a1,4
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:87
    bltu a1, a2, 1b
80000058:	fec5e8e3          	bltu	a1,a2,80000048 <_start+0x48>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:90
2:
    /* Load data section */
    la a0, _data_lma
8000005c:	00003517          	auipc	a0,0x3
80000060:	7a050513          	addi	a0,a0,1952 # 800037fc <__fsymtab_end>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:91
    la a1, _data
80000064:	10000597          	auipc	a1,0x10000
80000068:	f9c58593          	addi	a1,a1,-100 # 90000000 <impure_data>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:92
    la a2, _edata
8000006c:	81418613          	addi	a2,gp,-2028 # 90000074 <errno>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:93
    bgeu a1, a2, 2f
80000070:	00c5fc63          	bgeu	a1,a2,80000088 <_start+0x88>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:95
1:
    lw t0, (a0)
80000074:	00052283          	lw	t0,0(a0)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:96
    sw t0, (a1)
80000078:	0055a023          	sw	t0,0(a1)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:97
    addi a0, a0, 4
8000007c:	00450513          	addi	a0,a0,4
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:98
    addi a1, a1, 4
80000080:	00458593          	addi	a1,a1,4
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:99
    bltu a1, a2, 1b
80000084:	fec5e8e3          	bltu	a1,a2,80000074 <_start+0x74>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:102
2:
    /* Clear bss section */
    la a0, __bss_start
80000088:	81418513          	addi	a0,gp,-2028 # 90000074 <errno>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:103
    la a1, _end
8000008c:	94818593          	addi	a1,gp,-1720 # 900001a8 <_end>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:104
    bgeu a0, a1, 2f
80000090:	00b57863          	bgeu	a0,a1,800000a0 <_start+0xa0>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:106
1:
    sw zero, (a0)
80000094:	00052023          	sw	zero,0(a0)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:107
    addi a0, a0, 4
80000098:	00450513          	addi	a0,a0,4
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:108
    bltu a0, a1, 1b
8000009c:	feb56ce3          	bltu	a0,a1,80000094 <_start+0x94>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:115

    /*
     * Call vendor defined SystemInit to
     * initialize the micro-controller system
     */
    call SystemInit
800000a0:	485000ef          	jal	ra,80000d24 <SystemInit>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:118

    /* Call global constructors */
    la a0, __libc_fini_array
800000a4:	00001517          	auipc	a0,0x1
800000a8:	54850513          	addi	a0,a0,1352 # 800015ec <__libc_fini_array>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:119
    call atexit
800000ac:	52c010ef          	jal	ra,800015d8 <atexit>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:121
    /* Call C/C++ constructor start up code */
    call __libc_init_array
800000b0:	594010ef          	jal	ra,80001644 <__libc_init_array>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:124

    /* do pre-init steps before main */
    call _premain_init
800000b4:	585000ef          	jal	ra,80000e38 <_premain_init>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:127
    /* ===== Call Main Function  ===== */
    /* argc = argv = 0 */
    li a0, 0
800000b8:	00000513          	li	a0,0
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:128
    li a1, 0
800000bc:	00000593          	li	a1,0
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:134

#ifdef RTOS_RTTHREAD
    // Call entry function when using RT-Thread
    call entry
#else
    call main
800000c0:	00c000ef          	jal	ra,800000cc <main>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:137
#endif
    /* do post-main steps after main */
    call _postmain_fini
800000c4:	0d4010ef          	jal	ra,80001198 <_postmain_fini>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/startup_hbirdv2.S:140

1:
    j 1b
800000c8:	0000006f          	j	800000c8 <_start+0xc8>

Disassembly of section .text:

800000cc <main>:
main():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:11

#include "insn.h"


int main(void)
{
800000cc:	f5010113          	addi	sp,sp,-176
800000d0:	0a112623          	sw	ra,172(sp)
800000d4:	0a812423          	sw	s0,168(sp)
800000d8:	0a912223          	sw	s1,164(sp)
800000dc:	0b212023          	sw	s2,160(sp)
800000e0:	09312e23          	sw	s3,156(sp)
800000e4:	09412c23          	sw	s4,152(sp)
800000e8:	09512a23          	sw	s5,148(sp)
800000ec:	09612823          	sw	s6,144(sp)
800000f0:	09712623          	sw	s7,140(sp)
800000f4:	09812423          	sw	s8,136(sp)
__get_rv_cycle():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_base.h:492
{
#if __RISCV_XLEN == 32
    volatile uint32_t high0, low, high;
    uint64_t full;

    high0 = __RV_CSR_READ(CSR_MCYCLEH);
800000f8:	b80027f3          	csrr	a5,mcycleh
800000fc:	00f12a23          	sw	a5,20(sp)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_base.h:493
    low = __RV_CSR_READ(CSR_MCYCLE);
80000100:	b00020f3          	csrr	ra,mcycle
80000104:	00112c23          	sw	ra,24(sp)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_base.h:494
    high = __RV_CSR_READ(CSR_MCYCLEH);
80000108:	b80022f3          	csrr	t0,mcycleh
8000010c:	00512e23          	sw	t0,28(sp)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_base.h:495
    if (high0 != high) {
80000110:	01412703          	lw	a4,20(sp)
80000114:	01c12303          	lw	t1,28(sp)
80000118:	00670663          	beq	a4,t1,80000124 <main+0x58>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_base.h:496
        low = __RV_CSR_READ(CSR_MCYCLE);
8000011c:	b00023f3          	csrr	t2,mcycle
80000120:	00712c23          	sw	t2,24(sp)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_base.h:498
    }
    full = (((uint64_t)high) << 32) | low;
80000124:	01c12783          	lw	a5,28(sp)
80000128:	01812403          	lw	s0,24(sp)
__get_rv_instret():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_base.h:519
{
#if __RISCV_XLEN == 32
    volatile uint32_t high0, low, high;
    uint64_t full;

    high0 = __RV_CSR_READ(CSR_MINSTRETH);
8000012c:	b82024f3          	csrr	s1,minstreth
80000130:	00912423          	sw	s1,8(sp)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_base.h:520
    low = __RV_CSR_READ(CSR_MINSTRET);
80000134:	b0202573          	csrr	a0,minstret
80000138:	00a12623          	sw	a0,12(sp)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_base.h:521
    high = __RV_CSR_READ(CSR_MINSTRETH);
8000013c:	b82025f3          	csrr	a1,minstreth
80000140:	00b12823          	sw	a1,16(sp)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_base.h:522
    if (high0 != high) {
80000144:	00812683          	lw	a3,8(sp)
80000148:	01012603          	lw	a2,16(sp)
8000014c:	00c68663          	beq	a3,a2,80000158 <main+0x8c>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_base.h:523
        low = __RV_CSR_READ(CSR_MINSTRET);
80000150:	b0202873          	csrr	a6,minstret
80000154:	01012623          	sw	a6,12(sp)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_base.h:525
    }
    full = (((uint64_t)high) << 32) | low;
80000158:	01012703          	lw	a4,16(sp)
8000015c:	00c12883          	lw	a7,12(sp)
main():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:12
    srand(__get_rv_cycle()  | __get_rv_instret() | __RV_CSR_READ(CSR_MCYCLE));
80000160:	b0002973          	csrr	s2,mcycle
80000164:	011469b3          	or	s3,s0,a7
80000168:	0129e533          	or	a0,s3,s2
8000016c:	744010ef          	jal	ra,800018b0 <srand>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:13
    uint32_t rval = rand();
80000170:	7c8010ef          	jal	ra,80001938 <rand>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:14
    rv_csr_t misa = __RV_CSR_READ(CSR_MISA);
80000174:	301025f3          	csrr	a1,misa
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:16

    printf("MISA: 0x%lx\r\n", misa);
80000178:	00003517          	auipc	a0,0x3
8000017c:	42c50513          	addi	a0,a0,1068 # 800035a4 <_read_r+0x110>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:19


    for (int i = 0; i < 20; i ++) {
80000180:	00000b13          	li	s6,0
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:16
    printf("MISA: 0x%lx\r\n", misa);
80000184:	554010ef          	jal	ra,800016d8 <iprintf>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:20
        printf("%d: Hello World From RISC-V Processor!\r\n", i);
80000188:	00003a17          	auipc	s4,0x3
8000018c:	42ca0a13          	addi	s4,s4,1068 # 800035b4 <_read_r+0x120>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:19
    for (int i = 0; i < 20; i ++) {
80000190:	01400a93          	li	s5,20
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:20 (discriminator 3)
        printf("%d: Hello World From RISC-V Processor!\r\n", i);
80000194:	000b0593          	mv	a1,s6
80000198:	000a0513          	mv	a0,s4
8000019c:	53c010ef          	jal	ra,800016d8 <iprintf>
800001a0:	001b0593          	addi	a1,s6,1
800001a4:	000a0513          	mv	a0,s4
800001a8:	530010ef          	jal	ra,800016d8 <iprintf>
800001ac:	002b0593          	addi	a1,s6,2
800001b0:	000a0513          	mv	a0,s4
800001b4:	524010ef          	jal	ra,800016d8 <iprintf>
800001b8:	003b0593          	addi	a1,s6,3
800001bc:	000a0513          	mv	a0,s4
800001c0:	518010ef          	jal	ra,800016d8 <iprintf>
800001c4:	004b0593          	addi	a1,s6,4
800001c8:	000a0513          	mv	a0,s4
800001cc:	50c010ef          	jal	ra,800016d8 <iprintf>
800001d0:	005b0593          	addi	a1,s6,5
800001d4:	000a0513          	mv	a0,s4
800001d8:	500010ef          	jal	ra,800016d8 <iprintf>
800001dc:	006b0593          	addi	a1,s6,6
800001e0:	000a0513          	mv	a0,s4
800001e4:	4f4010ef          	jal	ra,800016d8 <iprintf>
800001e8:	007b0593          	addi	a1,s6,7
800001ec:	000a0513          	mv	a0,s4
800001f0:	4e8010ef          	jal	ra,800016d8 <iprintf>
800001f4:	008b0593          	addi	a1,s6,8
800001f8:	000a0513          	mv	a0,s4
800001fc:	4dc010ef          	jal	ra,800016d8 <iprintf>
80000200:	009b0593          	addi	a1,s6,9
80000204:	000a0513          	mv	a0,s4
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:19 (discriminator 3)
    for (int i = 0; i < 20; i ++) {
80000208:	00ab0b13          	addi	s6,s6,10
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:20 (discriminator 3)
        printf("%d: Hello World From RISC-V Processor!\r\n", i);
8000020c:	4cc010ef          	jal	ra,800016d8 <iprintf>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:19 (discriminator 3)
    for (int i = 0; i < 20; i ++) {
80000210:	f95b12e3          	bne	s6,s5,80000194 <main+0xc8>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:22
    }
    volatile unsigned int enc_data[4]={0};
80000214:	02012023          	sw	zero,32(sp)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:23
    volatile unsigned int key_buf[4]={0x01234567,0x89abcdef,0xfedcba98, 0x76543210};
80000218:	00003b97          	auipc	s7,0x3
8000021c:	3e0b8b93          	addi	s7,s7,992 # 800035f8 <_read_r+0x164>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:22
    volatile unsigned int enc_data[4]={0};
80000220:	02012223          	sw	zero,36(sp)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:23
    volatile unsigned int key_buf[4]={0x01234567,0x89abcdef,0xfedcba98, 0x76543210};
80000224:	000bac03          	lw	s8,0(s7)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:22
    volatile unsigned int enc_data[4]={0};
80000228:	02012423          	sw	zero,40(sp)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:23
    volatile unsigned int key_buf[4]={0x01234567,0x89abcdef,0xfedcba98, 0x76543210};
8000022c:	004bae03          	lw	t3,4(s7)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:22
    volatile unsigned int enc_data[4]={0};
80000230:	02012623          	sw	zero,44(sp)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:23
    volatile unsigned int key_buf[4]={0x01234567,0x89abcdef,0xfedcba98, 0x76543210};
80000234:	008bae83          	lw	t4,8(s7)
80000238:	03812823          	sw	s8,48(sp)
8000023c:	00cbaf03          	lw	t5,12(s7)
80000240:	03c12a23          	sw	t3,52(sp)
80000244:	03d12c23          	sw	t4,56(sp)
80000248:	03e12e23          	sw	t5,60(sp)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:25
    int x,y;
    volatile unsigned int datax_buf[4]={0};
8000024c:	04012023          	sw	zero,64(sp)
80000250:	04012223          	sw	zero,68(sp)
80000254:	04012423          	sw	zero,72(sp)
80000258:	04012623          	sw	zero,76(sp)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:26
    volatile unsigned int datay_buf[4]={0};
8000025c:	04012823          	sw	zero,80(sp)
80000260:	04012a23          	sw	zero,84(sp)
80000264:	04012c23          	sw	zero,88(sp)
80000268:	04012e23          	sw	zero,92(sp)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:27
    volatile unsigned int enc_datax[4]={0};
8000026c:	06012023          	sw	zero,96(sp)
80000270:	06012223          	sw	zero,100(sp)
80000274:	06012423          	sw	zero,104(sp)
80000278:	06012623          	sw	zero,108(sp)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:28
    volatile unsigned int enc_datay[4]={0};
8000027c:	06012823          	sw	zero,112(sp)
80000280:	06012a23          	sw	zero,116(sp)
80000284:	06012c23          	sw	zero,120(sp)
80000288:	06012e23          	sw	zero,124(sp)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:33
    int left, right, top, down;
    int arr_x[1], arr_y[1];
    int filter_x, filter_y;
    int j;
           _REG32(AXI_BASSE,0) = 1;
8000028c:	10041fb7          	lui	t6,0x10041
80000290:	00100793          	li	a5,1
80000294:	00ffa023          	sw	a5,0(t6) # 10041000 <__stack_size+0x10040800>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:41

        	   x = _REG32A(AXI_BASSE + 4) ;
        	   y = _REG32A(AXI_BASSE + 8) ;
        	   datax_buf[2] = x;
        	   datax_buf[3] = y;
        	   custom_lkey((int)key_buf);
80000298:	03010c13          	addi	s8,sp,48
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:42
        	   custom_ldata((int)datax_buf);
8000029c:	04010b93          	addi	s7,sp,64
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:44
        	   encrypt();
        	   custom_sm4_res((int)enc_datax);
800002a0:	06010b13          	addi	s6,sp,96
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:37
        	   x = _REG32A(AXI_BASSE + 4) ;
800002a4:	10041437          	lui	s0,0x10041
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:46

        	    _REG32(AXI_BASSE,0) = 1;
800002a8:	00100a93          	li	s5,1
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:47
        		 printf("%x%x%x%x\n", enc_datax[0],enc_datax[1],enc_datax[2],enc_datax[3]);
800002ac:	00003a17          	auipc	s4,0x3
800002b0:	334a0a13          	addi	s4,s4,820 # 800035e0 <_read_r+0x14c>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:48
        		 printf("(%d,%d)\n", x,y);
800002b4:	00003997          	auipc	s3,0x3
800002b8:	33898993          	addi	s3,s3,824 # 800035ec <_read_r+0x158>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:37 (discriminator 1)
        	   x = _REG32A(AXI_BASSE + 4) ;
800002bc:	00442483          	lw	s1,4(s0) # 10041004 <__stack_size+0x10040804>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:38 (discriminator 1)
        	   y = _REG32A(AXI_BASSE + 8) ;
800002c0:	00842903          	lw	s2,8(s0)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:39 (discriminator 1)
        	   datax_buf[2] = x;
800002c4:	04912423          	sw	s1,72(sp)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:40 (discriminator 1)
        	   datax_buf[3] = y;
800002c8:	05212623          	sw	s2,76(sp)
custom_lkey():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/insn.h:46 (discriminator 1)
// custom lbuf 
__STATIC_FORCEINLINE void custom_lkey(int addr)
{
    int zero = 0;
    
    asm volatile (
800002cc:	020c207b          	0x20c207b
custom_ldata():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/insn.h:58 (discriminator 1)
// custom sbuf 
__STATIC_FORCEINLINE void custom_ldata(int addr)
{
    int zero = 0;
    
    asm volatile (
800002d0:	040ba07b          	0x40ba07b
encrypt():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/insn.h:95 (discriminator 1)

__STATIC_FORCEINLINE void encrypt()
{
	
	//int zero = 0;
    asm volatile (
800002d4:	0c00607b          	0xc00607b
custom_sm4_res():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/insn.h:84 (discriminator 1)
	    asm volatile (
800002d8:	080b207b          	0x80b207b
main():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:46 (discriminator 1)
        	    _REG32(AXI_BASSE,0) = 1;
800002dc:	01542023          	sw	s5,0(s0)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:47 (discriminator 1)
        		 printf("%x%x%x%x\n", enc_datax[0],enc_datax[1],enc_datax[2],enc_datax[3]);
800002e0:	06012583          	lw	a1,96(sp)
800002e4:	06412603          	lw	a2,100(sp)
800002e8:	06812683          	lw	a3,104(sp)
800002ec:	06c12703          	lw	a4,108(sp)
800002f0:	000a0513          	mv	a0,s4
800002f4:	3e4010ef          	jal	ra,800016d8 <iprintf>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:48 (discriminator 1)
        		 printf("(%d,%d)\n", x,y);
800002f8:	00090613          	mv	a2,s2
800002fc:	00048593          	mv	a1,s1
80000300:	00098513          	mv	a0,s3
80000304:	3d4010ef          	jal	ra,800016d8 <iprintf>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:37 (discriminator 1)
        	   x = _REG32A(AXI_BASSE + 4) ;
80000308:	00442483          	lw	s1,4(s0)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:38 (discriminator 1)
        	   y = _REG32A(AXI_BASSE + 8) ;
8000030c:	00842903          	lw	s2,8(s0)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:39 (discriminator 1)
        	   datax_buf[2] = x;
80000310:	04912423          	sw	s1,72(sp)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:40 (discriminator 1)
        	   datax_buf[3] = y;
80000314:	05212623          	sw	s2,76(sp)
custom_lkey():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/insn.h:46 (discriminator 1)
    asm volatile (
80000318:	020c207b          	0x20c207b
custom_ldata():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/insn.h:58 (discriminator 1)
    asm volatile (
8000031c:	040ba07b          	0x40ba07b
encrypt():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/insn.h:95 (discriminator 1)
    asm volatile (
80000320:	0c00607b          	0xc00607b
custom_sm4_res():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/insn.h:84 (discriminator 1)
	    asm volatile (
80000324:	080b207b          	0x80b207b
main():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:46 (discriminator 1)
        	    _REG32(AXI_BASSE,0) = 1;
80000328:	01542023          	sw	s5,0(s0)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:47 (discriminator 1)
        		 printf("%x%x%x%x\n", enc_datax[0],enc_datax[1],enc_datax[2],enc_datax[3]);
8000032c:	06012583          	lw	a1,96(sp)
80000330:	06412603          	lw	a2,100(sp)
80000334:	06812683          	lw	a3,104(sp)
80000338:	06c12703          	lw	a4,108(sp)
8000033c:	000a0513          	mv	a0,s4
80000340:	398010ef          	jal	ra,800016d8 <iprintf>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../application/main.c:48 (discriminator 1)
        		 printf("(%d,%d)\n", x,y);
80000344:	00090613          	mv	a2,s2
80000348:	00048593          	mv	a1,s1
8000034c:	00098513          	mv	a0,s3
80000350:	388010ef          	jal	ra,800016d8 <iprintf>
80000354:	f69ff06f          	j	800002bc <main+0x1f0>

80000358 <_close>:
_close():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/close.c:10
#undef errno
extern int errno;

__WEAK int _close(int fd)
{
    errno = EBADF;
80000358:	00900793          	li	a5,9
8000035c:	80f1aa23          	sw	a5,-2028(gp) # 90000074 <errno>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/close.c:12
    return -1;
}
80000360:	fff00513          	li	a0,-1
80000364:	00008067          	ret

80000368 <_fstat>:
_fstat():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/fstat.c:12
#undef errno
extern int errno;

__WEAK int _fstat(int file, struct stat *st)
{
    if ((STDOUT_FILENO == file) || (STDERR_FILENO == file)) {
80000368:	fff50513          	addi	a0,a0,-1
8000036c:	00100793          	li	a5,1
80000370:	00a7ea63          	bltu	a5,a0,80000384 <_fstat+0x1c>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/fstat.c:13
        st->st_mode = S_IFCHR;
80000374:	00002337          	lui	t1,0x2
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/fstat.c:14
        return 0;
80000378:	00000513          	li	a0,0
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/fstat.c:13
        st->st_mode = S_IFCHR;
8000037c:	0065a223          	sw	t1,4(a1)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/fstat.c:14
        return 0;
80000380:	00008067          	ret
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/fstat.c:16
    } else {
        errno = EBADF;
80000384:	00900293          	li	t0,9
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/fstat.c:17
        return -1;
80000388:	fff00513          	li	a0,-1
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/fstat.c:16
        errno = EBADF;
8000038c:	8051aa23          	sw	t0,-2028(gp) # 90000074 <errno>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/fstat.c:19
    }
}
80000390:	00008067          	ret

80000394 <_isatty>:
_isatty():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/isatty.c:8
#include <unistd.h>

__WEAK int _isatty(int fd)
{
    return 1;
}
80000394:	00100513          	li	a0,1
80000398:	00008067          	ret

8000039c <_lseek>:
_lseek():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/lseek.c:11
extern int errno;

__WEAK int _lseek(int file, int offset, int whence)
{
    return 0;
}
8000039c:	00000513          	li	a0,0
800003a0:	00008067          	ret

800003a4 <_read>:
_read():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/read.c:12

// #define UART_AUTO_ECHO

__WEAK ssize_t _read(int fd, void* ptr, size_t len)
{
    if (fd != STDIN_FILENO) {
800003a4:	00050663          	beqz	a0,800003b0 <_read+0xc>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/read.c:13
        return -1;
800003a8:	fff00513          	li	a0,-1
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/read.c:22
    readbuf[0] = uart_read(SOC_DEBUG_UART);
#ifdef UART_AUTO_ECHO
    uart_write(SOC_DEBUG_UART, readbuf[0]);
#endif
    return 1;
}
800003ac:	00008067          	ret
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/read.c:11
{
800003b0:	ff010113          	addi	sp,sp,-16
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/read.c:17
    readbuf[0] = uart_read(SOC_DEBUG_UART);
800003b4:	10013537          	lui	a0,0x10013
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/read.c:11
{
800003b8:	00812423          	sw	s0,8(sp)
800003bc:	00112623          	sw	ra,12(sp)
800003c0:	00058413          	mv	s0,a1
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/read.c:17
    readbuf[0] = uart_read(SOC_DEBUG_UART);
800003c4:	564000ef          	jal	ra,80000928 <uart_read>
800003c8:	00050793          	mv	a5,a0
800003cc:	00f40023          	sb	a5,0(s0)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/read.c:22
}
800003d0:	00c12083          	lw	ra,12(sp)
800003d4:	00812403          	lw	s0,8(sp)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/read.c:21
    return 1;
800003d8:	00100513          	li	a0,1
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/read.c:22
}
800003dc:	01010113          	addi	sp,sp,16
800003e0:	00008067          	ret

800003e4 <_sbrk>:
_sbrk():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/sbrk.c:13
{
    extern char _end[];
    extern char _heap_end[];
    static char *curbrk = _end;

    if ((curbrk + incr < _end) || (curbrk + incr > _heap_end)) {
800003e4:	10000717          	auipc	a4,0x10000
800003e8:	c7c70713          	addi	a4,a4,-900 # 90000060 <curbrk.0>
800003ec:	00072783          	lw	a5,0(a4)
800003f0:	94818693          	addi	a3,gp,-1720 # 900001a8 <_end>
800003f4:	00a78533          	add	a0,a5,a0
800003f8:	00d56e63          	bltu	a0,a3,80000414 <_sbrk+0x30>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/sbrk.c:13 (discriminator 1)
800003fc:	1000f297          	auipc	t0,0x1000f
80000400:	40428293          	addi	t0,t0,1028 # 9000f800 <_heap_end>
80000404:	00a2e863          	bltu	t0,a0,80000414 <_sbrk+0x30>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/sbrk.c:17
        return (void *)(-1);
    }

    curbrk += incr;
80000408:	00a72023          	sw	a0,0(a4)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/sbrk.c:19
    return (void *)(curbrk - incr);
}
8000040c:	00078513          	mv	a0,a5
80000410:	00008067          	ret
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/sbrk.c:14
        return (void *)(-1);
80000414:	fff00793          	li	a5,-1
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/sbrk.c:19
}
80000418:	00078513          	mv	a0,a5
8000041c:	00008067          	ret

80000420 <_write>:
_write():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:9
#include <unistd.h>
#include <sys/types.h>
#include <hbird_sdk_hal.h>

__WEAK ssize_t _write(int fd, const void* ptr, size_t len)
{
80000420:	fe010113          	addi	sp,sp,-32
80000424:	01212823          	sw	s2,16(sp)
80000428:	01312623          	sw	s3,12(sp)
8000042c:	00112e23          	sw	ra,28(sp)
80000430:	00812c23          	sw	s0,24(sp)
80000434:	00912a23          	sw	s1,20(sp)
80000438:	01412423          	sw	s4,8(sp)
8000043c:	00058913          	mv	s2,a1
80000440:	00060993          	mv	s3,a2
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:10
    if (!isatty(fd)) {
80000444:	5b4010ef          	jal	ra,800019f8 <isatty>
80000448:	30050a63          	beqz	a0,8000075c <_write+0x33c>
8000044c:	00090413          	mv	s0,s2
80000450:	01390a33          	add	s4,s2,s3
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:15
        return -1;
    }

    const uint8_t *writebuf = (const uint8_t *)ptr;
    for (size_t i = 0; i < len; i++) {
80000454:	0c098a63          	beqz	s3,80000528 <_write+0x108>
80000458:	412a07b3          	sub	a5,s4,s2
8000045c:	0077f093          	andi	ra,a5,7
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:16
        if (writebuf[i] == '\n') {
80000460:	00a00493          	li	s1,10
80000464:	16008e63          	beqz	ra,800005e0 <_write+0x1c0>
80000468:	00100713          	li	a4,1
8000046c:	0ae08263          	beq	ra,a4,80000510 <_write+0xf0>
80000470:	00200293          	li	t0,2
80000474:	08508463          	beq	ra,t0,800004fc <_write+0xdc>
80000478:	00300313          	li	t1,3
8000047c:	06608663          	beq	ra,t1,800004e8 <_write+0xc8>
80000480:	00400393          	li	t2,4
80000484:	04708863          	beq	ra,t2,800004d4 <_write+0xb4>
80000488:	00500513          	li	a0,5
8000048c:	02a08a63          	beq	ra,a0,800004c0 <_write+0xa0>
80000490:	00600593          	li	a1,6
80000494:	00b08c63          	beq	ra,a1,800004ac <_write+0x8c>
80000498:	00094583          	lbu	a1,0(s2)
8000049c:	2a958663          	beq	a1,s1,80000748 <_write+0x328>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
            uart_write(SOC_DEBUG_UART, '\r');
        }
        uart_write(SOC_DEBUG_UART, writebuf[i]);
800004a0:	10013537          	lui	a0,0x10013
800004a4:	408000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:15
    for (size_t i = 0; i < len; i++) {
800004a8:	00190413          	addi	s0,s2,1
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:16
        if (writebuf[i] == '\n') {
800004ac:	00044583          	lbu	a1,0(s0)
800004b0:	28958263          	beq	a1,s1,80000734 <_write+0x314>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
800004b4:	10013537          	lui	a0,0x10013
800004b8:	3f4000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:15
    for (size_t i = 0; i < len; i++) {
800004bc:	00140413          	addi	s0,s0,1
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:16
        if (writebuf[i] == '\n') {
800004c0:	00044583          	lbu	a1,0(s0)
800004c4:	24958e63          	beq	a1,s1,80000720 <_write+0x300>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
800004c8:	10013537          	lui	a0,0x10013
800004cc:	3e0000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:15
    for (size_t i = 0; i < len; i++) {
800004d0:	00140413          	addi	s0,s0,1
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:16
        if (writebuf[i] == '\n') {
800004d4:	00044583          	lbu	a1,0(s0)
800004d8:	22958a63          	beq	a1,s1,8000070c <_write+0x2ec>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
800004dc:	10013537          	lui	a0,0x10013
800004e0:	3cc000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:15
    for (size_t i = 0; i < len; i++) {
800004e4:	00140413          	addi	s0,s0,1
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:16
        if (writebuf[i] == '\n') {
800004e8:	00044583          	lbu	a1,0(s0)
800004ec:	1e958263          	beq	a1,s1,800006d0 <_write+0x2b0>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
800004f0:	10013537          	lui	a0,0x10013
800004f4:	3b8000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:15
    for (size_t i = 0; i < len; i++) {
800004f8:	00140413          	addi	s0,s0,1
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:16
        if (writebuf[i] == '\n') {
800004fc:	00044583          	lbu	a1,0(s0)
80000500:	1e958c63          	beq	a1,s1,800006f8 <_write+0x2d8>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
80000504:	10013537          	lui	a0,0x10013
80000508:	3a4000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:15
    for (size_t i = 0; i < len; i++) {
8000050c:	00140413          	addi	s0,s0,1
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:16
        if (writebuf[i] == '\n') {
80000510:	00044583          	lbu	a1,0(s0)
80000514:	1c958863          	beq	a1,s1,800006e4 <_write+0x2c4>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:15
    for (size_t i = 0; i < len; i++) {
80000518:	00140413          	addi	s0,s0,1
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
8000051c:	10013537          	lui	a0,0x10013
80000520:	38c000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:15
    for (size_t i = 0; i < len; i++) {
80000524:	0b441e63          	bne	s0,s4,800005e0 <_write+0x1c0>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:21
    }
    return len;
80000528:	00098513          	mv	a0,s3
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:22
}
8000052c:	01c12083          	lw	ra,28(sp)
80000530:	01812403          	lw	s0,24(sp)
80000534:	01412483          	lw	s1,20(sp)
80000538:	01012903          	lw	s2,16(sp)
8000053c:	00c12983          	lw	s3,12(sp)
80000540:	00812a03          	lw	s4,8(sp)
80000544:	02010113          	addi	sp,sp,32
80000548:	00008067          	ret
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:17
            uart_write(SOC_DEBUG_UART, '\r');
8000054c:	00d00593          	li	a1,13
80000550:	10013537          	lui	a0,0x10013
80000554:	358000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
80000558:	00044583          	lbu	a1,0(s0)
8000055c:	10013537          	lui	a0,0x10013
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:15
    for (size_t i = 0; i < len; i++) {
80000560:	00140913          	addi	s2,s0,1
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
80000564:	348000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:16
        if (writebuf[i] == '\n') {
80000568:	00144583          	lbu	a1,1(s0)
8000056c:	08958863          	beq	a1,s1,800005fc <_write+0x1dc>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
80000570:	10013537          	lui	a0,0x10013
80000574:	338000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:16
        if (writebuf[i] == '\n') {
80000578:	00194583          	lbu	a1,1(s2)
8000057c:	0a958063          	beq	a1,s1,8000061c <_write+0x1fc>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
80000580:	10013537          	lui	a0,0x10013
80000584:	328000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:16
        if (writebuf[i] == '\n') {
80000588:	00294583          	lbu	a1,2(s2)
8000058c:	0a958863          	beq	a1,s1,8000063c <_write+0x21c>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
80000590:	10013537          	lui	a0,0x10013
80000594:	318000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:16
        if (writebuf[i] == '\n') {
80000598:	00394583          	lbu	a1,3(s2)
8000059c:	0c958063          	beq	a1,s1,8000065c <_write+0x23c>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
800005a0:	10013537          	lui	a0,0x10013
800005a4:	308000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:16
        if (writebuf[i] == '\n') {
800005a8:	00494583          	lbu	a1,4(s2)
800005ac:	0c958863          	beq	a1,s1,8000067c <_write+0x25c>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
800005b0:	10013537          	lui	a0,0x10013
800005b4:	2f8000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:16
        if (writebuf[i] == '\n') {
800005b8:	00594583          	lbu	a1,5(s2)
800005bc:	0e958063          	beq	a1,s1,8000069c <_write+0x27c>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
800005c0:	10013537          	lui	a0,0x10013
800005c4:	2e8000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:16
        if (writebuf[i] == '\n') {
800005c8:	00694583          	lbu	a1,6(s2)
800005cc:	0e958863          	beq	a1,s1,800006bc <_write+0x29c>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:15
    for (size_t i = 0; i < len; i++) {
800005d0:	00790413          	addi	s0,s2,7
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
800005d4:	10013537          	lui	a0,0x10013
800005d8:	2d4000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:15
    for (size_t i = 0; i < len; i++) {
800005dc:	f54406e3          	beq	s0,s4,80000528 <_write+0x108>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:16
        if (writebuf[i] == '\n') {
800005e0:	00044583          	lbu	a1,0(s0)
800005e4:	f69584e3          	beq	a1,s1,8000054c <_write+0x12c>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
800005e8:	10013537          	lui	a0,0x10013
800005ec:	2c0000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:16
        if (writebuf[i] == '\n') {
800005f0:	00144583          	lbu	a1,1(s0)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:15
    for (size_t i = 0; i < len; i++) {
800005f4:	00140913          	addi	s2,s0,1
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:16
        if (writebuf[i] == '\n') {
800005f8:	f6959ce3          	bne	a1,s1,80000570 <_write+0x150>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:17
            uart_write(SOC_DEBUG_UART, '\r');
800005fc:	00d00593          	li	a1,13
80000600:	10013537          	lui	a0,0x10013
80000604:	2a8000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
80000608:	00144583          	lbu	a1,1(s0)
8000060c:	10013537          	lui	a0,0x10013
80000610:	29c000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:16
        if (writebuf[i] == '\n') {
80000614:	00194583          	lbu	a1,1(s2)
80000618:	f69594e3          	bne	a1,s1,80000580 <_write+0x160>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:17
            uart_write(SOC_DEBUG_UART, '\r');
8000061c:	00d00593          	li	a1,13
80000620:	10013537          	lui	a0,0x10013
80000624:	288000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
80000628:	00194583          	lbu	a1,1(s2)
8000062c:	10013537          	lui	a0,0x10013
80000630:	27c000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:16
        if (writebuf[i] == '\n') {
80000634:	00294583          	lbu	a1,2(s2)
80000638:	f4959ce3          	bne	a1,s1,80000590 <_write+0x170>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:17
            uart_write(SOC_DEBUG_UART, '\r');
8000063c:	00d00593          	li	a1,13
80000640:	10013537          	lui	a0,0x10013
80000644:	268000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
80000648:	00294583          	lbu	a1,2(s2)
8000064c:	10013537          	lui	a0,0x10013
80000650:	25c000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:16
        if (writebuf[i] == '\n') {
80000654:	00394583          	lbu	a1,3(s2)
80000658:	f49594e3          	bne	a1,s1,800005a0 <_write+0x180>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:17
            uart_write(SOC_DEBUG_UART, '\r');
8000065c:	00d00593          	li	a1,13
80000660:	10013537          	lui	a0,0x10013
80000664:	248000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
80000668:	00394583          	lbu	a1,3(s2)
8000066c:	10013537          	lui	a0,0x10013
80000670:	23c000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:16
        if (writebuf[i] == '\n') {
80000674:	00494583          	lbu	a1,4(s2)
80000678:	f2959ce3          	bne	a1,s1,800005b0 <_write+0x190>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:17
            uart_write(SOC_DEBUG_UART, '\r');
8000067c:	00d00593          	li	a1,13
80000680:	10013537          	lui	a0,0x10013
80000684:	228000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
80000688:	00494583          	lbu	a1,4(s2)
8000068c:	10013537          	lui	a0,0x10013
80000690:	21c000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:16
        if (writebuf[i] == '\n') {
80000694:	00594583          	lbu	a1,5(s2)
80000698:	f29594e3          	bne	a1,s1,800005c0 <_write+0x1a0>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:17
            uart_write(SOC_DEBUG_UART, '\r');
8000069c:	00d00593          	li	a1,13
800006a0:	10013537          	lui	a0,0x10013
800006a4:	208000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
800006a8:	00594583          	lbu	a1,5(s2)
800006ac:	10013537          	lui	a0,0x10013
800006b0:	1fc000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:16
        if (writebuf[i] == '\n') {
800006b4:	00694583          	lbu	a1,6(s2)
800006b8:	f0959ce3          	bne	a1,s1,800005d0 <_write+0x1b0>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:17
            uart_write(SOC_DEBUG_UART, '\r');
800006bc:	00d00593          	li	a1,13
800006c0:	10013537          	lui	a0,0x10013
800006c4:	1e8000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
800006c8:	00694583          	lbu	a1,6(s2)
800006cc:	f05ff06f          	j	800005d0 <_write+0x1b0>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:17
            uart_write(SOC_DEBUG_UART, '\r');
800006d0:	00d00593          	li	a1,13
800006d4:	10013537          	lui	a0,0x10013
800006d8:	1d4000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
800006dc:	00044583          	lbu	a1,0(s0)
800006e0:	e11ff06f          	j	800004f0 <_write+0xd0>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:17
            uart_write(SOC_DEBUG_UART, '\r');
800006e4:	00d00593          	li	a1,13
800006e8:	10013537          	lui	a0,0x10013
800006ec:	1c0000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
800006f0:	00044583          	lbu	a1,0(s0)
800006f4:	e25ff06f          	j	80000518 <_write+0xf8>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:17
            uart_write(SOC_DEBUG_UART, '\r');
800006f8:	00d00593          	li	a1,13
800006fc:	10013537          	lui	a0,0x10013
80000700:	1ac000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
80000704:	00044583          	lbu	a1,0(s0)
80000708:	dfdff06f          	j	80000504 <_write+0xe4>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:17
            uart_write(SOC_DEBUG_UART, '\r');
8000070c:	00d00593          	li	a1,13
80000710:	10013537          	lui	a0,0x10013
80000714:	198000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
80000718:	00044583          	lbu	a1,0(s0)
8000071c:	dc1ff06f          	j	800004dc <_write+0xbc>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:17
            uart_write(SOC_DEBUG_UART, '\r');
80000720:	00d00593          	li	a1,13
80000724:	10013537          	lui	a0,0x10013
80000728:	184000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
8000072c:	00044583          	lbu	a1,0(s0)
80000730:	d99ff06f          	j	800004c8 <_write+0xa8>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:17
            uart_write(SOC_DEBUG_UART, '\r');
80000734:	00d00593          	li	a1,13
80000738:	10013537          	lui	a0,0x10013
8000073c:	170000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
80000740:	00044583          	lbu	a1,0(s0)
80000744:	d71ff06f          	j	800004b4 <_write+0x94>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:17
            uart_write(SOC_DEBUG_UART, '\r');
80000748:	00d00593          	li	a1,13
8000074c:	10013537          	lui	a0,0x10013
80000750:	15c000ef          	jal	ra,800008ac <uart_write>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
80000754:	00094583          	lbu	a1,0(s2)
80000758:	d49ff06f          	j	800004a0 <_write+0x80>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Stubs/write.c:11
        return -1;
8000075c:	fff00513          	li	a0,-1
80000760:	dcdff06f          	j	8000052c <_write+0x10c>

80000764 <trap_entry>:
trap_entry():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/intexc_hbirdv2.S:159
.align 2
.global trap_entry
.weak trap_entry
trap_entry:
    /* Save the caller saving registers (context) */
    SAVE_CONTEXT
80000764:	fb010113          	addi	sp,sp,-80
80000768:	00112023          	sw	ra,0(sp)
8000076c:	00412223          	sw	tp,4(sp)
80000770:	00512423          	sw	t0,8(sp)
80000774:	00612623          	sw	t1,12(sp)
80000778:	00712823          	sw	t2,16(sp)
8000077c:	00a12a23          	sw	a0,20(sp)
80000780:	00b12c23          	sw	a1,24(sp)
80000784:	00c12e23          	sw	a2,28(sp)
80000788:	02d12023          	sw	a3,32(sp)
8000078c:	02e12223          	sw	a4,36(sp)
80000790:	02f12423          	sw	a5,40(sp)
80000794:	03012c23          	sw	a6,56(sp)
80000798:	03112e23          	sw	a7,60(sp)
8000079c:	05c12023          	sw	t3,64(sp)
800007a0:	05d12223          	sw	t4,68(sp)
800007a4:	05e12423          	sw	t5,72(sp)
800007a8:	05f12623          	sw	t6,76(sp)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/intexc_hbirdv2.S:161
    /* Save the necessary CSR registers */
    SAVE_CSR_CONTEXT
800007ac:	341022f3          	csrr	t0,mepc
800007b0:	02512623          	sw	t0,44(sp)
800007b4:	342022f3          	csrr	t0,mcause
800007b8:	02512823          	sw	t0,48(sp)
800007bc:	300022f3          	csrr	t0,mstatus
800007c0:	02512a23          	sw	t0,52(sp)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/intexc_hbirdv2.S:168
    /*
     * Set the exception handler function arguments
     * argument 1: mcause value
     * argument 2: current stack point(SP) value
     */
    csrr a0, mcause
800007c4:	34202573          	csrr	a0,mcause
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/intexc_hbirdv2.S:169
    mv a1, sp
800007c8:	00010593          	mv	a1,sp
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/intexc_hbirdv2.S:175
    /*
     * TODO: Call the trap handler function
     * By default, the function template is provided in
     * system_Device.c, you can adjust it as you want
     */
    call core_trap_handler
800007cc:	568000ef          	jal	ra,80000d34 <core_trap_handler>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/intexc_hbirdv2.S:178

    /* Restore the necessary CSR registers */
    RESTORE_CSR_CONTEXT
800007d0:	02c12283          	lw	t0,44(sp)
800007d4:	34129073          	csrw	mepc,t0
800007d8:	03012283          	lw	t0,48(sp)
800007dc:	34229073          	csrw	mcause,t0
800007e0:	03412283          	lw	t0,52(sp)
800007e4:	30029073          	csrw	mstatus,t0
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/intexc_hbirdv2.S:180
    /* Restore the caller saving registers (context) */
    RESTORE_CONTEXT
800007e8:	00012083          	lw	ra,0(sp)
800007ec:	00412203          	lw	tp,4(sp)
800007f0:	00812283          	lw	t0,8(sp)
800007f4:	00c12303          	lw	t1,12(sp)
800007f8:	01012383          	lw	t2,16(sp)
800007fc:	01412503          	lw	a0,20(sp)
80000800:	01812583          	lw	a1,24(sp)
80000804:	01c12603          	lw	a2,28(sp)
80000808:	02012683          	lw	a3,32(sp)
8000080c:	02412703          	lw	a4,36(sp)
80000810:	02812783          	lw	a5,40(sp)
80000814:	03812803          	lw	a6,56(sp)
80000818:	03c12883          	lw	a7,60(sp)
8000081c:	04012e03          	lw	t3,64(sp)
80000820:	04412e83          	lw	t4,68(sp)
80000824:	04812f03          	lw	t5,72(sp)
80000828:	04c12f83          	lw	t6,76(sp)
8000082c:	05010113          	addi	sp,sp,80
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/GCC/intexc_hbirdv2.S:183

    /* Return to regular code */
    mret
80000830:	30200073          	mret

80000834 <gpio_iof_config>:
gpio_iof_config():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_gpio.c:5
#include "hbirdv2.h"
#include "hbirdv2_gpio.h"

int32_t gpio_iof_config(GPIO_TypeDef *gpio, uint32_t mask)
{
80000834:	00050793          	mv	a5,a0
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_gpio.c:6
    if (__RARELY(gpio == NULL)) {
80000838:	00050c63          	beqz	a0,80000850 <gpio_iof_config+0x1c>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_gpio.c:9
        return -1;
    }
    gpio->IOFCFG |= mask;
8000083c:	01c52703          	lw	a4,28(a0) # 1001301c <__stack_size+0x1001281c>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_gpio.c:11

    return 0;
80000840:	00000513          	li	a0,0
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_gpio.c:9
    gpio->IOFCFG |= mask;
80000844:	00b765b3          	or	a1,a4,a1
80000848:	00b7ae23          	sw	a1,28(a5)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_gpio.c:11
    return 0;
8000084c:	00008067          	ret
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_gpio.c:7
        return -1;
80000850:	fff00513          	li	a0,-1
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_gpio.c:12
}
80000854:	00008067          	ret

80000858 <uart_init>:
uart_init():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:5
#include "hbirdv2.h"
#include "hbirdv2_uart.h"

int32_t uart_init(UART_TypeDef *uart, uint32_t baudrate)
{
80000858:	00050793          	mv	a5,a0
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:6
    if (__RARELY(uart == NULL)) {
8000085c:	04050463          	beqz	a0,800008a4 <uart_init+0x4c>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:10
        return -1;
    }

    unsigned int uart_div = SystemCoreClock / baudrate - 1;
80000860:	10000717          	auipc	a4,0x10000
80000864:	80472703          	lw	a4,-2044(a4) # 90000064 <SystemCoreClock>
80000868:	02b755b3          	divu	a1,a4,a1
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:11
    uart->LCR = 0x80;
8000086c:	08000293          	li	t0,128
80000870:	00552623          	sw	t0,12(a0)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:14
    uart->DLM = (uart_div >> 8) & 0xFF;
    uart->DLL = uart_div        & 0xFF;
    uart->FCR = 0xC6;
80000874:	0c600813          	li	a6,198
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:15
    uart->LCR = 0x03;
80000878:	00300893          	li	a7,3
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:17

    return 0;
8000087c:	00000513          	li	a0,0
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:10
    unsigned int uart_div = SystemCoreClock / baudrate - 1;
80000880:	fff58313          	addi	t1,a1,-1
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:12
    uart->DLM = (uart_div >> 8) & 0xFF;
80000884:	00835393          	srli	t2,t1,0x8
80000888:	0ff3f613          	andi	a2,t2,255
8000088c:	00c7a223          	sw	a2,4(a5)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:13
    uart->DLL = uart_div        & 0xFF;
80000890:	0ff37693          	andi	a3,t1,255
80000894:	00d7a023          	sw	a3,0(a5)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:14
    uart->FCR = 0xC6;
80000898:	0107a423          	sw	a6,8(a5)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:15
    uart->LCR = 0x03;
8000089c:	0117a623          	sw	a7,12(a5)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:17
    return 0;
800008a0:	00008067          	ret
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:7
        return -1;
800008a4:	fff00513          	li	a0,-1
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:18
}
800008a8:	00008067          	ret

800008ac <uart_write>:
uart_write():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:67

    return 0;
}

int32_t uart_write(UART_TypeDef *uart, uint8_t val)
{
800008ac:	00050793          	mv	a5,a0
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:68
    if (__RARELY(uart == NULL)) {
800008b0:	06050863          	beqz	a0,80000920 <uart_write+0x74>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:73 (discriminator 1)
        return -1;
    }
#ifndef SIMULATION_SPIKE
#ifndef SIMULATION_XLSPIKE
    while ((uart->LSR & 0x20) == 0);
800008b4:	0147a703          	lw	a4,20(a5)
800008b8:	02077293          	andi	t0,a4,32
800008bc:	04029c63          	bnez	t0,80000914 <uart_write+0x68>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:73
800008c0:	0147a303          	lw	t1,20(a5)
800008c4:	02037393          	andi	t2,t1,32
800008c8:	04039663          	bnez	t2,80000914 <uart_write+0x68>
800008cc:	0147a503          	lw	a0,20(a5)
800008d0:	02057613          	andi	a2,a0,32
800008d4:	04061063          	bnez	a2,80000914 <uart_write+0x68>
800008d8:	0147a683          	lw	a3,20(a5)
800008dc:	0206f813          	andi	a6,a3,32
800008e0:	02081a63          	bnez	a6,80000914 <uart_write+0x68>
800008e4:	0147a883          	lw	a7,20(a5)
800008e8:	0208fe13          	andi	t3,a7,32
800008ec:	020e1463          	bnez	t3,80000914 <uart_write+0x68>
800008f0:	0147ae83          	lw	t4,20(a5)
800008f4:	020eff13          	andi	t5,t4,32
800008f8:	000f1e63          	bnez	t5,80000914 <uart_write+0x68>
800008fc:	0147af83          	lw	t6,20(a5)
80000900:	020ff713          	andi	a4,t6,32
80000904:	00071863          	bnez	a4,80000914 <uart_write+0x68>
80000908:	0147a283          	lw	t0,20(a5)
8000090c:	0202f313          	andi	t1,t0,32
80000910:	fa0302e3          	beqz	t1,800008b4 <uart_write+0x8>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:80
    uart->THR = val;
#else
    extern void htif_putc(char ch);
    htif_putc(val);
#endif
    return 0;
80000914:	00000513          	li	a0,0
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:75
    uart->THR = val;
80000918:	00b7a023          	sw	a1,0(a5)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:80
    return 0;
8000091c:	00008067          	ret
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:69
        return -1;
80000920:	fff00513          	li	a0,-1
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:81
}
80000924:	00008067          	ret

80000928 <uart_read>:
uart_read():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:86

uint8_t uart_read(UART_TypeDef *uart)
{
    uint32_t reg;
    if (__RARELY(uart == NULL)) {
80000928:	06050863          	beqz	a0,80000998 <uart_read+0x70>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:90 (discriminator 1)
        return -1;
    }
    
    while ((uart->LSR & 0x1) == 0);
8000092c:	01452783          	lw	a5,20(a0)
80000930:	0017f293          	andi	t0,a5,1
80000934:	04029c63          	bnez	t0,8000098c <uart_read+0x64>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:90
80000938:	01452303          	lw	t1,20(a0)
8000093c:	00137393          	andi	t2,t1,1
80000940:	04039663          	bnez	t2,8000098c <uart_read+0x64>
80000944:	01452583          	lw	a1,20(a0)
80000948:	0015f613          	andi	a2,a1,1
8000094c:	04061063          	bnez	a2,8000098c <uart_read+0x64>
80000950:	01452683          	lw	a3,20(a0)
80000954:	0016f713          	andi	a4,a3,1
80000958:	02071a63          	bnez	a4,8000098c <uart_read+0x64>
8000095c:	01452803          	lw	a6,20(a0)
80000960:	00187893          	andi	a7,a6,1
80000964:	02089463          	bnez	a7,8000098c <uart_read+0x64>
80000968:	01452e03          	lw	t3,20(a0)
8000096c:	001e7e93          	andi	t4,t3,1
80000970:	000e9e63          	bnez	t4,8000098c <uart_read+0x64>
80000974:	01452f03          	lw	t5,20(a0)
80000978:	001f7f93          	andi	t6,t5,1
8000097c:	000f9863          	bnez	t6,8000098c <uart_read+0x64>
80000980:	01452783          	lw	a5,20(a0)
80000984:	0017f293          	andi	t0,a5,1
80000988:	fa0282e3          	beqz	t0,8000092c <uart_read+0x4>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:91
    reg = uart->RBR;
8000098c:	00052503          	lw	a0,0(a0)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:93
    
    return (uint8_t)(reg & 0xFF);
80000990:	0ff57513          	andi	a0,a0,255
80000994:	00008067          	ret
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:87
        return -1;
80000998:	0ff00513          	li	a0,255
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/Drivers/hbirdv2_uart.c:94
}
8000099c:	00008067          	ret

800009a0 <get_cpu_freq>:
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
 * - Load value is 64bits wide.
 * - \ref SysTimer_SetLoadValue
 */
__STATIC_FORCEINLINE uint64_t SysTimer_GetLoadValue(void)
{
    return SysTimer->MTIME;
800009a0:	0200c7b7          	lui	a5,0x200c
800009a4:	ff87a683          	lw	a3,-8(a5) # 200bff8 <__stack_size+0x200b7f8>
800009a8:	ffc7a783          	lw	a5,-4(a5)
get_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:31
    return (delta_mcycle / delta_mtime) * mtime_freq
           + ((delta_mcycle % delta_mtime) * mtime_freq) / delta_mtime;
}

uint32_t get_cpu_freq(void)
{
800009ac:	ff010113          	addi	sp,sp,-16
800009b0:	00112623          	sw	ra,12(sp)
800009b4:	00812423          	sw	s0,8(sp)
800009b8:	00912223          	sw	s1,4(sp)
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
800009bc:	0200c637          	lui	a2,0x200c
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:15
    uint32_t tmp = (uint32_t)SysTimer_GetLoadValue();
800009c0:	00068093          	mv	ra,a3
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
800009c4:	ff862703          	lw	a4,-8(a2) # 200bff8 <__stack_size+0x200b7f8>
800009c8:	ffc62783          	lw	a5,-4(a2)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:17
        start_mtime = (uint32_t)SysTimer_GetLoadValue();
800009cc:	00070813          	mv	a6,a4
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:18
        start_mcycle = __RV_CSR_READ(CSR_MCYCLE);
800009d0:	b0002773          	csrr	a4,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:19
    } while (start_mtime == tmp);
800009d4:	09009863          	bne	ra,a6,80000a64 <get_cpu_freq+0xc4>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
800009d8:	ff862283          	lw	t0,-8(a2)
800009dc:	ffc62783          	lw	a5,-4(a2)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:17
        start_mtime = (uint32_t)SysTimer_GetLoadValue();
800009e0:	00028813          	mv	a6,t0
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:18
        start_mcycle = __RV_CSR_READ(CSR_MCYCLE);
800009e4:	b0002773          	csrr	a4,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:19
    } while (start_mtime == tmp);
800009e8:	06509e63          	bne	ra,t0,80000a64 <get_cpu_freq+0xc4>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
800009ec:	ff862303          	lw	t1,-8(a2)
800009f0:	ffc62783          	lw	a5,-4(a2)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:17
        start_mtime = (uint32_t)SysTimer_GetLoadValue();
800009f4:	00030813          	mv	a6,t1
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:18
        start_mcycle = __RV_CSR_READ(CSR_MCYCLE);
800009f8:	b0002773          	csrr	a4,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:19
    } while (start_mtime == tmp);
800009fc:	06609463          	bne	ra,t1,80000a64 <get_cpu_freq+0xc4>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000a00:	ff862383          	lw	t2,-8(a2)
80000a04:	ffc62783          	lw	a5,-4(a2)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:17
        start_mtime = (uint32_t)SysTimer_GetLoadValue();
80000a08:	00038813          	mv	a6,t2
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:18
        start_mcycle = __RV_CSR_READ(CSR_MCYCLE);
80000a0c:	b0002773          	csrr	a4,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:19
    } while (start_mtime == tmp);
80000a10:	04709a63          	bne	ra,t2,80000a64 <get_cpu_freq+0xc4>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000a14:	ff862403          	lw	s0,-8(a2)
80000a18:	ffc62783          	lw	a5,-4(a2)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:17
        start_mtime = (uint32_t)SysTimer_GetLoadValue();
80000a1c:	00040813          	mv	a6,s0
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:18
        start_mcycle = __RV_CSR_READ(CSR_MCYCLE);
80000a20:	b0002773          	csrr	a4,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:19
    } while (start_mtime == tmp);
80000a24:	04809063          	bne	ra,s0,80000a64 <get_cpu_freq+0xc4>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000a28:	ff862483          	lw	s1,-8(a2)
80000a2c:	ffc62783          	lw	a5,-4(a2)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:17
        start_mtime = (uint32_t)SysTimer_GetLoadValue();
80000a30:	00048813          	mv	a6,s1
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:18
        start_mcycle = __RV_CSR_READ(CSR_MCYCLE);
80000a34:	b0002773          	csrr	a4,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:19
    } while (start_mtime == tmp);
80000a38:	02909663          	bne	ra,s1,80000a64 <get_cpu_freq+0xc4>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000a3c:	ff862503          	lw	a0,-8(a2)
80000a40:	ffc62783          	lw	a5,-4(a2)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:17
        start_mtime = (uint32_t)SysTimer_GetLoadValue();
80000a44:	00050813          	mv	a6,a0
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:18
        start_mcycle = __RV_CSR_READ(CSR_MCYCLE);
80000a48:	b0002773          	csrr	a4,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:19
    } while (start_mtime == tmp);
80000a4c:	00a09c63          	bne	ra,a0,80000a64 <get_cpu_freq+0xc4>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000a50:	ff862583          	lw	a1,-8(a2)
80000a54:	ffc62783          	lw	a5,-4(a2)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:17
        start_mtime = (uint32_t)SysTimer_GetLoadValue();
80000a58:	00058813          	mv	a6,a1
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:18
        start_mcycle = __RV_CSR_READ(CSR_MCYCLE);
80000a5c:	b0002773          	csrr	a4,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:19
    } while (start_mtime == tmp);
80000a60:	f6b082e3          	beq	ra,a1,800009c4 <get_cpu_freq+0x24>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000a64:	0200c8b7          	lui	a7,0x200c
80000a68:	ff88ae03          	lw	t3,-8(a7) # 200bff8 <__stack_size+0x200b7f8>
80000a6c:	ffc8a683          	lw	a3,-4(a7)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:23
        delta_mcycle = __RV_CSR_READ(CSR_MCYCLE) - start_mcycle;
80000a70:	b00025f3          	csrr	a1,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:24
    } while (delta_mtime < n);
80000a74:	07c81a63          	bne	a6,t3,80000ae8 <get_cpu_freq+0x148>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000a78:	ff88ae83          	lw	t4,-8(a7)
80000a7c:	ffc8a683          	lw	a3,-4(a7)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:23
        delta_mcycle = __RV_CSR_READ(CSR_MCYCLE) - start_mcycle;
80000a80:	b00025f3          	csrr	a1,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:24
    } while (delta_mtime < n);
80000a84:	07d81263          	bne	a6,t4,80000ae8 <get_cpu_freq+0x148>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000a88:	ff88af03          	lw	t5,-8(a7)
80000a8c:	ffc8a683          	lw	a3,-4(a7)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:23
        delta_mcycle = __RV_CSR_READ(CSR_MCYCLE) - start_mcycle;
80000a90:	b00025f3          	csrr	a1,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:24
    } while (delta_mtime < n);
80000a94:	05e81a63          	bne	a6,t5,80000ae8 <get_cpu_freq+0x148>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000a98:	ff88af83          	lw	t6,-8(a7)
80000a9c:	ffc8a683          	lw	a3,-4(a7)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:23
        delta_mcycle = __RV_CSR_READ(CSR_MCYCLE) - start_mcycle;
80000aa0:	b00025f3          	csrr	a1,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:24
    } while (delta_mtime < n);
80000aa4:	05f81263          	bne	a6,t6,80000ae8 <get_cpu_freq+0x148>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000aa8:	ff88a783          	lw	a5,-8(a7)
80000aac:	ffc8a683          	lw	a3,-4(a7)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:23
        delta_mcycle = __RV_CSR_READ(CSR_MCYCLE) - start_mcycle;
80000ab0:	b00025f3          	csrr	a1,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:24
    } while (delta_mtime < n);
80000ab4:	02f81a63          	bne	a6,a5,80000ae8 <get_cpu_freq+0x148>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000ab8:	ff88a603          	lw	a2,-8(a7)
80000abc:	ffc8a683          	lw	a3,-4(a7)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:23
        delta_mcycle = __RV_CSR_READ(CSR_MCYCLE) - start_mcycle;
80000ac0:	b00025f3          	csrr	a1,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:24
    } while (delta_mtime < n);
80000ac4:	02c81263          	bne	a6,a2,80000ae8 <get_cpu_freq+0x148>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000ac8:	ff88a083          	lw	ra,-8(a7)
80000acc:	ffc8a683          	lw	a3,-4(a7)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:23
        delta_mcycle = __RV_CSR_READ(CSR_MCYCLE) - start_mcycle;
80000ad0:	b00025f3          	csrr	a1,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:24
    } while (delta_mtime < n);
80000ad4:	00181a63          	bne	a6,ra,80000ae8 <get_cpu_freq+0x148>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000ad8:	ff88a703          	lw	a4,-8(a7)
80000adc:	ffc8a683          	lw	a3,-4(a7)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:23
        delta_mcycle = __RV_CSR_READ(CSR_MCYCLE) - start_mcycle;
80000ae0:	b00025f3          	csrr	a1,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:24
    } while (delta_mtime < n);
80000ae4:	f8e802e3          	beq	a6,a4,80000a68 <get_cpu_freq+0xc8>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000ae8:	ffc8a783          	lw	a5,-4(a7)
80000aec:	ff88a683          	lw	a3,-8(a7)
80000af0:	0200c2b7          	lui	t0,0x200c
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:15
    uint32_t tmp = (uint32_t)SysTimer_GetLoadValue();
80000af4:	00068313          	mv	t1,a3
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000af8:	ff82a383          	lw	t2,-8(t0) # 200bff8 <__stack_size+0x200b7f8>
80000afc:	ffc2a783          	lw	a5,-4(t0)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:17
        start_mtime = (uint32_t)SysTimer_GetLoadValue();
80000b00:	00038e93          	mv	t4,t2
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:18
        start_mcycle = __RV_CSR_READ(CSR_MCYCLE);
80000b04:	b0002f73          	csrr	t5,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:19
    } while (start_mtime == tmp);
80000b08:	08731863          	bne	t1,t2,80000b98 <get_cpu_freq+0x1f8>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000b0c:	ff82a403          	lw	s0,-8(t0)
80000b10:	ffc2a783          	lw	a5,-4(t0)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:17
        start_mtime = (uint32_t)SysTimer_GetLoadValue();
80000b14:	00040e93          	mv	t4,s0
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:18
        start_mcycle = __RV_CSR_READ(CSR_MCYCLE);
80000b18:	b0002f73          	csrr	t5,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:19
    } while (start_mtime == tmp);
80000b1c:	06831e63          	bne	t1,s0,80000b98 <get_cpu_freq+0x1f8>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000b20:	ff82a483          	lw	s1,-8(t0)
80000b24:	ffc2a783          	lw	a5,-4(t0)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:17
        start_mtime = (uint32_t)SysTimer_GetLoadValue();
80000b28:	00048e93          	mv	t4,s1
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:18
        start_mcycle = __RV_CSR_READ(CSR_MCYCLE);
80000b2c:	b0002f73          	csrr	t5,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:19
    } while (start_mtime == tmp);
80000b30:	06931463          	bne	t1,s1,80000b98 <get_cpu_freq+0x1f8>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000b34:	ff82a503          	lw	a0,-8(t0)
80000b38:	ffc2a783          	lw	a5,-4(t0)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:17
        start_mtime = (uint32_t)SysTimer_GetLoadValue();
80000b3c:	00050e93          	mv	t4,a0
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:18
        start_mcycle = __RV_CSR_READ(CSR_MCYCLE);
80000b40:	b0002f73          	csrr	t5,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:19
    } while (start_mtime == tmp);
80000b44:	04a31a63          	bne	t1,a0,80000b98 <get_cpu_freq+0x1f8>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000b48:	ff82a583          	lw	a1,-8(t0)
80000b4c:	ffc2a783          	lw	a5,-4(t0)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:17
        start_mtime = (uint32_t)SysTimer_GetLoadValue();
80000b50:	00058e93          	mv	t4,a1
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:18
        start_mcycle = __RV_CSR_READ(CSR_MCYCLE);
80000b54:	b0002f73          	csrr	t5,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:19
    } while (start_mtime == tmp);
80000b58:	04b31063          	bne	t1,a1,80000b98 <get_cpu_freq+0x1f8>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000b5c:	ff82a803          	lw	a6,-8(t0)
80000b60:	ffc2a783          	lw	a5,-4(t0)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:17
        start_mtime = (uint32_t)SysTimer_GetLoadValue();
80000b64:	00080e93          	mv	t4,a6
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:18
        start_mcycle = __RV_CSR_READ(CSR_MCYCLE);
80000b68:	b0002f73          	csrr	t5,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:19
    } while (start_mtime == tmp);
80000b6c:	03031663          	bne	t1,a6,80000b98 <get_cpu_freq+0x1f8>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000b70:	ff82a883          	lw	a7,-8(t0)
80000b74:	ffc2a783          	lw	a5,-4(t0)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:17
        start_mtime = (uint32_t)SysTimer_GetLoadValue();
80000b78:	00088e93          	mv	t4,a7
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:18
        start_mcycle = __RV_CSR_READ(CSR_MCYCLE);
80000b7c:	b0002f73          	csrr	t5,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:19
    } while (start_mtime == tmp);
80000b80:	01131c63          	bne	t1,a7,80000b98 <get_cpu_freq+0x1f8>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000b84:	ff82ae03          	lw	t3,-8(t0)
80000b88:	ffc2a783          	lw	a5,-4(t0)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:17
        start_mtime = (uint32_t)SysTimer_GetLoadValue();
80000b8c:	000e0e93          	mv	t4,t3
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:18
        start_mcycle = __RV_CSR_READ(CSR_MCYCLE);
80000b90:	b0002f73          	csrr	t5,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:19
    } while (start_mtime == tmp);
80000b94:	f7c302e3          	beq	t1,t3,80000af8 <get_cpu_freq+0x158>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000b98:	0200cfb7          	lui	t6,0x200c
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:24
    } while (delta_mtime < n);
80000b9c:	06300793          	li	a5,99
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000ba0:	ff8fa603          	lw	a2,-8(t6) # 200bff8 <__stack_size+0x200b7f8>
80000ba4:	ffcfa483          	lw	s1,-4(t6)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:22
        delta_mtime = (uint32_t)SysTimer_GetLoadValue() - start_mtime;
80000ba8:	41d60433          	sub	s0,a2,t4
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:23
        delta_mcycle = __RV_CSR_READ(CSR_MCYCLE) - start_mcycle;
80000bac:	b00024f3          	csrr	s1,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:24
    } while (delta_mtime < n);
80000bb0:	0887e863          	bltu	a5,s0,80000c40 <get_cpu_freq+0x2a0>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000bb4:	ff8fa083          	lw	ra,-8(t6)
80000bb8:	ffcfa483          	lw	s1,-4(t6)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:22
        delta_mtime = (uint32_t)SysTimer_GetLoadValue() - start_mtime;
80000bbc:	41d08433          	sub	s0,ra,t4
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:23
        delta_mcycle = __RV_CSR_READ(CSR_MCYCLE) - start_mcycle;
80000bc0:	b00024f3          	csrr	s1,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:24
    } while (delta_mtime < n);
80000bc4:	0687ee63          	bltu	a5,s0,80000c40 <get_cpu_freq+0x2a0>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000bc8:	ff8fa703          	lw	a4,-8(t6)
80000bcc:	ffcfa483          	lw	s1,-4(t6)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:22
        delta_mtime = (uint32_t)SysTimer_GetLoadValue() - start_mtime;
80000bd0:	41d70433          	sub	s0,a4,t4
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:23
        delta_mcycle = __RV_CSR_READ(CSR_MCYCLE) - start_mcycle;
80000bd4:	b00024f3          	csrr	s1,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:24
    } while (delta_mtime < n);
80000bd8:	0687e463          	bltu	a5,s0,80000c40 <get_cpu_freq+0x2a0>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000bdc:	ff8fa683          	lw	a3,-8(t6)
80000be0:	ffcfa483          	lw	s1,-4(t6)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:22
        delta_mtime = (uint32_t)SysTimer_GetLoadValue() - start_mtime;
80000be4:	41d68433          	sub	s0,a3,t4
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:23
        delta_mcycle = __RV_CSR_READ(CSR_MCYCLE) - start_mcycle;
80000be8:	b00024f3          	csrr	s1,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:24
    } while (delta_mtime < n);
80000bec:	0487ea63          	bltu	a5,s0,80000c40 <get_cpu_freq+0x2a0>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000bf0:	ff8fa283          	lw	t0,-8(t6)
80000bf4:	ffcfa483          	lw	s1,-4(t6)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:22
        delta_mtime = (uint32_t)SysTimer_GetLoadValue() - start_mtime;
80000bf8:	41d28433          	sub	s0,t0,t4
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:23
        delta_mcycle = __RV_CSR_READ(CSR_MCYCLE) - start_mcycle;
80000bfc:	b00024f3          	csrr	s1,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:24
    } while (delta_mtime < n);
80000c00:	0487e063          	bltu	a5,s0,80000c40 <get_cpu_freq+0x2a0>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000c04:	ff8fa303          	lw	t1,-8(t6)
80000c08:	ffcfa483          	lw	s1,-4(t6)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:22
        delta_mtime = (uint32_t)SysTimer_GetLoadValue() - start_mtime;
80000c0c:	41d30433          	sub	s0,t1,t4
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:23
        delta_mcycle = __RV_CSR_READ(CSR_MCYCLE) - start_mcycle;
80000c10:	b00024f3          	csrr	s1,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:24
    } while (delta_mtime < n);
80000c14:	0287e663          	bltu	a5,s0,80000c40 <get_cpu_freq+0x2a0>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000c18:	ff8fa383          	lw	t2,-8(t6)
80000c1c:	ffcfa483          	lw	s1,-4(t6)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:22
        delta_mtime = (uint32_t)SysTimer_GetLoadValue() - start_mtime;
80000c20:	41d38433          	sub	s0,t2,t4
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:23
        delta_mcycle = __RV_CSR_READ(CSR_MCYCLE) - start_mcycle;
80000c24:	b00024f3          	csrr	s1,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:24
    } while (delta_mtime < n);
80000c28:	0087ec63          	bltu	a5,s0,80000c40 <get_cpu_freq+0x2a0>
SysTimer_GetLoadValue():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000c2c:	ff8fa403          	lw	s0,-8(t6)
80000c30:	ffcfa483          	lw	s1,-4(t6)
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:22
        delta_mtime = (uint32_t)SysTimer_GetLoadValue() - start_mtime;
80000c34:	41d40433          	sub	s0,s0,t4
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:23
        delta_mcycle = __RV_CSR_READ(CSR_MCYCLE) - start_mcycle;
80000c38:	b00024f3          	csrr	s1,mcycle
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:24
    } while (delta_mtime < n);
80000c3c:	f687f2e3          	bgeu	a5,s0,80000ba0 <get_cpu_freq+0x200>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:23
        delta_mcycle = __RV_CSR_READ(CSR_MCYCLE) - start_mcycle;
80000c40:	41e484b3          	sub	s1,s1,t5
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:27
           + ((delta_mcycle % delta_mtime) * mtime_freq) / delta_mtime;
80000c44:	0284f5b3          	remu	a1,s1,s0
80000c48:	00040613          	mv	a2,s0
80000c4c:	00000693          	li	a3,0
80000c50:	00f59513          	slli	a0,a1,0xf
80000c54:	0115d593          	srli	a1,a1,0x11
80000c58:	54c000ef          	jal	ra,800011a4 <__udivdi3>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:26
    return (delta_mcycle / delta_mtime) * mtime_freq
80000c5c:	0284d833          	divu	a6,s1,s0
get_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:40
    measure_cpu_freq(1);
    // measure for real
    cpu_freq = measure_cpu_freq(100);

    return cpu_freq;
}
80000c60:	00c12083          	lw	ra,12(sp)
80000c64:	00812403          	lw	s0,8(sp)
80000c68:	00412483          	lw	s1,4(sp)
80000c6c:	01010113          	addi	sp,sp,16
measure_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:27
           + ((delta_mcycle % delta_mtime) * mtime_freq) / delta_mtime;
80000c70:	00f81893          	slli	a7,a6,0xf
get_cpu_freq():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/hbirdv2_common.c:40
}
80000c74:	00a88533          	add	a0,a7,a0
80000c78:	00008067          	ret

80000c7c <system_default_exception_handler>:
system_default_exception_handler():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:168
 * \details
 * This function provided a default exception handling code for all exception ids.
 * By default, It will just print some information for debug, Vendor can customize it according to its requirements.
 */
static void system_default_exception_handler(unsigned long mcause, unsigned long sp)
{
80000c7c:	ff010113          	addi	sp,sp,-16
80000c80:	00812423          	sw	s0,8(sp)
80000c84:	00050413          	mv	s0,a0
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:170
    /* TODO: Uncomment this if you have implement printf function */
    printf("Trap in Exception\r\n");
80000c88:	00003517          	auipc	a0,0x3
80000c8c:	85450513          	addi	a0,a0,-1964 # 800034dc <_read_r+0x48>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:168
{
80000c90:	00112623          	sw	ra,12(sp)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:170
    printf("Trap in Exception\r\n");
80000c94:	411000ef          	jal	ra,800018a4 <puts>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:171
    printf("MCAUSE: 0x%lx\r\n", mcause);
80000c98:	00040593          	mv	a1,s0
80000c9c:	00003517          	auipc	a0,0x3
80000ca0:	85450513          	addi	a0,a0,-1964 # 800034f0 <_read_r+0x5c>
80000ca4:	235000ef          	jal	ra,800016d8 <iprintf>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:172
    printf("MEPC  : 0x%lx\r\n", __RV_CSR_READ(CSR_MEPC));
80000ca8:	341025f3          	csrr	a1,mepc
80000cac:	00003517          	auipc	a0,0x3
80000cb0:	85450513          	addi	a0,a0,-1964 # 80003500 <_read_r+0x6c>
80000cb4:	225000ef          	jal	ra,800016d8 <iprintf>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:173
    printf("MTVAL : 0x%lx\r\n", __RV_CSR_READ(CSR_MBADADDR));
80000cb8:	343025f3          	csrr	a1,mtval
80000cbc:	00003517          	auipc	a0,0x3
80000cc0:	85450513          	addi	a0,a0,-1964 # 80003510 <_read_r+0x7c>
80000cc4:	215000ef          	jal	ra,800016d8 <iprintf>
80000cc8:	0000006f          	j	80000cc8 <system_default_exception_handler+0x4c>

80000ccc <system_default_interrupt_handler>:
system_default_interrupt_handler():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:183
 * \brief      System Default Interrupt Handler
 * \details
 * This function provided a default interrupt handling code for all interrupt ids.
 */
static void system_default_interrupt_handler(unsigned long mcause, unsigned long sp)
{
80000ccc:	ff010113          	addi	sp,sp,-16
80000cd0:	00812423          	sw	s0,8(sp)
80000cd4:	00050413          	mv	s0,a0
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:185
    /* TODO: Uncomment this if you have implement printf function */
    printf("Trap in Interrupt\r\n");
80000cd8:	00003517          	auipc	a0,0x3
80000cdc:	84850513          	addi	a0,a0,-1976 # 80003520 <_read_r+0x8c>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:183
{
80000ce0:	00112623          	sw	ra,12(sp)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:185
    printf("Trap in Interrupt\r\n");
80000ce4:	3c1000ef          	jal	ra,800018a4 <puts>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:186
    printf("MCAUSE: 0x%lx\r\n", mcause);
80000ce8:	00040593          	mv	a1,s0
80000cec:	00003517          	auipc	a0,0x3
80000cf0:	80450513          	addi	a0,a0,-2044 # 800034f0 <_read_r+0x5c>
80000cf4:	1e5000ef          	jal	ra,800016d8 <iprintf>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:187
    printf("MEPC  : 0x%lx\r\n", __RV_CSR_READ(CSR_MEPC));
80000cf8:	341025f3          	csrr	a1,mepc
80000cfc:	00003517          	auipc	a0,0x3
80000d00:	80450513          	addi	a0,a0,-2044 # 80003500 <_read_r+0x6c>
80000d04:	1d5000ef          	jal	ra,800016d8 <iprintf>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:188
    printf("MTVAL : 0x%lx\r\n", __RV_CSR_READ(CSR_MBADADDR));
80000d08:	343025f3          	csrr	a1,mtval
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:189
}
80000d0c:	00812403          	lw	s0,8(sp)
80000d10:	00c12083          	lw	ra,12(sp)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:188
    printf("MTVAL : 0x%lx\r\n", __RV_CSR_READ(CSR_MBADADDR));
80000d14:	00002517          	auipc	a0,0x2
80000d18:	7fc50513          	addi	a0,a0,2044 # 80003510 <_read_r+0x7c>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:189
}
80000d1c:	01010113          	addi	sp,sp,16
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:188
    printf("MTVAL : 0x%lx\r\n", __RV_CSR_READ(CSR_MBADADDR));
80000d20:	1b90006f          	j	800016d8 <iprintf>

80000d24 <SystemInit>:
SystemInit():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:125
    SystemCoreClock = SYSTEM_CLOCK;
80000d24:	04c4b7b7          	lui	a5,0x4c4b
80000d28:	40078293          	addi	t0,a5,1024 # 4c4b400 <__stack_size+0x4c4ac00>
80000d2c:	8051a223          	sw	t0,-2044(gp) # 90000064 <SystemCoreClock>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:126
}
80000d30:	00008067          	ret

80000d34 <core_trap_handler>:
core_trap_handler():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:322
 * - If you want to register core exception handler, please use \ref Exception_Register_EXC
 * - If you want to register core interrupt handler, please use \ref Interrupt_Register_CoreIRQ
 * - If you want to register external interrupt handler, please use \ref Interrupt_Register_ExtIRQ
 */
uint32_t core_trap_handler(unsigned long mcause, unsigned long sp)
{
80000d34:	ff010113          	addi	sp,sp,-16
80000d38:	00112623          	sw	ra,12(sp)
80000d3c:	00812423          	sw	s0,8(sp)
80000d40:	00050793          	mv	a5,a0
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:323
    if (mcause & MCAUSE_INTERRUPT) {
80000d44:	04055063          	bgez	a0,80000d84 <core_trap_handler+0x50>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:325
        INT_HANDLER int_handler = NULL;
        uint32_t irqn = (uint32_t)(mcause & 0X00000fff);
80000d48:	01451813          	slli	a6,a0,0x14
80000d4c:	01485893          	srli	a7,a6,0x14
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:326
        if (irqn == IRQ_M_EXT) {
80000d50:	00b00e13          	li	t3,11
80000d54:	09c88863          	beq	a7,t3,80000de4 <core_trap_handler+0xb0>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:338
                }
                PLIC_CompleteInterrupt(irqn);
            }
#endif
        } else {
            int_handler = (INT_HANDLER)(SystemCoreInterruptHandlers[irqn]);
80000d58:	00289e93          	slli	t4,a7,0x2
80000d5c:	82418f13          	addi	t5,gp,-2012 # 90000084 <SystemCoreInterruptHandlers>
80000d60:	01df0fb3          	add	t6,t5,t4
80000d64:	000fa783          	lw	a5,0(t6)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:339
            if (int_handler != NULL) {
80000d68:	00078463          	beqz	a5,80000d70 <core_trap_handler+0x3c>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:340
                int_handler(mcause, sp);
80000d6c:	000780e7          	jalr	a5
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:347
        }
        return 0;
    } else {
        return core_exception_handler(mcause, sp);
    }
}
80000d70:	00c12083          	lw	ra,12(sp)
80000d74:	00812403          	lw	s0,8(sp)
80000d78:	00000513          	li	a0,0
80000d7c:	01010113          	addi	sp,sp,16
80000d80:	00008067          	ret
core_exception_handler():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:362
 * - For the core_exception_handler template, we provided exception register function \ref Exception_Register_EXC
 *   which can help developer to register your exception handler for specific exception number.
 */
static uint32_t core_exception_handler(unsigned long mcause, unsigned long sp)
{
    uint32_t EXCn = (uint32_t)(mcause & 0X00000fff);
80000d84:	01451693          	slli	a3,a0,0x14
80000d88:	0146d093          	srli	ra,a3,0x14
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:365
    EXC_HANDLER exc_handler;

    if ((EXCn < MAX_SYSTEM_EXCEPTION_NUM) && (EXCn >= 0)) {
80000d8c:	00a00613          	li	a2,10
80000d90:	00058713          	mv	a4,a1
80000d94:	02166c63          	bltu	a2,ra,80000dcc <core_trap_handler+0x98>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:366
        exc_handler = (EXC_HANDLER)SystemExceptionHandlers[EXCn];
80000d98:	00209293          	slli	t0,ra,0x2
80000d9c:	84c18393          	addi	t2,gp,-1972 # 900000ac <SystemExceptionHandlers>
80000da0:	00538433          	add	s0,t2,t0
80000da4:	00042303          	lw	t1,0(s0)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:370
    } else {
        exc_handler = (EXC_HANDLER)system_default_exception_handler;
    }
    if (exc_handler != NULL) {
80000da8:	fc0304e3          	beqz	t1,80000d70 <core_trap_handler+0x3c>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:371
        exc_handler(mcause, sp);
80000dac:	00070593          	mv	a1,a4
80000db0:	00078513          	mv	a0,a5
80000db4:	000300e7          	jalr	t1 # 2000 <__stack_size+0x1800>
core_trap_handler():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:347
}
80000db8:	00c12083          	lw	ra,12(sp)
80000dbc:	00812403          	lw	s0,8(sp)
80000dc0:	00000513          	li	a0,0
80000dc4:	01010113          	addi	sp,sp,16
80000dc8:	00008067          	ret
core_exception_handler():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:368
        exc_handler = (EXC_HANDLER)system_default_exception_handler;
80000dcc:	00000317          	auipc	t1,0x0
80000dd0:	eb030313          	addi	t1,t1,-336 # 80000c7c <system_default_exception_handler>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:371
        exc_handler(mcause, sp);
80000dd4:	00070593          	mv	a1,a4
80000dd8:	00078513          	mv	a0,a5
80000ddc:	000300e7          	jalr	t1
80000de0:	fd9ff06f          	j	80000db8 <core_trap_handler+0x84>
PLIC_ClaimInterrupt():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:273
 * \sa
 * - \ref PLIC_CompleteInterrupt
 */
__STATIC_FORCEINLINE uint32_t PLIC_ClaimInterrupt(void)
{
    uint32_t hartid = __RV_CSR_READ(CSR_MHARTID);
80000de4:	f1402773          	csrr	a4,mhartid
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:274
    volatile uint32_t *claim_reg = (uint32_t *)((PLIC_BASE) + PLIC_CLAIM_OFFSET + \
80000de8:	0c2000b7          	lui	ra,0xc200
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:275
                    + (hartid << PLIC_CLAIM_SHIFT_PER_TARGET));
80000dec:	00c71693          	slli	a3,a4,0xc
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:274
    volatile uint32_t *claim_reg = (uint32_t *)((PLIC_BASE) + PLIC_CLAIM_OFFSET + \
80000df0:	00408613          	addi	a2,ra,4 # c200004 <__stack_size+0xc1ff804>
80000df4:	00c68333          	add	t1,a3,a2
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:277

    return (*claim_reg);
80000df8:	00032403          	lw	s0,0(t1)
core_trap_handler():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:329
            if (irqn < __PLIC_INTNUM) {
80000dfc:	01000293          	li	t0,16
80000e00:	f682e8e3          	bltu	t0,s0,80000d70 <core_trap_handler+0x3c>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:330
                int_handler = (INT_HANDLER)(SystemExtInterruptHandlers[irqn]);
80000e04:	00241393          	slli	t2,s0,0x2
80000e08:	87818813          	addi	a6,gp,-1928 # 900000d8 <SystemExtInterruptHandlers>
80000e0c:	007808b3          	add	a7,a6,t2
80000e10:	0008ae03          	lw	t3,0(a7)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:331
                if (int_handler != NULL) {
80000e14:	000e0463          	beqz	t3,80000e1c <core_trap_handler+0xe8>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:332
                    int_handler(mcause, sp);
80000e18:	000e00e7          	jalr	t3
PLIC_CompleteInterrupt():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:298
 * \sa
 * - \ref PLIC_ClaimInterrupt
 */
__STATIC_FORCEINLINE void PLIC_CompleteInterrupt(uint32_t source)
{
    uint32_t hartid = __RV_CSR_READ(CSR_MHARTID);
80000e1c:	f1402573          	csrr	a0,mhartid
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:299
    volatile uint32_t *complete_reg = (uint32_t *)((PLIC_BASE) + PLIC_CLAIM_OFFSET + \
80000e20:	0c200eb7          	lui	t4,0xc200
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:300
                    + (hartid << PLIC_CLAIM_SHIFT_PER_TARGET));
80000e24:	00c51593          	slli	a1,a0,0xc
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:299
    volatile uint32_t *complete_reg = (uint32_t *)((PLIC_BASE) + PLIC_CLAIM_OFFSET + \
80000e28:	004e8f13          	addi	t5,t4,4 # c200004 <__stack_size+0xc1ff804>
80000e2c:	01e58fb3          	add	t6,a1,t5
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:302

    *complete_reg = source;
80000e30:	008fa023          	sw	s0,0(t6)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:303
}
80000e34:	f3dff06f          	j	80000d70 <core_trap_handler+0x3c>

80000e38 <_premain_init>:
_premain_init():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:464
 * For RISC-V gnu toolchain, _init function might not be called
 * by __libc_init_array function, so we defined a new function
 * to do initialization
 */
void _premain_init(void)
{
80000e38:	ff010113          	addi	sp,sp,-16
80000e3c:	00112623          	sw	ra,12(sp)
80000e40:	00812423          	sw	s0,8(sp)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:466
    /* TODO: Add your own initialization code here, called before main */
    SystemCoreClock = get_cpu_freq();
80000e44:	b5dff0ef          	jal	ra,800009a0 <get_cpu_freq>
80000e48:	00050793          	mv	a5,a0
80000e4c:	80418413          	addi	s0,gp,-2044 # 90000064 <SystemCoreClock>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:468
#if ! defined(SIMULATION_SPIKE) && ! defined(SIMULATION_XLSPIKE)
    gpio_iof_config(GPIOA, IOF_UART_MASK);
80000e50:	000305b7          	lui	a1,0x30
80000e54:	10012537          	lui	a0,0x10012
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:466
    SystemCoreClock = get_cpu_freq();
80000e58:	00f42023          	sw	a5,0(s0)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:468
    gpio_iof_config(GPIOA, IOF_UART_MASK);
80000e5c:	9d9ff0ef          	jal	ra,80000834 <gpio_iof_config>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:469
    uart_init(SOC_DEBUG_UART, 115200);
80000e60:	0001c5b7          	lui	a1,0x1c
80000e64:	20058593          	addi	a1,a1,512 # 1c200 <__stack_size+0x1ba00>
80000e68:	10013537          	lui	a0,0x10013
80000e6c:	9edff0ef          	jal	ra,80000858 <uart_init>
SystemBannerPrint():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:381
    printf("HummingBird SDK Build Time: %s, %s\r\n", __DATE__, __TIME__);
80000e70:	00002617          	auipc	a2,0x2
80000e74:	6c460613          	addi	a2,a2,1732 # 80003534 <_read_r+0xa0>
80000e78:	00002597          	auipc	a1,0x2
80000e7c:	6c858593          	addi	a1,a1,1736 # 80003540 <_read_r+0xac>
80000e80:	00002517          	auipc	a0,0x2
80000e84:	6cc50513          	addi	a0,a0,1740 # 8000354c <_read_r+0xb8>
80000e88:	051000ef          	jal	ra,800016d8 <iprintf>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:383
    printf("Download Mode: %s\r\n", DOWNLOAD_MODE_STRING);
80000e8c:	00002597          	auipc	a1,0x2
80000e90:	6e858593          	addi	a1,a1,1768 # 80003574 <_read_r+0xe0>
80000e94:	00002517          	auipc	a0,0x2
80000e98:	6e450513          	addi	a0,a0,1764 # 80003578 <_read_r+0xe4>
80000e9c:	03d000ef          	jal	ra,800016d8 <iprintf>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:385
    printf("CPU Frequency %lu Hz\r\n", SystemCoreClock);
80000ea0:	00042583          	lw	a1,0(s0)
80000ea4:	00002517          	auipc	a0,0x2
80000ea8:	6e850513          	addi	a0,a0,1768 # 8000358c <_read_r+0xf8>
80000eac:	02d000ef          	jal	ra,800016d8 <iprintf>
Interrupt_Init():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:216
        SystemExtInterruptHandlers[i] = (unsigned long)system_default_interrupt_handler;
80000eb0:	00000297          	auipc	t0,0x0
80000eb4:	e1c28293          	addi	t0,t0,-484 # 80000ccc <system_default_interrupt_handler>
80000eb8:	87818713          	addi	a4,gp,-1928 # 900000d8 <SystemExtInterruptHandlers>
Exception_Init():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:201
        SystemExceptionHandlers[i] = (unsigned long)system_default_exception_handler;
80000ebc:	00000617          	auipc	a2,0x0
80000ec0:	dc060613          	addi	a2,a2,-576 # 80000c7c <system_default_exception_handler>
80000ec4:	84c18693          	addi	a3,gp,-1972 # 900000ac <SystemExceptionHandlers>
Interrupt_Init():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:219
        SystemCoreInterruptHandlers[i] = (unsigned long)system_default_interrupt_handler;
80000ec8:	82418313          	addi	t1,gp,-2012 # 90000084 <SystemCoreInterruptHandlers>
Exception_Init():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:201
        SystemExceptionHandlers[i] = (unsigned long)system_default_exception_handler;
80000ecc:	00c6a023          	sw	a2,0(a3)
80000ed0:	00c6a223          	sw	a2,4(a3)
80000ed4:	00c6a423          	sw	a2,8(a3)
80000ed8:	00c6a623          	sw	a2,12(a3)
80000edc:	00c6a823          	sw	a2,16(a3)
80000ee0:	00c6aa23          	sw	a2,20(a3)
80000ee4:	00c6ac23          	sw	a2,24(a3)
80000ee8:	00c6ae23          	sw	a2,28(a3)
80000eec:	02c6a023          	sw	a2,32(a3)
80000ef0:	02c6a223          	sw	a2,36(a3)
80000ef4:	02c6a423          	sw	a2,40(a3)
Interrupt_Init():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:216
        SystemExtInterruptHandlers[i] = (unsigned long)system_default_interrupt_handler;
80000ef8:	00572023          	sw	t0,0(a4)
80000efc:	00572223          	sw	t0,4(a4)
80000f00:	00572423          	sw	t0,8(a4)
80000f04:	00572623          	sw	t0,12(a4)
80000f08:	00572823          	sw	t0,16(a4)
80000f0c:	00572a23          	sw	t0,20(a4)
80000f10:	00572c23          	sw	t0,24(a4)
80000f14:	00572e23          	sw	t0,28(a4)
80000f18:	02572023          	sw	t0,32(a4)
80000f1c:	02572223          	sw	t0,36(a4)
80000f20:	02572423          	sw	t0,40(a4)
80000f24:	02572623          	sw	t0,44(a4)
80000f28:	02572823          	sw	t0,48(a4)
80000f2c:	02572a23          	sw	t0,52(a4)
80000f30:	02572c23          	sw	t0,56(a4)
80000f34:	02572e23          	sw	t0,60(a4)
80000f38:	04572023          	sw	t0,64(a4)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:219
        SystemCoreInterruptHandlers[i] = (unsigned long)system_default_interrupt_handler;
80000f3c:	00532023          	sw	t0,0(t1)
80000f40:	00532223          	sw	t0,4(t1)
80000f44:	00532423          	sw	t0,8(t1)
80000f48:	00532623          	sw	t0,12(t1)
80000f4c:	00532823          	sw	t0,16(t1)
80000f50:	00532a23          	sw	t0,20(t1)
80000f54:	00532c23          	sw	t0,24(t1)
80000f58:	00532e23          	sw	t0,28(t1)
80000f5c:	02532023          	sw	t0,32(t1)
80000f60:	02532223          	sw	t0,36(t1)
PLIC_DisableInterrupt():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:191
    uint32_t hartid = __RV_CSR_READ(CSR_MHARTID);
80000f64:	f14023f3          	csrr	t2,mhartid
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:193
                    (hartid << PLIC_ENABLE_SHIFT_PER_TARGET) + (source >> 5) * 4);
80000f68:	0c002837          	lui	a6,0xc002
80000f6c:	00739513          	slli	a0,t2,0x7
80000f70:	010508b3          	add	a7,a0,a6
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:195
    uint32_t current = *enable_reg;
80000f74:	0008ae03          	lw	t3,0(a7)
PLIC_SetPriority():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:237
    *priority_reg = priority;
80000f78:	0c000eb7          	lui	t4,0xc000
PLIC_DisableInterrupt():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:196
    current = current & (~(1<<(source&0x1F)));
80000f7c:	ffee7f13          	andi	t5,t3,-2
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:197
    *enable_reg = current;
80000f80:	01e8a023          	sw	t5,0(a7)
PLIC_SetPriority():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:237
    *priority_reg = priority;
80000f84:	000ea023          	sw	zero,0(t4) # c000000 <__stack_size+0xbfff800>
PLIC_DisableInterrupt():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:191
    uint32_t hartid = __RV_CSR_READ(CSR_MHARTID);
80000f88:	f1402ff3          	csrr	t6,mhartid
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:193
                    (hartid << PLIC_ENABLE_SHIFT_PER_TARGET) + (source >> 5) * 4);
80000f8c:	007f9793          	slli	a5,t6,0x7
80000f90:	01078433          	add	s0,a5,a6
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:195
    uint32_t current = *enable_reg;
80000f94:	00042583          	lw	a1,0(s0)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:196
    current = current & (~(1<<(source&0x1F)));
80000f98:	ffd5f613          	andi	a2,a1,-3
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:197
    *enable_reg = current;
80000f9c:	00c42023          	sw	a2,0(s0)
PLIC_SetPriority():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:237
    *priority_reg = priority;
80000fa0:	000ea223          	sw	zero,4(t4)
PLIC_DisableInterrupt():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:191
    uint32_t hartid = __RV_CSR_READ(CSR_MHARTID);
80000fa4:	f14026f3          	csrr	a3,mhartid
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:193
                    (hartid << PLIC_ENABLE_SHIFT_PER_TARGET) + (source >> 5) * 4);
80000fa8:	00769293          	slli	t0,a3,0x7
80000fac:	01028733          	add	a4,t0,a6
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:195
    uint32_t current = *enable_reg;
80000fb0:	00072303          	lw	t1,0(a4)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:196
    current = current & (~(1<<(source&0x1F)));
80000fb4:	ffb37393          	andi	t2,t1,-5
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:197
    *enable_reg = current;
80000fb8:	00772023          	sw	t2,0(a4)
PLIC_SetPriority():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:237
    *priority_reg = priority;
80000fbc:	000ea423          	sw	zero,8(t4)
PLIC_DisableInterrupt():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:191
    uint32_t hartid = __RV_CSR_READ(CSR_MHARTID);
80000fc0:	f1402573          	csrr	a0,mhartid
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:193
                    (hartid << PLIC_ENABLE_SHIFT_PER_TARGET) + (source >> 5) * 4);
80000fc4:	00751893          	slli	a7,a0,0x7
80000fc8:	01088e33          	add	t3,a7,a6
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:195
    uint32_t current = *enable_reg;
80000fcc:	000e2f03          	lw	t5,0(t3)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:196
    current = current & (~(1<<(source&0x1F)));
80000fd0:	ff7f7f93          	andi	t6,t5,-9
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:197
    *enable_reg = current;
80000fd4:	01fe2023          	sw	t6,0(t3)
PLIC_SetPriority():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:237
    *priority_reg = priority;
80000fd8:	000ea623          	sw	zero,12(t4)
PLIC_DisableInterrupt():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:191
    uint32_t hartid = __RV_CSR_READ(CSR_MHARTID);
80000fdc:	f14027f3          	csrr	a5,mhartid
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:193
                    (hartid << PLIC_ENABLE_SHIFT_PER_TARGET) + (source >> 5) * 4);
80000fe0:	00779413          	slli	s0,a5,0x7
80000fe4:	010405b3          	add	a1,s0,a6
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:195
    uint32_t current = *enable_reg;
80000fe8:	0005a603          	lw	a2,0(a1)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:196
    current = current & (~(1<<(source&0x1F)));
80000fec:	fef67693          	andi	a3,a2,-17
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:197
    *enable_reg = current;
80000ff0:	00d5a023          	sw	a3,0(a1)
PLIC_SetPriority():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:237
    *priority_reg = priority;
80000ff4:	000ea823          	sw	zero,16(t4)
PLIC_DisableInterrupt():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:191
    uint32_t hartid = __RV_CSR_READ(CSR_MHARTID);
80000ff8:	f14022f3          	csrr	t0,mhartid
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:193
                    (hartid << PLIC_ENABLE_SHIFT_PER_TARGET) + (source >> 5) * 4);
80000ffc:	00729713          	slli	a4,t0,0x7
80001000:	01070333          	add	t1,a4,a6
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:195
    uint32_t current = *enable_reg;
80001004:	00032383          	lw	t2,0(t1)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:196
    current = current & (~(1<<(source&0x1F)));
80001008:	fdf3f513          	andi	a0,t2,-33
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:197
    *enable_reg = current;
8000100c:	00a32023          	sw	a0,0(t1)
PLIC_SetPriority():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:237
    *priority_reg = priority;
80001010:	000eaa23          	sw	zero,20(t4)
PLIC_DisableInterrupt():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:191
    uint32_t hartid = __RV_CSR_READ(CSR_MHARTID);
80001014:	f14028f3          	csrr	a7,mhartid
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:193
                    (hartid << PLIC_ENABLE_SHIFT_PER_TARGET) + (source >> 5) * 4);
80001018:	00789e13          	slli	t3,a7,0x7
8000101c:	010e0f33          	add	t5,t3,a6
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:195
    uint32_t current = *enable_reg;
80001020:	000f2f83          	lw	t6,0(t5)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:196
    current = current & (~(1<<(source&0x1F)));
80001024:	fbfff793          	andi	a5,t6,-65
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:197
    *enable_reg = current;
80001028:	00ff2023          	sw	a5,0(t5)
PLIC_SetPriority():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:237
    *priority_reg = priority;
8000102c:	000eac23          	sw	zero,24(t4)
PLIC_DisableInterrupt():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:191
    uint32_t hartid = __RV_CSR_READ(CSR_MHARTID);
80001030:	f1402473          	csrr	s0,mhartid
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:193
                    (hartid << PLIC_ENABLE_SHIFT_PER_TARGET) + (source >> 5) * 4);
80001034:	00741593          	slli	a1,s0,0x7
80001038:	010586b3          	add	a3,a1,a6
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:195
    uint32_t current = *enable_reg;
8000103c:	0006a603          	lw	a2,0(a3)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:196
    current = current & (~(1<<(source&0x1F)));
80001040:	f7f67293          	andi	t0,a2,-129
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:197
    *enable_reg = current;
80001044:	0056a023          	sw	t0,0(a3)
PLIC_SetPriority():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:237
    *priority_reg = priority;
80001048:	000eae23          	sw	zero,28(t4)
PLIC_DisableInterrupt():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:191
    uint32_t hartid = __RV_CSR_READ(CSR_MHARTID);
8000104c:	f1402773          	csrr	a4,mhartid
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:193
                    (hartid << PLIC_ENABLE_SHIFT_PER_TARGET) + (source >> 5) * 4);
80001050:	00771313          	slli	t1,a4,0x7
80001054:	010303b3          	add	t2,t1,a6
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:195
    uint32_t current = *enable_reg;
80001058:	0003a503          	lw	a0,0(t2)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:196
    current = current & (~(1<<(source&0x1F)));
8000105c:	eff57893          	andi	a7,a0,-257
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:197
    *enable_reg = current;
80001060:	0113a023          	sw	a7,0(t2)
PLIC_SetPriority():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:237
    *priority_reg = priority;
80001064:	020ea023          	sw	zero,32(t4)
PLIC_DisableInterrupt():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:191
    uint32_t hartid = __RV_CSR_READ(CSR_MHARTID);
80001068:	f1402e73          	csrr	t3,mhartid
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:193
                    (hartid << PLIC_ENABLE_SHIFT_PER_TARGET) + (source >> 5) * 4);
8000106c:	007e1f13          	slli	t5,t3,0x7
80001070:	010f0fb3          	add	t6,t5,a6
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:195
    uint32_t current = *enable_reg;
80001074:	000fa783          	lw	a5,0(t6)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:196
    current = current & (~(1<<(source&0x1F)));
80001078:	dff7f413          	andi	s0,a5,-513
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:197
    *enable_reg = current;
8000107c:	008fa023          	sw	s0,0(t6)
PLIC_SetPriority():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:237
    *priority_reg = priority;
80001080:	020ea223          	sw	zero,36(t4)
PLIC_DisableInterrupt():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:191
    uint32_t hartid = __RV_CSR_READ(CSR_MHARTID);
80001084:	f14025f3          	csrr	a1,mhartid
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:193
                    (hartid << PLIC_ENABLE_SHIFT_PER_TARGET) + (source >> 5) * 4);
80001088:	00759693          	slli	a3,a1,0x7
8000108c:	010682b3          	add	t0,a3,a6
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:195
    uint32_t current = *enable_reg;
80001090:	0002a603          	lw	a2,0(t0)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:196
    current = current & (~(1<<(source&0x1F)));
80001094:	bff67713          	andi	a4,a2,-1025
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:197
    *enable_reg = current;
80001098:	00e2a023          	sw	a4,0(t0)
PLIC_SetPriority():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:237
    *priority_reg = priority;
8000109c:	020ea423          	sw	zero,40(t4)
PLIC_DisableInterrupt():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:191
    uint32_t hartid = __RV_CSR_READ(CSR_MHARTID);
800010a0:	f1402373          	csrr	t1,mhartid
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:193
                    (hartid << PLIC_ENABLE_SHIFT_PER_TARGET) + (source >> 5) * 4);
800010a4:	00731393          	slli	t2,t1,0x7
800010a8:	010388b3          	add	a7,t2,a6
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:195
    uint32_t current = *enable_reg;
800010ac:	0008ae03          	lw	t3,0(a7)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:196
    current = current & (~(1<<(source&0x1F)));
800010b0:	ffffff37          	lui	t5,0xfffff
800010b4:	7fff0513          	addi	a0,t5,2047 # fffff7ff <_sp+0x6ffef7ff>
800010b8:	00ae7fb3          	and	t6,t3,a0
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:197
    *enable_reg = current;
800010bc:	01f8a023          	sw	t6,0(a7)
PLIC_SetPriority():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:237
    *priority_reg = priority;
800010c0:	020ea623          	sw	zero,44(t4)
PLIC_DisableInterrupt():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:191
    uint32_t hartid = __RV_CSR_READ(CSR_MHARTID);
800010c4:	f14027f3          	csrr	a5,mhartid
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:193
                    (hartid << PLIC_ENABLE_SHIFT_PER_TARGET) + (source >> 5) * 4);
800010c8:	00779413          	slli	s0,a5,0x7
800010cc:	010406b3          	add	a3,s0,a6
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:195
    uint32_t current = *enable_reg;
800010d0:	0006a583          	lw	a1,0(a3)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:196
    current = current & (~(1<<(source&0x1F)));
800010d4:	ffff0293          	addi	t0,t5,-1
800010d8:	0055f633          	and	a2,a1,t0
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:197
    *enable_reg = current;
800010dc:	00c6a023          	sw	a2,0(a3)
PLIC_SetPriority():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:237
    *priority_reg = priority;
800010e0:	020ea823          	sw	zero,48(t4)
PLIC_DisableInterrupt():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:191
    uint32_t hartid = __RV_CSR_READ(CSR_MHARTID);
800010e4:	f1402773          	csrr	a4,mhartid
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:193
                    (hartid << PLIC_ENABLE_SHIFT_PER_TARGET) + (source >> 5) * 4);
800010e8:	00771313          	slli	t1,a4,0x7
800010ec:	010303b3          	add	t2,t1,a6
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:195
    uint32_t current = *enable_reg;
800010f0:	0003a883          	lw	a7,0(t2)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:196
    current = current & (~(1<<(source&0x1F)));
800010f4:	ffffee37          	lui	t3,0xffffe
800010f8:	fffe0f13          	addi	t5,t3,-1 # ffffdfff <_sp+0x6ffedfff>
800010fc:	01e8f533          	and	a0,a7,t5
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:197
    *enable_reg = current;
80001100:	00a3a023          	sw	a0,0(t2)
PLIC_SetPriority():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:237
    *priority_reg = priority;
80001104:	020eaa23          	sw	zero,52(t4)
PLIC_DisableInterrupt():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:191
    uint32_t hartid = __RV_CSR_READ(CSR_MHARTID);
80001108:	f1402ff3          	csrr	t6,mhartid
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:193
                    (hartid << PLIC_ENABLE_SHIFT_PER_TARGET) + (source >> 5) * 4);
8000110c:	007f9793          	slli	a5,t6,0x7
80001110:	01078433          	add	s0,a5,a6
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:195
    uint32_t current = *enable_reg;
80001114:	00042683          	lw	a3,0(s0)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:196
    current = current & (~(1<<(source&0x1F)));
80001118:	ffffc5b7          	lui	a1,0xffffc
8000111c:	fff58293          	addi	t0,a1,-1 # ffffbfff <_sp+0x6ffebfff>
80001120:	0056f633          	and	a2,a3,t0
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:197
    *enable_reg = current;
80001124:	00c42023          	sw	a2,0(s0)
PLIC_SetPriority():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:237
    *priority_reg = priority;
80001128:	020eac23          	sw	zero,56(t4)
PLIC_DisableInterrupt():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:191
    uint32_t hartid = __RV_CSR_READ(CSR_MHARTID);
8000112c:	f1402773          	csrr	a4,mhartid
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:193
                    (hartid << PLIC_ENABLE_SHIFT_PER_TARGET) + (source >> 5) * 4);
80001130:	00771313          	slli	t1,a4,0x7
80001134:	010303b3          	add	t2,t1,a6
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:195
    uint32_t current = *enable_reg;
80001138:	0003a883          	lw	a7,0(t2)
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:196
    current = current & (~(1<<(source&0x1F)));
8000113c:	ffff8e37          	lui	t3,0xffff8
80001140:	fffe0f13          	addi	t5,t3,-1 # ffff7fff <_sp+0x6ffe7fff>
80001144:	01e8f533          	and	a0,a7,t5
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:197
    *enable_reg = current;
80001148:	00a3a023          	sw	a0,0(t2)
PLIC_SetPriority():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:237
    *priority_reg = priority;
8000114c:	020eae23          	sw	zero,60(t4)
PLIC_DisableInterrupt():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:191
    uint32_t hartid = __RV_CSR_READ(CSR_MHARTID);
80001150:	f1402ff3          	csrr	t6,mhartid
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:193
                    (hartid << PLIC_ENABLE_SHIFT_PER_TARGET) + (source >> 5) * 4);
80001154:	007f9793          	slli	a5,t6,0x7
80001158:	01078833          	add	a6,a5,a6
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:195
    uint32_t current = *enable_reg;
8000115c:	00082403          	lw	s0,0(a6) # c002000 <__stack_size+0xc001800>
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:196
    current = current & (~(1<<(source&0x1F)));
80001160:	ffff06b7          	lui	a3,0xffff0
80001164:	fff68593          	addi	a1,a3,-1 # fffeffff <_sp+0x6ffdffff>
80001168:	00b472b3          	and	t0,s0,a1
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:197
    *enable_reg = current;
8000116c:	00582023          	sw	t0,0(a6)
PLIC_SetPriority():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:237
    *priority_reg = priority;
80001170:	040ea023          	sw	zero,64(t4)
PLIC_SetThreshold():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:135
    uint32_t hartid = __RV_CSR_READ(CSR_MHARTID);
80001174:	f1402ef3          	csrr	t4,mhartid
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:137
                    PLIC_THRESHOLD_OFFSET + (hartid << PLIC_THRESHOLD_SHIFT_PER_TARGET));
80001178:	0c200737          	lui	a4,0xc200
_premain_init():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:481
    Interrupt_Init();
#if defined(__PLIC_PRESENT) && __PLIC_PRESENT == 1
    /* PLIC initilization */
    PLIC_Init(__PLIC_INTNUM);
#endif
}
8000117c:	00c12083          	lw	ra,12(sp)
80001180:	00812403          	lw	s0,8(sp)
PLIC_SetThreshold():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:137
80001184:	00ce9613          	slli	a2,t4,0xc
80001188:	00e60333          	add	t1,a2,a4
E:\VMshare\e203\zhengdian_E203\sdk\decmec\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:139
    *thresh_reg = thresh;
8000118c:	00032023          	sw	zero,0(t1)
_premain_init():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:481
80001190:	01010113          	addi	sp,sp,16
80001194:	00008067          	ret

80001198 <_postmain_fini>:
_postmain_fini():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:507
#ifdef SIMULATION_RTL
extern void rtlsim_exit(int status);
    rtlsim_exit(status);
#endif

}
80001198:	00008067          	ret

8000119c <_init>:
_init():
E:\VMshare\e203\zhengdian_E203\sdk\decmec\Debug/../hbird_sdk/SoC/hbirdv2/Common/Source/system_hbirdv2.c:521
 * Please use \ref _premain_init function now
 */
void _init(void)
{
    /* Don't put any code here, please use _premain_init now */
}
8000119c:	00008067          	ret

800011a0 <_fini>:
_fini():
800011a0:	00008067          	ret

800011a4 <__udivdi3>:
__udivdi3():
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1319
800011a4:	00050893          	mv	a7,a0
800011a8:	00058793          	mv	a5,a1
__udivmoddi4():
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1024
800011ac:	00060813          	mv	a6,a2
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1025
800011b0:	00068513          	mv	a0,a3
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1026
800011b4:	00088313          	mv	t1,a7
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1064
800011b8:	28069463          	bnez	a3,80001440 <__udivdi3+0x29c>
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1066
800011bc:	00002697          	auipc	a3,0x2
800011c0:	44c68693          	addi	a3,a3,1100 # 80003608 <__clz_tab>
800011c4:	0ec5f663          	bgeu	a1,a2,800012b0 <__udivdi3+0x10c>
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1070
800011c8:	00010737          	lui	a4,0x10
800011cc:	0ce67863          	bgeu	a2,a4,8000129c <__udivdi3+0xf8>
800011d0:	0ff00713          	li	a4,255
800011d4:	00c73733          	sltu	a4,a4,a2
800011d8:	00371713          	slli	a4,a4,0x3
800011dc:	00e65533          	srl	a0,a2,a4
800011e0:	00a686b3          	add	a3,a3,a0
800011e4:	0006c683          	lbu	a3,0(a3)
800011e8:	02000513          	li	a0,32
800011ec:	00e68733          	add	a4,a3,a4
800011f0:	40e506b3          	sub	a3,a0,a4
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1072
800011f4:	00e50c63          	beq	a0,a4,8000120c <__udivdi3+0x68>
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1078
800011f8:	00d795b3          	sll	a1,a5,a3
800011fc:	00e8d733          	srl	a4,a7,a4
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1077
80001200:	00d61833          	sll	a6,a2,a3
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1078
80001204:	00b765b3          	or	a1,a4,a1
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1079
80001208:	00d89333          	sll	t1,a7,a3
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1082
8000120c:	01085893          	srli	a7,a6,0x10
80001210:	0315d6b3          	divu	a3,a1,a7
80001214:	01081613          	slli	a2,a6,0x10
80001218:	01065613          	srli	a2,a2,0x10
8000121c:	01035793          	srli	a5,t1,0x10
80001220:	0315f733          	remu	a4,a1,a7
80001224:	00068513          	mv	a0,a3
80001228:	02d605b3          	mul	a1,a2,a3
8000122c:	01071713          	slli	a4,a4,0x10
80001230:	00f767b3          	or	a5,a4,a5
80001234:	00b7fe63          	bgeu	a5,a1,80001250 <__udivdi3+0xac>
80001238:	010787b3          	add	a5,a5,a6
8000123c:	fff68513          	addi	a0,a3,-1
80001240:	0107e863          	bltu	a5,a6,80001250 <__udivdi3+0xac>
80001244:	00b7f663          	bgeu	a5,a1,80001250 <__udivdi3+0xac>
80001248:	ffe68513          	addi	a0,a3,-2
8000124c:	010787b3          	add	a5,a5,a6
80001250:	40b787b3          	sub	a5,a5,a1
80001254:	0317f733          	remu	a4,a5,a7
80001258:	01031313          	slli	t1,t1,0x10
8000125c:	01035313          	srli	t1,t1,0x10
80001260:	0317d7b3          	divu	a5,a5,a7
80001264:	01071713          	slli	a4,a4,0x10
80001268:	00676333          	or	t1,a4,t1
8000126c:	02f606b3          	mul	a3,a2,a5
80001270:	00078613          	mv	a2,a5
80001274:	00d37c63          	bgeu	t1,a3,8000128c <__udivdi3+0xe8>
80001278:	00680333          	add	t1,a6,t1
8000127c:	fff78613          	addi	a2,a5,-1
80001280:	01036663          	bltu	t1,a6,8000128c <__udivdi3+0xe8>
80001284:	00d37463          	bgeu	t1,a3,8000128c <__udivdi3+0xe8>
80001288:	ffe78613          	addi	a2,a5,-2
8000128c:	01051513          	slli	a0,a0,0x10
80001290:	00c56533          	or	a0,a0,a2
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1209
80001294:	00000593          	li	a1,0
80001298:	0e40006f          	j	8000137c <__udivdi3+0x1d8>
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1070
8000129c:	01000537          	lui	a0,0x1000
800012a0:	01000713          	li	a4,16
800012a4:	f2a66ce3          	bltu	a2,a0,800011dc <__udivdi3+0x38>
800012a8:	01800713          	li	a4,24
800012ac:	f31ff06f          	j	800011dc <__udivdi3+0x38>
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1091
800012b0:	00061663          	bnez	a2,800012bc <__udivdi3+0x118>
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1092
800012b4:	00100713          	li	a4,1
800012b8:	02c75833          	divu	a6,a4,a2
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1094
800012bc:	00010737          	lui	a4,0x10
800012c0:	0ce87063          	bgeu	a6,a4,80001380 <__udivdi3+0x1dc>
800012c4:	0ff00713          	li	a4,255
800012c8:	01077463          	bgeu	a4,a6,800012d0 <__udivdi3+0x12c>
800012cc:	00800513          	li	a0,8
800012d0:	00a85733          	srl	a4,a6,a0
800012d4:	00e686b3          	add	a3,a3,a4
800012d8:	0006c703          	lbu	a4,0(a3)
800012dc:	02000613          	li	a2,32
800012e0:	00a70733          	add	a4,a4,a0
800012e4:	40e606b3          	sub	a3,a2,a4
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1096
800012e8:	0ae61663          	bne	a2,a4,80001394 <__udivdi3+0x1f0>
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1105
800012ec:	410787b3          	sub	a5,a5,a6
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1106
800012f0:	00100593          	li	a1,1
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1124
800012f4:	01085893          	srli	a7,a6,0x10
800012f8:	01081613          	slli	a2,a6,0x10
800012fc:	01065613          	srli	a2,a2,0x10
80001300:	01035713          	srli	a4,t1,0x10
80001304:	0317f6b3          	remu	a3,a5,a7
80001308:	0317d7b3          	divu	a5,a5,a7
8000130c:	01069693          	slli	a3,a3,0x10
80001310:	00e6e733          	or	a4,a3,a4
80001314:	02f60e33          	mul	t3,a2,a5
80001318:	00078513          	mv	a0,a5
8000131c:	01c77e63          	bgeu	a4,t3,80001338 <__udivdi3+0x194>
80001320:	01070733          	add	a4,a4,a6
80001324:	fff78513          	addi	a0,a5,-1
80001328:	01076863          	bltu	a4,a6,80001338 <__udivdi3+0x194>
8000132c:	01c77663          	bgeu	a4,t3,80001338 <__udivdi3+0x194>
80001330:	ffe78513          	addi	a0,a5,-2
80001334:	01070733          	add	a4,a4,a6
80001338:	41c70733          	sub	a4,a4,t3
8000133c:	031777b3          	remu	a5,a4,a7
80001340:	01031313          	slli	t1,t1,0x10
80001344:	01035313          	srli	t1,t1,0x10
80001348:	03175733          	divu	a4,a4,a7
8000134c:	01079793          	slli	a5,a5,0x10
80001350:	0067e333          	or	t1,a5,t1
80001354:	02e606b3          	mul	a3,a2,a4
80001358:	00070613          	mv	a2,a4
8000135c:	00d37c63          	bgeu	t1,a3,80001374 <__udivdi3+0x1d0>
80001360:	00680333          	add	t1,a6,t1
80001364:	fff70613          	addi	a2,a4,-1 # ffff <__stack_size+0xf7ff>
80001368:	01036663          	bltu	t1,a6,80001374 <__udivdi3+0x1d0>
8000136c:	00d37463          	bgeu	t1,a3,80001374 <__udivdi3+0x1d0>
80001370:	ffe70613          	addi	a2,a4,-2
80001374:	01051513          	slli	a0,a0,0x10
80001378:	00c56533          	or	a0,a0,a2
__udivdi3():
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1321
8000137c:	00008067          	ret
__udivmoddi4():
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1094
80001380:	01000737          	lui	a4,0x1000
80001384:	01000513          	li	a0,16
80001388:	f4e864e3          	bltu	a6,a4,800012d0 <__udivdi3+0x12c>
8000138c:	01800513          	li	a0,24
80001390:	f41ff06f          	j	800012d0 <__udivdi3+0x12c>
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1114
80001394:	00d81833          	sll	a6,a6,a3
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1115
80001398:	00e7d533          	srl	a0,a5,a4
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1117
8000139c:	00d89333          	sll	t1,a7,a3
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1116
800013a0:	00d797b3          	sll	a5,a5,a3
800013a4:	00e8d733          	srl	a4,a7,a4
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1119
800013a8:	01085893          	srli	a7,a6,0x10
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1116
800013ac:	00f76633          	or	a2,a4,a5
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1119
800013b0:	03157733          	remu	a4,a0,a7
800013b4:	01081793          	slli	a5,a6,0x10
800013b8:	0107d793          	srli	a5,a5,0x10
800013bc:	01065593          	srli	a1,a2,0x10
800013c0:	03155533          	divu	a0,a0,a7
800013c4:	01071713          	slli	a4,a4,0x10
800013c8:	00b76733          	or	a4,a4,a1
800013cc:	02a786b3          	mul	a3,a5,a0
800013d0:	00050593          	mv	a1,a0
800013d4:	00d77e63          	bgeu	a4,a3,800013f0 <__udivdi3+0x24c>
800013d8:	01070733          	add	a4,a4,a6
800013dc:	fff50593          	addi	a1,a0,-1 # ffffff <__stack_size+0xfff7ff>
800013e0:	01076863          	bltu	a4,a6,800013f0 <__udivdi3+0x24c>
800013e4:	00d77663          	bgeu	a4,a3,800013f0 <__udivdi3+0x24c>
800013e8:	ffe50593          	addi	a1,a0,-2
800013ec:	01070733          	add	a4,a4,a6
800013f0:	40d706b3          	sub	a3,a4,a3
800013f4:	0316f733          	remu	a4,a3,a7
800013f8:	01061613          	slli	a2,a2,0x10
800013fc:	01065613          	srli	a2,a2,0x10
80001400:	0316d6b3          	divu	a3,a3,a7
80001404:	01071713          	slli	a4,a4,0x10
80001408:	02d78533          	mul	a0,a5,a3
8000140c:	00c767b3          	or	a5,a4,a2
80001410:	00068713          	mv	a4,a3
80001414:	00a7fe63          	bgeu	a5,a0,80001430 <__udivdi3+0x28c>
80001418:	010787b3          	add	a5,a5,a6
8000141c:	fff68713          	addi	a4,a3,-1
80001420:	0107e863          	bltu	a5,a6,80001430 <__udivdi3+0x28c>
80001424:	00a7f663          	bgeu	a5,a0,80001430 <__udivdi3+0x28c>
80001428:	ffe68713          	addi	a4,a3,-2
8000142c:	010787b3          	add	a5,a5,a6
80001430:	01059593          	slli	a1,a1,0x10
80001434:	40a787b3          	sub	a5,a5,a0
80001438:	00e5e5b3          	or	a1,a1,a4
8000143c:	eb9ff06f          	j	800012f4 <__udivdi3+0x150>
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1140
80001440:	18d5e663          	bltu	a1,a3,800015cc <__udivdi3+0x428>
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1159
80001444:	00010737          	lui	a4,0x10
80001448:	04e6f463          	bgeu	a3,a4,80001490 <__udivdi3+0x2ec>
8000144c:	0ff00713          	li	a4,255
80001450:	00d735b3          	sltu	a1,a4,a3
80001454:	00359593          	slli	a1,a1,0x3
80001458:	00b6d533          	srl	a0,a3,a1
8000145c:	00002717          	auipc	a4,0x2
80001460:	1ac70713          	addi	a4,a4,428 # 80003608 <__clz_tab>
80001464:	00a70733          	add	a4,a4,a0
80001468:	00074703          	lbu	a4,0(a4)
8000146c:	02000513          	li	a0,32
80001470:	00b70733          	add	a4,a4,a1
80001474:	40e505b3          	sub	a1,a0,a4
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1160
80001478:	02e51663          	bne	a0,a4,800014a4 <__udivdi3+0x300>
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1172
8000147c:	00100513          	li	a0,1
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1170
80001480:	eef6eee3          	bltu	a3,a5,8000137c <__udivdi3+0x1d8>
80001484:	00c8b533          	sltu	a0,a7,a2
80001488:	00154513          	xori	a0,a0,1
8000148c:	ef1ff06f          	j	8000137c <__udivdi3+0x1d8>
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1159
80001490:	01000737          	lui	a4,0x1000
80001494:	01000593          	li	a1,16
80001498:	fce6e0e3          	bltu	a3,a4,80001458 <__udivdi3+0x2b4>
8000149c:	01800593          	li	a1,24
800014a0:	fb9ff06f          	j	80001458 <__udivdi3+0x2b4>
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1194
800014a4:	00e65833          	srl	a6,a2,a4
800014a8:	00b696b3          	sll	a3,a3,a1
800014ac:	00d86833          	or	a6,a6,a3
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1196
800014b0:	00e7d333          	srl	t1,a5,a4
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1200
800014b4:	01085e93          	srli	t4,a6,0x10
800014b8:	03d376b3          	remu	a3,t1,t4
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1197
800014bc:	00b797b3          	sll	a5,a5,a1
800014c0:	00e8d733          	srl	a4,a7,a4
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1195
800014c4:	00b61e33          	sll	t3,a2,a1
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1197
800014c8:	00f76633          	or	a2,a4,a5
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1200
800014cc:	01081793          	slli	a5,a6,0x10
800014d0:	0107d793          	srli	a5,a5,0x10
800014d4:	01065713          	srli	a4,a2,0x10
800014d8:	03d35333          	divu	t1,t1,t4
800014dc:	01069693          	slli	a3,a3,0x10
800014e0:	00e6e733          	or	a4,a3,a4
800014e4:	02678f33          	mul	t5,a5,t1
800014e8:	00030513          	mv	a0,t1
800014ec:	01e77e63          	bgeu	a4,t5,80001508 <__udivdi3+0x364>
800014f0:	01070733          	add	a4,a4,a6
800014f4:	fff30513          	addi	a0,t1,-1
800014f8:	01076863          	bltu	a4,a6,80001508 <__udivdi3+0x364>
800014fc:	01e77663          	bgeu	a4,t5,80001508 <__udivdi3+0x364>
80001500:	ffe30513          	addi	a0,t1,-2
80001504:	01070733          	add	a4,a4,a6
80001508:	41e70733          	sub	a4,a4,t5
8000150c:	03d776b3          	remu	a3,a4,t4
80001510:	03d75733          	divu	a4,a4,t4
80001514:	01069693          	slli	a3,a3,0x10
80001518:	02e78333          	mul	t1,a5,a4
8000151c:	01061793          	slli	a5,a2,0x10
80001520:	0107d793          	srli	a5,a5,0x10
80001524:	00f6e7b3          	or	a5,a3,a5
80001528:	00070613          	mv	a2,a4
8000152c:	0067fe63          	bgeu	a5,t1,80001548 <__udivdi3+0x3a4>
80001530:	010787b3          	add	a5,a5,a6
80001534:	fff70613          	addi	a2,a4,-1 # ffffff <__stack_size+0xfff7ff>
80001538:	0107e863          	bltu	a5,a6,80001548 <__udivdi3+0x3a4>
8000153c:	0067f663          	bgeu	a5,t1,80001548 <__udivdi3+0x3a4>
80001540:	ffe70613          	addi	a2,a4,-2
80001544:	010787b3          	add	a5,a5,a6
80001548:	01051513          	slli	a0,a0,0x10
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1201
8000154c:	00010eb7          	lui	t4,0x10
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1200
80001550:	00c56533          	or	a0,a0,a2
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1201
80001554:	fffe8693          	addi	a3,t4,-1 # ffff <__stack_size+0xf7ff>
80001558:	010e5613          	srli	a2,t3,0x10
8000155c:	01055813          	srli	a6,a0,0x10
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1200
80001560:	406787b3          	sub	a5,a5,t1
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1201
80001564:	00d57333          	and	t1,a0,a3
80001568:	00de76b3          	and	a3,t3,a3
8000156c:	02d30e33          	mul	t3,t1,a3
80001570:	02d806b3          	mul	a3,a6,a3
80001574:	010e5713          	srli	a4,t3,0x10
80001578:	02c30333          	mul	t1,t1,a2
8000157c:	00d30333          	add	t1,t1,a3
80001580:	00670733          	add	a4,a4,t1
80001584:	02c80833          	mul	a6,a6,a2
80001588:	00d77463          	bgeu	a4,a3,80001590 <__udivdi3+0x3ec>
8000158c:	01d80833          	add	a6,a6,t4
80001590:	01075693          	srli	a3,a4,0x10
80001594:	01068833          	add	a6,a3,a6
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1203
80001598:	0307e663          	bltu	a5,a6,800015c4 <__udivdi3+0x420>
8000159c:	cf079ce3          	bne	a5,a6,80001294 <__udivdi3+0xf0>
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1201
800015a0:	000107b7          	lui	a5,0x10
800015a4:	fff78793          	addi	a5,a5,-1 # ffff <__stack_size+0xf7ff>
800015a8:	00f77733          	and	a4,a4,a5
800015ac:	01071713          	slli	a4,a4,0x10
800015b0:	00fe7e33          	and	t3,t3,a5
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1198
800015b4:	00b898b3          	sll	a7,a7,a1
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1201
800015b8:	01c70733          	add	a4,a4,t3
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1209
800015bc:	00000593          	li	a1,0
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1203
800015c0:	dae8fee3          	bgeu	a7,a4,8000137c <__udivdi3+0x1d8>
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1205
800015c4:	fff50513          	addi	a0,a0,-1
__udivdi3():
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1206
800015c8:	ccdff06f          	j	80001294 <__udivdi3+0xf0>
__udivmoddi4():
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1145
800015cc:	00000593          	li	a1,0
/home/hqfang/workspace/software/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1144
800015d0:	00000513          	li	a0,0
800015d4:	da9ff06f          	j	8000137c <__udivdi3+0x1d8>

800015d8 <atexit>:
atexit():
800015d8:	00050593          	mv	a1,a0
800015dc:	00000693          	li	a3,0
800015e0:	00000613          	li	a2,0
800015e4:	00000513          	li	a0,0
800015e8:	6c00006f          	j	80001ca8 <__register_exitproc>

800015ec <__libc_fini_array>:
__libc_fini_array():
800015ec:	ff010113          	addi	sp,sp,-16
800015f0:	00812423          	sw	s0,8(sp)
800015f4:	00912223          	sw	s1,4(sp)
800015f8:	00002417          	auipc	s0,0x2
800015fc:	20440413          	addi	s0,s0,516 # 800037fc <__fsymtab_end>
80001600:	00002497          	auipc	s1,0x2
80001604:	1fc48493          	addi	s1,s1,508 # 800037fc <__fsymtab_end>
80001608:	40940433          	sub	s0,s0,s1
8000160c:	00112623          	sw	ra,12(sp)
80001610:	40245413          	srai	s0,s0,0x2
80001614:	00041c63          	bnez	s0,8000162c <__libc_fini_array+0x40>
80001618:	00c12083          	lw	ra,12(sp)
8000161c:	00812403          	lw	s0,8(sp)
80001620:	00412483          	lw	s1,4(sp)
80001624:	01010113          	addi	sp,sp,16
80001628:	00008067          	ret
8000162c:	fff40413          	addi	s0,s0,-1
80001630:	00241793          	slli	a5,s0,0x2
80001634:	00f487b3          	add	a5,s1,a5
80001638:	0007a783          	lw	a5,0(a5)
8000163c:	000780e7          	jalr	a5
80001640:	fd5ff06f          	j	80001614 <__libc_fini_array+0x28>

80001644 <__libc_init_array>:
__libc_init_array():
80001644:	ff010113          	addi	sp,sp,-16
80001648:	00812423          	sw	s0,8(sp)
8000164c:	00912223          	sw	s1,4(sp)
80001650:	00002417          	auipc	s0,0x2
80001654:	1ac40413          	addi	s0,s0,428 # 800037fc <__fsymtab_end>
80001658:	00002497          	auipc	s1,0x2
8000165c:	1a448493          	addi	s1,s1,420 # 800037fc <__fsymtab_end>
80001660:	408484b3          	sub	s1,s1,s0
80001664:	01212023          	sw	s2,0(sp)
80001668:	00112623          	sw	ra,12(sp)
8000166c:	4024d493          	srai	s1,s1,0x2
80001670:	00000913          	li	s2,0
80001674:	02991e63          	bne	s2,s1,800016b0 <__libc_init_array+0x6c>
80001678:	00002417          	auipc	s0,0x2
8000167c:	18440413          	addi	s0,s0,388 # 800037fc <__fsymtab_end>
80001680:	00002497          	auipc	s1,0x2
80001684:	17c48493          	addi	s1,s1,380 # 800037fc <__fsymtab_end>
80001688:	408484b3          	sub	s1,s1,s0
8000168c:	4024d493          	srai	s1,s1,0x2
80001690:	00000913          	li	s2,0
80001694:	02991863          	bne	s2,s1,800016c4 <__libc_init_array+0x80>
80001698:	00c12083          	lw	ra,12(sp)
8000169c:	00812403          	lw	s0,8(sp)
800016a0:	00412483          	lw	s1,4(sp)
800016a4:	00012903          	lw	s2,0(sp)
800016a8:	01010113          	addi	sp,sp,16
800016ac:	00008067          	ret
800016b0:	00042783          	lw	a5,0(s0)
800016b4:	00190913          	addi	s2,s2,1
800016b8:	00440413          	addi	s0,s0,4
800016bc:	000780e7          	jalr	a5
800016c0:	fb5ff06f          	j	80001674 <__libc_init_array+0x30>
800016c4:	00042783          	lw	a5,0(s0)
800016c8:	00190913          	addi	s2,s2,1
800016cc:	00440413          	addi	s0,s0,4
800016d0:	000780e7          	jalr	a5
800016d4:	fc1ff06f          	j	80001694 <__libc_init_array+0x50>

800016d8 <iprintf>:
printf():
800016d8:	fb010113          	addi	sp,sp,-80
800016dc:	02812423          	sw	s0,40(sp)
800016e0:	02112623          	sw	ra,44(sp)
800016e4:	00050413          	mv	s0,a0
800016e8:	02b12a23          	sw	a1,52(sp)
800016ec:	02c12c23          	sw	a2,56(sp)
800016f0:	02d12e23          	sw	a3,60(sp)
800016f4:	04e12023          	sw	a4,64(sp)
800016f8:	04f12223          	sw	a5,68(sp)
800016fc:	05012423          	sw	a6,72(sp)
80001700:	05112623          	sw	a7,76(sp)
80001704:	8081a503          	lw	a0,-2040(gp) # 90000068 <_impure_ptr>
80001708:	00050c63          	beqz	a0,80001720 <iprintf+0x48>
8000170c:	01852783          	lw	a5,24(a0)
80001710:	00079863          	bnez	a5,80001720 <iprintf+0x48>
80001714:	00a12623          	sw	a0,12(sp)
80001718:	1c5000ef          	jal	ra,800020dc <__sinit>
8000171c:	00c12503          	lw	a0,12(sp)
80001720:	00852583          	lw	a1,8(a0)
80001724:	03410693          	addi	a3,sp,52
80001728:	00040613          	mv	a2,s0
8000172c:	00d12e23          	sw	a3,28(sp)
80001730:	158010ef          	jal	ra,80002888 <_vfiprintf_r>
80001734:	02c12083          	lw	ra,44(sp)
80001738:	02812403          	lw	s0,40(sp)
8000173c:	05010113          	addi	sp,sp,80
80001740:	00008067          	ret

80001744 <_puts_r>:
_puts_r():
80001744:	fe010113          	addi	sp,sp,-32
80001748:	00912a23          	sw	s1,20(sp)
8000174c:	01212823          	sw	s2,16(sp)
80001750:	00112e23          	sw	ra,28(sp)
80001754:	00812c23          	sw	s0,24(sp)
80001758:	01312623          	sw	s3,12(sp)
8000175c:	01412423          	sw	s4,8(sp)
80001760:	00050493          	mv	s1,a0
80001764:	00058913          	mv	s2,a1
80001768:	00050863          	beqz	a0,80001778 <_puts_r+0x34>
8000176c:	01852783          	lw	a5,24(a0)
80001770:	00079463          	bnez	a5,80001778 <_puts_r+0x34>
80001774:	169000ef          	jal	ra,800020dc <__sinit>
80001778:	0184a783          	lw	a5,24(s1)
8000177c:	0084a403          	lw	s0,8(s1)
80001780:	00079663          	bnez	a5,8000178c <_puts_r+0x48>
80001784:	00048513          	mv	a0,s1
80001788:	155000ef          	jal	ra,800020dc <__sinit>
8000178c:	00002797          	auipc	a5,0x2
80001790:	f9c78793          	addi	a5,a5,-100 # 80003728 <__sf_fake_stdin>
80001794:	04f41e63          	bne	s0,a5,800017f0 <_puts_r+0xac>
80001798:	0044a403          	lw	s0,4(s1)
8000179c:	00c45783          	lhu	a5,12(s0)
800017a0:	0087f793          	andi	a5,a5,8
800017a4:	06078a63          	beqz	a5,80001818 <_puts_r+0xd4>
800017a8:	01042783          	lw	a5,16(s0)
800017ac:	06078663          	beqz	a5,80001818 <_puts_r+0xd4>
800017b0:	fff00993          	li	s3,-1
800017b4:	00a00a13          	li	s4,10
800017b8:	00842783          	lw	a5,8(s0)
800017bc:	00094583          	lbu	a1,0(s2)
800017c0:	fff78793          	addi	a5,a5,-1
800017c4:	08059463          	bnez	a1,8000184c <_puts_r+0x108>
800017c8:	00f42423          	sw	a5,8(s0)
800017cc:	0c07d063          	bgez	a5,8000188c <_puts_r+0x148>
800017d0:	00040613          	mv	a2,s0
800017d4:	00a00593          	li	a1,10
800017d8:	00048513          	mv	a0,s1
800017dc:	220000ef          	jal	ra,800019fc <__swbuf_r>
800017e0:	fff00793          	li	a5,-1
800017e4:	04f50263          	beq	a0,a5,80001828 <_puts_r+0xe4>
800017e8:	00a00513          	li	a0,10
800017ec:	0400006f          	j	8000182c <_puts_r+0xe8>
800017f0:	00002797          	auipc	a5,0x2
800017f4:	f5878793          	addi	a5,a5,-168 # 80003748 <__sf_fake_stdout>
800017f8:	00f41663          	bne	s0,a5,80001804 <_puts_r+0xc0>
800017fc:	0084a403          	lw	s0,8(s1)
80001800:	f9dff06f          	j	8000179c <_puts_r+0x58>
80001804:	00002797          	auipc	a5,0x2
80001808:	f0478793          	addi	a5,a5,-252 # 80003708 <__sf_fake_stderr>
8000180c:	f8f418e3          	bne	s0,a5,8000179c <_puts_r+0x58>
80001810:	00c4a403          	lw	s0,12(s1)
80001814:	f89ff06f          	j	8000179c <_puts_r+0x58>
80001818:	00040593          	mv	a1,s0
8000181c:	00048513          	mv	a0,s1
80001820:	314000ef          	jal	ra,80001b34 <__swsetup_r>
80001824:	f80506e3          	beqz	a0,800017b0 <_puts_r+0x6c>
80001828:	fff00513          	li	a0,-1
8000182c:	01c12083          	lw	ra,28(sp)
80001830:	01812403          	lw	s0,24(sp)
80001834:	01412483          	lw	s1,20(sp)
80001838:	01012903          	lw	s2,16(sp)
8000183c:	00c12983          	lw	s3,12(sp)
80001840:	00812a03          	lw	s4,8(sp)
80001844:	02010113          	addi	sp,sp,32
80001848:	00008067          	ret
8000184c:	00f42423          	sw	a5,8(s0)
80001850:	00190913          	addi	s2,s2,1
80001854:	0007d863          	bgez	a5,80001864 <_puts_r+0x120>
80001858:	01842703          	lw	a4,24(s0)
8000185c:	00e7ce63          	blt	a5,a4,80001878 <_puts_r+0x134>
80001860:	01458c63          	beq	a1,s4,80001878 <_puts_r+0x134>
80001864:	00042783          	lw	a5,0(s0)
80001868:	00178713          	addi	a4,a5,1
8000186c:	00e42023          	sw	a4,0(s0)
80001870:	00b78023          	sb	a1,0(a5)
80001874:	f45ff06f          	j	800017b8 <_puts_r+0x74>
80001878:	00040613          	mv	a2,s0
8000187c:	00048513          	mv	a0,s1
80001880:	17c000ef          	jal	ra,800019fc <__swbuf_r>
80001884:	f3351ae3          	bne	a0,s3,800017b8 <_puts_r+0x74>
80001888:	fa1ff06f          	j	80001828 <_puts_r+0xe4>
8000188c:	00042783          	lw	a5,0(s0)
80001890:	00178713          	addi	a4,a5,1
80001894:	00e42023          	sw	a4,0(s0)
80001898:	00a00713          	li	a4,10
8000189c:	00e78023          	sb	a4,0(a5)
800018a0:	f49ff06f          	j	800017e8 <_puts_r+0xa4>

800018a4 <puts>:
puts():
800018a4:	00050593          	mv	a1,a0
800018a8:	8081a503          	lw	a0,-2040(gp) # 90000068 <_impure_ptr>
800018ac:	e99ff06f          	j	80001744 <_puts_r>

800018b0 <srand>:
srand():
800018b0:	ff010113          	addi	sp,sp,-16
800018b4:	00912223          	sw	s1,4(sp)
800018b8:	8081a483          	lw	s1,-2040(gp) # 90000068 <_impure_ptr>
800018bc:	0384a783          	lw	a5,56(s1)
800018c0:	00812423          	sw	s0,8(sp)
800018c4:	00112623          	sw	ra,12(sp)
800018c8:	00050413          	mv	s0,a0
800018cc:	04079663          	bnez	a5,80001918 <srand+0x68>
800018d0:	01800513          	li	a0,24
800018d4:	3d1000ef          	jal	ra,800024a4 <malloc>
800018d8:	abcd37b7          	lui	a5,0xabcd3
800018dc:	02a4ac23          	sw	a0,56(s1)
800018e0:	30e78793          	addi	a5,a5,782 # abcd330e <_sp+0x1bcc330e>
800018e4:	00f52023          	sw	a5,0(a0)
800018e8:	e66d17b7          	lui	a5,0xe66d1
800018ec:	23478793          	addi	a5,a5,564 # e66d1234 <_sp+0x566c1234>
800018f0:	00f52223          	sw	a5,4(a0)
800018f4:	0005e7b7          	lui	a5,0x5e
800018f8:	eec78793          	addi	a5,a5,-276 # 5deec <__stack_size+0x5d6ec>
800018fc:	00f52423          	sw	a5,8(a0)
80001900:	00b00793          	li	a5,11
80001904:	00f51623          	sh	a5,12(a0)
80001908:	00100713          	li	a4,1
8000190c:	00000793          	li	a5,0
80001910:	00e52823          	sw	a4,16(a0)
80001914:	00f52a23          	sw	a5,20(a0)
80001918:	0384a783          	lw	a5,56(s1)
8000191c:	00c12083          	lw	ra,12(sp)
80001920:	00412483          	lw	s1,4(sp)
80001924:	0087a823          	sw	s0,16(a5)
80001928:	00812403          	lw	s0,8(sp)
8000192c:	0007aa23          	sw	zero,20(a5)
80001930:	01010113          	addi	sp,sp,16
80001934:	00008067          	ret

80001938 <rand>:
rand():
80001938:	ff010113          	addi	sp,sp,-16
8000193c:	00812423          	sw	s0,8(sp)
80001940:	8081a403          	lw	s0,-2040(gp) # 90000068 <_impure_ptr>
80001944:	03842783          	lw	a5,56(s0)
80001948:	00112623          	sw	ra,12(sp)
8000194c:	04079663          	bnez	a5,80001998 <rand+0x60>
80001950:	01800513          	li	a0,24
80001954:	351000ef          	jal	ra,800024a4 <malloc>
80001958:	abcd37b7          	lui	a5,0xabcd3
8000195c:	02a42c23          	sw	a0,56(s0)
80001960:	30e78793          	addi	a5,a5,782 # abcd330e <_sp+0x1bcc330e>
80001964:	00f52023          	sw	a5,0(a0)
80001968:	e66d17b7          	lui	a5,0xe66d1
8000196c:	23478793          	addi	a5,a5,564 # e66d1234 <_sp+0x566c1234>
80001970:	00f52223          	sw	a5,4(a0)
80001974:	0005e7b7          	lui	a5,0x5e
80001978:	eec78793          	addi	a5,a5,-276 # 5deec <__stack_size+0x5d6ec>
8000197c:	00f52423          	sw	a5,8(a0)
80001980:	00b00793          	li	a5,11
80001984:	00f51623          	sh	a5,12(a0)
80001988:	00100713          	li	a4,1
8000198c:	00000793          	li	a5,0
80001990:	00e52823          	sw	a4,16(a0)
80001994:	00f52a23          	sw	a5,20(a0)
80001998:	03842603          	lw	a2,56(s0)
8000199c:	4c958737          	lui	a4,0x4c958
800019a0:	5851f7b7          	lui	a5,0x5851f
800019a4:	01062683          	lw	a3,16(a2)
800019a8:	01462503          	lw	a0,20(a2)
800019ac:	f2d70713          	addi	a4,a4,-211 # 4c957f2d <__stack_size+0x4c95772d>
800019b0:	42d78793          	addi	a5,a5,1069 # 5851f42d <__stack_size+0x5851ec2d>
800019b4:	02f687b3          	mul	a5,a3,a5
800019b8:	00c12083          	lw	ra,12(sp)
800019bc:	00812403          	lw	s0,8(sp)
800019c0:	02e50533          	mul	a0,a0,a4
800019c4:	00f50533          	add	a0,a0,a5
800019c8:	02e687b3          	mul	a5,a3,a4
800019cc:	02e6b733          	mulhu	a4,a3,a4
800019d0:	00178693          	addi	a3,a5,1
800019d4:	00d62823          	sw	a3,16(a2)
800019d8:	00e50733          	add	a4,a0,a4
800019dc:	00f6b533          	sltu	a0,a3,a5
800019e0:	00e50533          	add	a0,a0,a4
800019e4:	00a62a23          	sw	a0,20(a2)
800019e8:	00151513          	slli	a0,a0,0x1
800019ec:	00155513          	srli	a0,a0,0x1
800019f0:	01010113          	addi	sp,sp,16
800019f4:	00008067          	ret

800019f8 <isatty>:
isatty():
800019f8:	99dfe06f          	j	80000394 <_isatty>

800019fc <__swbuf_r>:
__swbuf_r():
800019fc:	fe010113          	addi	sp,sp,-32
80001a00:	00812c23          	sw	s0,24(sp)
80001a04:	00912a23          	sw	s1,20(sp)
80001a08:	01212823          	sw	s2,16(sp)
80001a0c:	00112e23          	sw	ra,28(sp)
80001a10:	01312623          	sw	s3,12(sp)
80001a14:	00050493          	mv	s1,a0
80001a18:	00058913          	mv	s2,a1
80001a1c:	00060413          	mv	s0,a2
80001a20:	00050863          	beqz	a0,80001a30 <__swbuf_r+0x34>
80001a24:	01852783          	lw	a5,24(a0)
80001a28:	00079463          	bnez	a5,80001a30 <__swbuf_r+0x34>
80001a2c:	6b0000ef          	jal	ra,800020dc <__sinit>
80001a30:	00002797          	auipc	a5,0x2
80001a34:	cf878793          	addi	a5,a5,-776 # 80003728 <__sf_fake_stdin>
80001a38:	0af41e63          	bne	s0,a5,80001af4 <__swbuf_r+0xf8>
80001a3c:	0044a403          	lw	s0,4(s1)
80001a40:	01842783          	lw	a5,24(s0)
80001a44:	00f42423          	sw	a5,8(s0)
80001a48:	00c45783          	lhu	a5,12(s0)
80001a4c:	0087f793          	andi	a5,a5,8
80001a50:	0c078663          	beqz	a5,80001b1c <__swbuf_r+0x120>
80001a54:	01042783          	lw	a5,16(s0)
80001a58:	0c078263          	beqz	a5,80001b1c <__swbuf_r+0x120>
80001a5c:	01042783          	lw	a5,16(s0)
80001a60:	00042503          	lw	a0,0(s0)
80001a64:	0ff97993          	andi	s3,s2,255
80001a68:	0ff97913          	andi	s2,s2,255
80001a6c:	40f50533          	sub	a0,a0,a5
80001a70:	01442783          	lw	a5,20(s0)
80001a74:	00f54a63          	blt	a0,a5,80001a88 <__swbuf_r+0x8c>
80001a78:	00040593          	mv	a1,s0
80001a7c:	00048513          	mv	a0,s1
80001a80:	4bc000ef          	jal	ra,80001f3c <_fflush_r>
80001a84:	0a051463          	bnez	a0,80001b2c <__swbuf_r+0x130>
80001a88:	00842783          	lw	a5,8(s0)
80001a8c:	00150513          	addi	a0,a0,1
80001a90:	fff78793          	addi	a5,a5,-1
80001a94:	00f42423          	sw	a5,8(s0)
80001a98:	00042783          	lw	a5,0(s0)
80001a9c:	00178713          	addi	a4,a5,1
80001aa0:	00e42023          	sw	a4,0(s0)
80001aa4:	01378023          	sb	s3,0(a5)
80001aa8:	01442783          	lw	a5,20(s0)
80001aac:	00a78c63          	beq	a5,a0,80001ac4 <__swbuf_r+0xc8>
80001ab0:	00c45783          	lhu	a5,12(s0)
80001ab4:	0017f793          	andi	a5,a5,1
80001ab8:	00078e63          	beqz	a5,80001ad4 <__swbuf_r+0xd8>
80001abc:	00a00793          	li	a5,10
80001ac0:	00f91a63          	bne	s2,a5,80001ad4 <__swbuf_r+0xd8>
80001ac4:	00040593          	mv	a1,s0
80001ac8:	00048513          	mv	a0,s1
80001acc:	470000ef          	jal	ra,80001f3c <_fflush_r>
80001ad0:	04051e63          	bnez	a0,80001b2c <__swbuf_r+0x130>
80001ad4:	01c12083          	lw	ra,28(sp)
80001ad8:	01812403          	lw	s0,24(sp)
80001adc:	01412483          	lw	s1,20(sp)
80001ae0:	00c12983          	lw	s3,12(sp)
80001ae4:	00090513          	mv	a0,s2
80001ae8:	01012903          	lw	s2,16(sp)
80001aec:	02010113          	addi	sp,sp,32
80001af0:	00008067          	ret
80001af4:	00002797          	auipc	a5,0x2
80001af8:	c5478793          	addi	a5,a5,-940 # 80003748 <__sf_fake_stdout>
80001afc:	00f41663          	bne	s0,a5,80001b08 <__swbuf_r+0x10c>
80001b00:	0084a403          	lw	s0,8(s1)
80001b04:	f3dff06f          	j	80001a40 <__swbuf_r+0x44>
80001b08:	00002797          	auipc	a5,0x2
80001b0c:	c0078793          	addi	a5,a5,-1024 # 80003708 <__sf_fake_stderr>
80001b10:	f2f418e3          	bne	s0,a5,80001a40 <__swbuf_r+0x44>
80001b14:	00c4a403          	lw	s0,12(s1)
80001b18:	f29ff06f          	j	80001a40 <__swbuf_r+0x44>
80001b1c:	00040593          	mv	a1,s0
80001b20:	00048513          	mv	a0,s1
80001b24:	010000ef          	jal	ra,80001b34 <__swsetup_r>
80001b28:	f2050ae3          	beqz	a0,80001a5c <__swbuf_r+0x60>
80001b2c:	fff00913          	li	s2,-1
80001b30:	fa5ff06f          	j	80001ad4 <__swbuf_r+0xd8>

80001b34 <__swsetup_r>:
__swsetup_r():
80001b34:	ff010113          	addi	sp,sp,-16
80001b38:	00812423          	sw	s0,8(sp)
80001b3c:	00912223          	sw	s1,4(sp)
80001b40:	01212023          	sw	s2,0(sp)
80001b44:	00112623          	sw	ra,12(sp)
80001b48:	8081a483          	lw	s1,-2040(gp) # 90000068 <_impure_ptr>
80001b4c:	00050913          	mv	s2,a0
80001b50:	00058413          	mv	s0,a1
80001b54:	00048a63          	beqz	s1,80001b68 <__swsetup_r+0x34>
80001b58:	0184a783          	lw	a5,24(s1)
80001b5c:	00079663          	bnez	a5,80001b68 <__swsetup_r+0x34>
80001b60:	00048513          	mv	a0,s1
80001b64:	578000ef          	jal	ra,800020dc <__sinit>
80001b68:	00002797          	auipc	a5,0x2
80001b6c:	bc078793          	addi	a5,a5,-1088 # 80003728 <__sf_fake_stdin>
80001b70:	02f41e63          	bne	s0,a5,80001bac <__swsetup_r+0x78>
80001b74:	0044a403          	lw	s0,4(s1)
80001b78:	00c41783          	lh	a5,12(s0)
80001b7c:	01079713          	slli	a4,a5,0x10
80001b80:	0087f693          	andi	a3,a5,8
80001b84:	01075713          	srli	a4,a4,0x10
80001b88:	08069a63          	bnez	a3,80001c1c <__swsetup_r+0xe8>
80001b8c:	01077693          	andi	a3,a4,16
80001b90:	04069263          	bnez	a3,80001bd4 <__swsetup_r+0xa0>
80001b94:	00900713          	li	a4,9
80001b98:	00e92023          	sw	a4,0(s2)
80001b9c:	0407e793          	ori	a5,a5,64
80001ba0:	00f41623          	sh	a5,12(s0)
80001ba4:	fff00513          	li	a0,-1
80001ba8:	0d00006f          	j	80001c78 <__swsetup_r+0x144>
80001bac:	00002797          	auipc	a5,0x2
80001bb0:	b9c78793          	addi	a5,a5,-1124 # 80003748 <__sf_fake_stdout>
80001bb4:	00f41663          	bne	s0,a5,80001bc0 <__swsetup_r+0x8c>
80001bb8:	0084a403          	lw	s0,8(s1)
80001bbc:	fbdff06f          	j	80001b78 <__swsetup_r+0x44>
80001bc0:	00002797          	auipc	a5,0x2
80001bc4:	b4878793          	addi	a5,a5,-1208 # 80003708 <__sf_fake_stderr>
80001bc8:	faf418e3          	bne	s0,a5,80001b78 <__swsetup_r+0x44>
80001bcc:	00c4a403          	lw	s0,12(s1)
80001bd0:	fa9ff06f          	j	80001b78 <__swsetup_r+0x44>
80001bd4:	00477713          	andi	a4,a4,4
80001bd8:	02070c63          	beqz	a4,80001c10 <__swsetup_r+0xdc>
80001bdc:	03442583          	lw	a1,52(s0)
80001be0:	00058c63          	beqz	a1,80001bf8 <__swsetup_r+0xc4>
80001be4:	04440793          	addi	a5,s0,68
80001be8:	00f58663          	beq	a1,a5,80001bf4 <__swsetup_r+0xc0>
80001bec:	00090513          	mv	a0,s2
80001bf0:	19d000ef          	jal	ra,8000258c <_free_r>
80001bf4:	02042a23          	sw	zero,52(s0)
80001bf8:	00c45783          	lhu	a5,12(s0)
80001bfc:	00042223          	sw	zero,4(s0)
80001c00:	fdb7f793          	andi	a5,a5,-37
80001c04:	00f41623          	sh	a5,12(s0)
80001c08:	01042783          	lw	a5,16(s0)
80001c0c:	00f42023          	sw	a5,0(s0)
80001c10:	00c45783          	lhu	a5,12(s0)
80001c14:	0087e793          	ori	a5,a5,8
80001c18:	00f41623          	sh	a5,12(s0)
80001c1c:	01042783          	lw	a5,16(s0)
80001c20:	02079063          	bnez	a5,80001c40 <__swsetup_r+0x10c>
80001c24:	00c45783          	lhu	a5,12(s0)
80001c28:	20000713          	li	a4,512
80001c2c:	2807f793          	andi	a5,a5,640
80001c30:	00e78863          	beq	a5,a4,80001c40 <__swsetup_r+0x10c>
80001c34:	00040593          	mv	a1,s0
80001c38:	00090513          	mv	a0,s2
80001c3c:	778000ef          	jal	ra,800023b4 <__smakebuf_r>
80001c40:	00c41783          	lh	a5,12(s0)
80001c44:	01079713          	slli	a4,a5,0x10
80001c48:	0017f693          	andi	a3,a5,1
80001c4c:	01075713          	srli	a4,a4,0x10
80001c50:	04068063          	beqz	a3,80001c90 <__swsetup_r+0x15c>
80001c54:	01442683          	lw	a3,20(s0)
80001c58:	00042423          	sw	zero,8(s0)
80001c5c:	40d006b3          	neg	a3,a3
80001c60:	00d42c23          	sw	a3,24(s0)
80001c64:	01042683          	lw	a3,16(s0)
80001c68:	00000513          	li	a0,0
80001c6c:	00069663          	bnez	a3,80001c78 <__swsetup_r+0x144>
80001c70:	08077713          	andi	a4,a4,128
80001c74:	f20714e3          	bnez	a4,80001b9c <__swsetup_r+0x68>
80001c78:	00c12083          	lw	ra,12(sp)
80001c7c:	00812403          	lw	s0,8(sp)
80001c80:	00412483          	lw	s1,4(sp)
80001c84:	00012903          	lw	s2,0(sp)
80001c88:	01010113          	addi	sp,sp,16
80001c8c:	00008067          	ret
80001c90:	00277693          	andi	a3,a4,2
80001c94:	00000613          	li	a2,0
80001c98:	00069463          	bnez	a3,80001ca0 <__swsetup_r+0x16c>
80001c9c:	01442603          	lw	a2,20(s0)
80001ca0:	00c42423          	sw	a2,8(s0)
80001ca4:	fc1ff06f          	j	80001c64 <__swsetup_r+0x130>

80001ca8 <__register_exitproc>:
__register_exitproc():
80001ca8:	00050893          	mv	a7,a0
80001cac:	81818513          	addi	a0,gp,-2024 # 90000078 <_global_atexit>
80001cb0:	00052783          	lw	a5,0(a0)
80001cb4:	02079263          	bnez	a5,80001cd8 <__register_exitproc+0x30>
80001cb8:	8bc18713          	addi	a4,gp,-1860 # 9000011c <_global_atexit0>
80001cbc:	00e52023          	sw	a4,0(a0)
80001cc0:	00000513          	li	a0,0
80001cc4:	00070793          	mv	a5,a4
80001cc8:	00050863          	beqz	a0,80001cd8 <__register_exitproc+0x30>
80001ccc:	00052783          	lw	a5,0(a0)
80001cd0:	08f72423          	sw	a5,136(a4)
80001cd4:	00070793          	mv	a5,a4
80001cd8:	0047a703          	lw	a4,4(a5)
80001cdc:	01f00813          	li	a6,31
80001ce0:	fff00513          	li	a0,-1
80001ce4:	06e84063          	blt	a6,a4,80001d44 <__register_exitproc+0x9c>
80001ce8:	04088263          	beqz	a7,80001d2c <__register_exitproc+0x84>
80001cec:	0887a803          	lw	a6,136(a5)
80001cf0:	04080a63          	beqz	a6,80001d44 <__register_exitproc+0x9c>
80001cf4:	00271513          	slli	a0,a4,0x2
80001cf8:	00a80533          	add	a0,a6,a0
80001cfc:	00c52023          	sw	a2,0(a0)
80001d00:	10082303          	lw	t1,256(a6)
80001d04:	00100613          	li	a2,1
80001d08:	00e61633          	sll	a2,a2,a4
80001d0c:	00c36333          	or	t1,t1,a2
80001d10:	10682023          	sw	t1,256(a6)
80001d14:	08d52023          	sw	a3,128(a0)
80001d18:	00200693          	li	a3,2
80001d1c:	00d89863          	bne	a7,a3,80001d2c <__register_exitproc+0x84>
80001d20:	10482683          	lw	a3,260(a6)
80001d24:	00c6e633          	or	a2,a3,a2
80001d28:	10c82223          	sw	a2,260(a6)
80001d2c:	00170693          	addi	a3,a4,1
80001d30:	00271713          	slli	a4,a4,0x2
80001d34:	00d7a223          	sw	a3,4(a5)
80001d38:	00e787b3          	add	a5,a5,a4
80001d3c:	00b7a423          	sw	a1,8(a5)
80001d40:	00000513          	li	a0,0
80001d44:	00008067          	ret

80001d48 <__sflush_r>:
__sflush_r():
80001d48:	00c5d783          	lhu	a5,12(a1)
80001d4c:	fe010113          	addi	sp,sp,-32
80001d50:	00812c23          	sw	s0,24(sp)
80001d54:	00912a23          	sw	s1,20(sp)
80001d58:	00112e23          	sw	ra,28(sp)
80001d5c:	01212823          	sw	s2,16(sp)
80001d60:	01312623          	sw	s3,12(sp)
80001d64:	0087f713          	andi	a4,a5,8
80001d68:	00050493          	mv	s1,a0
80001d6c:	00058413          	mv	s0,a1
80001d70:	16071263          	bnez	a4,80001ed4 <__sflush_r+0x18c>
80001d74:	0045a703          	lw	a4,4(a1)
80001d78:	00e04a63          	bgtz	a4,80001d8c <__sflush_r+0x44>
80001d7c:	0405a703          	lw	a4,64(a1)
80001d80:	00e04663          	bgtz	a4,80001d8c <__sflush_r+0x44>
80001d84:	00000513          	li	a0,0
80001d88:	1240006f          	j	80001eac <__sflush_r+0x164>
80001d8c:	02c42703          	lw	a4,44(s0)
80001d90:	fe070ae3          	beqz	a4,80001d84 <__sflush_r+0x3c>
80001d94:	000016b7          	lui	a3,0x1
80001d98:	0004a903          	lw	s2,0(s1)
80001d9c:	00d7f7b3          	and	a5,a5,a3
80001da0:	0004a023          	sw	zero,0(s1)
80001da4:	0c078063          	beqz	a5,80001e64 <__sflush_r+0x11c>
80001da8:	05442503          	lw	a0,84(s0)
80001dac:	00c45783          	lhu	a5,12(s0)
80001db0:	0047f793          	andi	a5,a5,4
80001db4:	00078e63          	beqz	a5,80001dd0 <__sflush_r+0x88>
80001db8:	00442783          	lw	a5,4(s0)
80001dbc:	40f50533          	sub	a0,a0,a5
80001dc0:	03442783          	lw	a5,52(s0)
80001dc4:	00078663          	beqz	a5,80001dd0 <__sflush_r+0x88>
80001dc8:	04042783          	lw	a5,64(s0)
80001dcc:	40f50533          	sub	a0,a0,a5
80001dd0:	02c42783          	lw	a5,44(s0)
80001dd4:	02042583          	lw	a1,32(s0)
80001dd8:	00050613          	mv	a2,a0
80001ddc:	00000693          	li	a3,0
80001de0:	00048513          	mv	a0,s1
80001de4:	000780e7          	jalr	a5
80001de8:	fff00793          	li	a5,-1
80001dec:	00c45703          	lhu	a4,12(s0)
80001df0:	02f51263          	bne	a0,a5,80001e14 <__sflush_r+0xcc>
80001df4:	0004a683          	lw	a3,0(s1)
80001df8:	01d00793          	li	a5,29
80001dfc:	0cd7e663          	bltu	a5,a3,80001ec8 <__sflush_r+0x180>
80001e00:	204007b7          	lui	a5,0x20400
80001e04:	00178793          	addi	a5,a5,1 # 20400001 <__stack_size+0x203ff801>
80001e08:	00d7d7b3          	srl	a5,a5,a3
80001e0c:	0017f793          	andi	a5,a5,1
80001e10:	0a078c63          	beqz	a5,80001ec8 <__sflush_r+0x180>
80001e14:	01042783          	lw	a5,16(s0)
80001e18:	00042223          	sw	zero,4(s0)
80001e1c:	00f42023          	sw	a5,0(s0)
80001e20:	000017b7          	lui	a5,0x1
80001e24:	00f77733          	and	a4,a4,a5
80001e28:	00070c63          	beqz	a4,80001e40 <__sflush_r+0xf8>
80001e2c:	fff00793          	li	a5,-1
80001e30:	00f51663          	bne	a0,a5,80001e3c <__sflush_r+0xf4>
80001e34:	0004a783          	lw	a5,0(s1)
80001e38:	00079463          	bnez	a5,80001e40 <__sflush_r+0xf8>
80001e3c:	04a42a23          	sw	a0,84(s0)
80001e40:	03442583          	lw	a1,52(s0)
80001e44:	0124a023          	sw	s2,0(s1)
80001e48:	f2058ee3          	beqz	a1,80001d84 <__sflush_r+0x3c>
80001e4c:	04440793          	addi	a5,s0,68
80001e50:	00f58663          	beq	a1,a5,80001e5c <__sflush_r+0x114>
80001e54:	00048513          	mv	a0,s1
80001e58:	734000ef          	jal	ra,8000258c <_free_r>
80001e5c:	02042a23          	sw	zero,52(s0)
80001e60:	f25ff06f          	j	80001d84 <__sflush_r+0x3c>
80001e64:	02042583          	lw	a1,32(s0)
80001e68:	00100693          	li	a3,1
80001e6c:	00000613          	li	a2,0
80001e70:	00048513          	mv	a0,s1
80001e74:	000700e7          	jalr	a4
80001e78:	fff00793          	li	a5,-1
80001e7c:	f2f518e3          	bne	a0,a5,80001dac <__sflush_r+0x64>
80001e80:	0004a783          	lw	a5,0(s1)
80001e84:	f20784e3          	beqz	a5,80001dac <__sflush_r+0x64>
80001e88:	01d00713          	li	a4,29
80001e8c:	00e78663          	beq	a5,a4,80001e98 <__sflush_r+0x150>
80001e90:	01600713          	li	a4,22
80001e94:	00e79663          	bne	a5,a4,80001ea0 <__sflush_r+0x158>
80001e98:	0124a023          	sw	s2,0(s1)
80001e9c:	ee9ff06f          	j	80001d84 <__sflush_r+0x3c>
80001ea0:	00c45783          	lhu	a5,12(s0)
80001ea4:	0407e793          	ori	a5,a5,64
80001ea8:	00f41623          	sh	a5,12(s0)
80001eac:	01c12083          	lw	ra,28(sp)
80001eb0:	01812403          	lw	s0,24(sp)
80001eb4:	01412483          	lw	s1,20(sp)
80001eb8:	01012903          	lw	s2,16(sp)
80001ebc:	00c12983          	lw	s3,12(sp)
80001ec0:	02010113          	addi	sp,sp,32
80001ec4:	00008067          	ret
80001ec8:	04076713          	ori	a4,a4,64
80001ecc:	00e41623          	sh	a4,12(s0)
80001ed0:	fddff06f          	j	80001eac <__sflush_r+0x164>
80001ed4:	0105a983          	lw	s3,16(a1)
80001ed8:	ea0986e3          	beqz	s3,80001d84 <__sflush_r+0x3c>
80001edc:	0005a903          	lw	s2,0(a1)
80001ee0:	0037f793          	andi	a5,a5,3
80001ee4:	0135a023          	sw	s3,0(a1)
80001ee8:	41390933          	sub	s2,s2,s3
80001eec:	00000713          	li	a4,0
80001ef0:	00079463          	bnez	a5,80001ef8 <__sflush_r+0x1b0>
80001ef4:	0145a703          	lw	a4,20(a1)
80001ef8:	00e42423          	sw	a4,8(s0)
80001efc:	e92054e3          	blez	s2,80001d84 <__sflush_r+0x3c>
80001f00:	02842783          	lw	a5,40(s0)
80001f04:	02042583          	lw	a1,32(s0)
80001f08:	00090693          	mv	a3,s2
80001f0c:	00098613          	mv	a2,s3
80001f10:	00048513          	mv	a0,s1
80001f14:	000780e7          	jalr	a5 # 1000 <__stack_size+0x800>
80001f18:	00a04c63          	bgtz	a0,80001f30 <__sflush_r+0x1e8>
80001f1c:	00c45783          	lhu	a5,12(s0)
80001f20:	fff00513          	li	a0,-1
80001f24:	0407e793          	ori	a5,a5,64
80001f28:	00f41623          	sh	a5,12(s0)
80001f2c:	f81ff06f          	j	80001eac <__sflush_r+0x164>
80001f30:	00a989b3          	add	s3,s3,a0
80001f34:	40a90933          	sub	s2,s2,a0
80001f38:	fc5ff06f          	j	80001efc <__sflush_r+0x1b4>

80001f3c <_fflush_r>:
_fflush_r():
80001f3c:	0105a783          	lw	a5,16(a1)
80001f40:	08078a63          	beqz	a5,80001fd4 <_fflush_r+0x98>
80001f44:	fe010113          	addi	sp,sp,-32
80001f48:	00812c23          	sw	s0,24(sp)
80001f4c:	00112e23          	sw	ra,28(sp)
80001f50:	00050413          	mv	s0,a0
80001f54:	00050c63          	beqz	a0,80001f6c <_fflush_r+0x30>
80001f58:	01852783          	lw	a5,24(a0)
80001f5c:	00079863          	bnez	a5,80001f6c <_fflush_r+0x30>
80001f60:	00b12623          	sw	a1,12(sp)
80001f64:	178000ef          	jal	ra,800020dc <__sinit>
80001f68:	00c12583          	lw	a1,12(sp)
80001f6c:	00001797          	auipc	a5,0x1
80001f70:	7bc78793          	addi	a5,a5,1980 # 80003728 <__sf_fake_stdin>
80001f74:	02f59263          	bne	a1,a5,80001f98 <_fflush_r+0x5c>
80001f78:	00442583          	lw	a1,4(s0)
80001f7c:	00c59783          	lh	a5,12(a1)
80001f80:	04078063          	beqz	a5,80001fc0 <_fflush_r+0x84>
80001f84:	00040513          	mv	a0,s0
80001f88:	01812403          	lw	s0,24(sp)
80001f8c:	01c12083          	lw	ra,28(sp)
80001f90:	02010113          	addi	sp,sp,32
80001f94:	db5ff06f          	j	80001d48 <__sflush_r>
80001f98:	00001797          	auipc	a5,0x1
80001f9c:	7b078793          	addi	a5,a5,1968 # 80003748 <__sf_fake_stdout>
80001fa0:	00f59663          	bne	a1,a5,80001fac <_fflush_r+0x70>
80001fa4:	00842583          	lw	a1,8(s0)
80001fa8:	fd5ff06f          	j	80001f7c <_fflush_r+0x40>
80001fac:	00001797          	auipc	a5,0x1
80001fb0:	75c78793          	addi	a5,a5,1884 # 80003708 <__sf_fake_stderr>
80001fb4:	fcf594e3          	bne	a1,a5,80001f7c <_fflush_r+0x40>
80001fb8:	00c42583          	lw	a1,12(s0)
80001fbc:	fc1ff06f          	j	80001f7c <_fflush_r+0x40>
80001fc0:	01c12083          	lw	ra,28(sp)
80001fc4:	01812403          	lw	s0,24(sp)
80001fc8:	00000513          	li	a0,0
80001fcc:	02010113          	addi	sp,sp,32
80001fd0:	00008067          	ret
80001fd4:	00000513          	li	a0,0
80001fd8:	00008067          	ret

80001fdc <std>:
std():
80001fdc:	ff010113          	addi	sp,sp,-16
80001fe0:	00812423          	sw	s0,8(sp)
80001fe4:	00112623          	sw	ra,12(sp)
80001fe8:	00050413          	mv	s0,a0
80001fec:	00b51623          	sh	a1,12(a0)
80001ff0:	00c51723          	sh	a2,14(a0)
80001ff4:	00052023          	sw	zero,0(a0)
80001ff8:	00052223          	sw	zero,4(a0)
80001ffc:	00052423          	sw	zero,8(a0)
80002000:	06052223          	sw	zero,100(a0)
80002004:	00052823          	sw	zero,16(a0)
80002008:	00052a23          	sw	zero,20(a0)
8000200c:	00052c23          	sw	zero,24(a0)
80002010:	00800613          	li	a2,8
80002014:	00000593          	li	a1,0
80002018:	05c50513          	addi	a0,a0,92
8000201c:	494000ef          	jal	ra,800024b0 <memset>
80002020:	00001797          	auipc	a5,0x1
80002024:	c6c78793          	addi	a5,a5,-916 # 80002c8c <__sread>
80002028:	02f42223          	sw	a5,36(s0)
8000202c:	00001797          	auipc	a5,0x1
80002030:	cb078793          	addi	a5,a5,-848 # 80002cdc <__swrite>
80002034:	02f42423          	sw	a5,40(s0)
80002038:	00001797          	auipc	a5,0x1
8000203c:	d2878793          	addi	a5,a5,-728 # 80002d60 <__sseek>
80002040:	02f42623          	sw	a5,44(s0)
80002044:	00001797          	auipc	a5,0x1
80002048:	d7478793          	addi	a5,a5,-652 # 80002db8 <__sclose>
8000204c:	00c12083          	lw	ra,12(sp)
80002050:	02842023          	sw	s0,32(s0)
80002054:	02f42823          	sw	a5,48(s0)
80002058:	00812403          	lw	s0,8(sp)
8000205c:	01010113          	addi	sp,sp,16
80002060:	00008067          	ret

80002064 <_cleanup_r>:
_cleanup_r():
80002064:	00000597          	auipc	a1,0x0
80002068:	ed858593          	addi	a1,a1,-296 # 80001f3c <_fflush_r>
8000206c:	2080006f          	j	80002274 <_fwalk_reent>

80002070 <__sfmoreglue>:
__sfmoreglue():
80002070:	ff010113          	addi	sp,sp,-16
80002074:	00912223          	sw	s1,4(sp)
80002078:	06800613          	li	a2,104
8000207c:	fff58493          	addi	s1,a1,-1
80002080:	02c484b3          	mul	s1,s1,a2
80002084:	01212023          	sw	s2,0(sp)
80002088:	00058913          	mv	s2,a1
8000208c:	00812423          	sw	s0,8(sp)
80002090:	00112623          	sw	ra,12(sp)
80002094:	07448593          	addi	a1,s1,116
80002098:	5f0000ef          	jal	ra,80002688 <_malloc_r>
8000209c:	00050413          	mv	s0,a0
800020a0:	02050063          	beqz	a0,800020c0 <__sfmoreglue+0x50>
800020a4:	00052023          	sw	zero,0(a0)
800020a8:	01252223          	sw	s2,4(a0)
800020ac:	00c50513          	addi	a0,a0,12
800020b0:	00a42423          	sw	a0,8(s0)
800020b4:	06848613          	addi	a2,s1,104
800020b8:	00000593          	li	a1,0
800020bc:	3f4000ef          	jal	ra,800024b0 <memset>
800020c0:	00c12083          	lw	ra,12(sp)
800020c4:	00040513          	mv	a0,s0
800020c8:	00812403          	lw	s0,8(sp)
800020cc:	00412483          	lw	s1,4(sp)
800020d0:	00012903          	lw	s2,0(sp)
800020d4:	01010113          	addi	sp,sp,16
800020d8:	00008067          	ret

800020dc <__sinit>:
__sinit():
800020dc:	01852783          	lw	a5,24(a0)
800020e0:	0a079463          	bnez	a5,80002188 <__sinit+0xac>
800020e4:	ff010113          	addi	sp,sp,-16
800020e8:	00812423          	sw	s0,8(sp)
800020ec:	00112623          	sw	ra,12(sp)
800020f0:	00000797          	auipc	a5,0x0
800020f4:	f7478793          	addi	a5,a5,-140 # 80002064 <_cleanup_r>
800020f8:	02f52423          	sw	a5,40(a0)
800020fc:	04052423          	sw	zero,72(a0)
80002100:	04052623          	sw	zero,76(a0)
80002104:	04052823          	sw	zero,80(a0)
80002108:	8101a783          	lw	a5,-2032(gp) # 90000070 <_global_impure_ptr>
8000210c:	00050413          	mv	s0,a0
80002110:	00f51663          	bne	a0,a5,8000211c <__sinit+0x40>
80002114:	00100793          	li	a5,1
80002118:	00f52c23          	sw	a5,24(a0)
8000211c:	00040513          	mv	a0,s0
80002120:	06c000ef          	jal	ra,8000218c <__sfp>
80002124:	00a42223          	sw	a0,4(s0)
80002128:	00040513          	mv	a0,s0
8000212c:	060000ef          	jal	ra,8000218c <__sfp>
80002130:	00a42423          	sw	a0,8(s0)
80002134:	00040513          	mv	a0,s0
80002138:	054000ef          	jal	ra,8000218c <__sfp>
8000213c:	00a42623          	sw	a0,12(s0)
80002140:	00442503          	lw	a0,4(s0)
80002144:	00000613          	li	a2,0
80002148:	00400593          	li	a1,4
8000214c:	e91ff0ef          	jal	ra,80001fdc <std>
80002150:	00842503          	lw	a0,8(s0)
80002154:	00100613          	li	a2,1
80002158:	00900593          	li	a1,9
8000215c:	e81ff0ef          	jal	ra,80001fdc <std>
80002160:	00c42503          	lw	a0,12(s0)
80002164:	00200613          	li	a2,2
80002168:	01200593          	li	a1,18
8000216c:	e71ff0ef          	jal	ra,80001fdc <std>
80002170:	00100793          	li	a5,1
80002174:	00c12083          	lw	ra,12(sp)
80002178:	00f42c23          	sw	a5,24(s0)
8000217c:	00812403          	lw	s0,8(sp)
80002180:	01010113          	addi	sp,sp,16
80002184:	00008067          	ret
80002188:	00008067          	ret

8000218c <__sfp>:
__sfp():
8000218c:	ff010113          	addi	sp,sp,-16
80002190:	00912223          	sw	s1,4(sp)
80002194:	8101a483          	lw	s1,-2032(gp) # 90000070 <_global_impure_ptr>
80002198:	0184a783          	lw	a5,24(s1)
8000219c:	01212023          	sw	s2,0(sp)
800021a0:	00112623          	sw	ra,12(sp)
800021a4:	00812423          	sw	s0,8(sp)
800021a8:	00050913          	mv	s2,a0
800021ac:	00079663          	bnez	a5,800021b8 <__sfp+0x2c>
800021b0:	00048513          	mv	a0,s1
800021b4:	f29ff0ef          	jal	ra,800020dc <__sinit>
800021b8:	04848493          	addi	s1,s1,72
800021bc:	0084a403          	lw	s0,8(s1)
800021c0:	0044a783          	lw	a5,4(s1)
800021c4:	fff78793          	addi	a5,a5,-1
800021c8:	0007da63          	bgez	a5,800021dc <__sfp+0x50>
800021cc:	0004a783          	lw	a5,0(s1)
800021d0:	08078063          	beqz	a5,80002250 <__sfp+0xc4>
800021d4:	0004a483          	lw	s1,0(s1)
800021d8:	fe5ff06f          	j	800021bc <__sfp+0x30>
800021dc:	00c41703          	lh	a4,12(s0)
800021e0:	06071463          	bnez	a4,80002248 <__sfp+0xbc>
800021e4:	ffff07b7          	lui	a5,0xffff0
800021e8:	00178793          	addi	a5,a5,1 # ffff0001 <_sp+0x6ffe0001>
800021ec:	06042223          	sw	zero,100(s0)
800021f0:	00042023          	sw	zero,0(s0)
800021f4:	00042223          	sw	zero,4(s0)
800021f8:	00042423          	sw	zero,8(s0)
800021fc:	00f42623          	sw	a5,12(s0)
80002200:	00042823          	sw	zero,16(s0)
80002204:	00042a23          	sw	zero,20(s0)
80002208:	00042c23          	sw	zero,24(s0)
8000220c:	00800613          	li	a2,8
80002210:	00000593          	li	a1,0
80002214:	05c40513          	addi	a0,s0,92
80002218:	298000ef          	jal	ra,800024b0 <memset>
8000221c:	02042a23          	sw	zero,52(s0)
80002220:	02042c23          	sw	zero,56(s0)
80002224:	04042423          	sw	zero,72(s0)
80002228:	04042623          	sw	zero,76(s0)
8000222c:	00c12083          	lw	ra,12(sp)
80002230:	00040513          	mv	a0,s0
80002234:	00812403          	lw	s0,8(sp)
80002238:	00412483          	lw	s1,4(sp)
8000223c:	00012903          	lw	s2,0(sp)
80002240:	01010113          	addi	sp,sp,16
80002244:	00008067          	ret
80002248:	06840413          	addi	s0,s0,104
8000224c:	f79ff06f          	j	800021c4 <__sfp+0x38>
80002250:	00400593          	li	a1,4
80002254:	00090513          	mv	a0,s2
80002258:	e19ff0ef          	jal	ra,80002070 <__sfmoreglue>
8000225c:	00a4a023          	sw	a0,0(s1)
80002260:	00050413          	mv	s0,a0
80002264:	f60518e3          	bnez	a0,800021d4 <__sfp+0x48>
80002268:	00c00793          	li	a5,12
8000226c:	00f92023          	sw	a5,0(s2)
80002270:	fbdff06f          	j	8000222c <__sfp+0xa0>

80002274 <_fwalk_reent>:
_fwalk_reent():
80002274:	fd010113          	addi	sp,sp,-48
80002278:	02812423          	sw	s0,40(sp)
8000227c:	03212023          	sw	s2,32(sp)
80002280:	01312e23          	sw	s3,28(sp)
80002284:	01412c23          	sw	s4,24(sp)
80002288:	01612823          	sw	s6,16(sp)
8000228c:	01712623          	sw	s7,12(sp)
80002290:	02112623          	sw	ra,44(sp)
80002294:	02912223          	sw	s1,36(sp)
80002298:	01512a23          	sw	s5,20(sp)
8000229c:	00050913          	mv	s2,a0
800022a0:	00058a13          	mv	s4,a1
800022a4:	04850413          	addi	s0,a0,72
800022a8:	00000993          	li	s3,0
800022ac:	00100b13          	li	s6,1
800022b0:	fff00b93          	li	s7,-1
800022b4:	00842483          	lw	s1,8(s0)
800022b8:	00442a83          	lw	s5,4(s0)
800022bc:	fffa8a93          	addi	s5,s5,-1
800022c0:	020ade63          	bgez	s5,800022fc <_fwalk_reent+0x88>
800022c4:	00042403          	lw	s0,0(s0)
800022c8:	fe0416e3          	bnez	s0,800022b4 <_fwalk_reent+0x40>
800022cc:	02c12083          	lw	ra,44(sp)
800022d0:	02812403          	lw	s0,40(sp)
800022d4:	02412483          	lw	s1,36(sp)
800022d8:	02012903          	lw	s2,32(sp)
800022dc:	01812a03          	lw	s4,24(sp)
800022e0:	01412a83          	lw	s5,20(sp)
800022e4:	01012b03          	lw	s6,16(sp)
800022e8:	00c12b83          	lw	s7,12(sp)
800022ec:	00098513          	mv	a0,s3
800022f0:	01c12983          	lw	s3,28(sp)
800022f4:	03010113          	addi	sp,sp,48
800022f8:	00008067          	ret
800022fc:	00c4d783          	lhu	a5,12(s1)
80002300:	00fb7e63          	bgeu	s6,a5,8000231c <_fwalk_reent+0xa8>
80002304:	00e49783          	lh	a5,14(s1)
80002308:	01778a63          	beq	a5,s7,8000231c <_fwalk_reent+0xa8>
8000230c:	00048593          	mv	a1,s1
80002310:	00090513          	mv	a0,s2
80002314:	000a00e7          	jalr	s4
80002318:	00a9e9b3          	or	s3,s3,a0
8000231c:	06848493          	addi	s1,s1,104
80002320:	f9dff06f          	j	800022bc <_fwalk_reent+0x48>

80002324 <__swhatbuf_r>:
__swhatbuf_r():
80002324:	f9010113          	addi	sp,sp,-112
80002328:	07212023          	sw	s2,96(sp)
8000232c:	00058913          	mv	s2,a1
80002330:	00e59583          	lh	a1,14(a1)
80002334:	06812423          	sw	s0,104(sp)
80002338:	06912223          	sw	s1,100(sp)
8000233c:	06112623          	sw	ra,108(sp)
80002340:	00060413          	mv	s0,a2
80002344:	00068493          	mv	s1,a3
80002348:	0005de63          	bgez	a1,80002364 <__swhatbuf_r+0x40>
8000234c:	00c91783          	lh	a5,12(s2)
80002350:	0004a023          	sw	zero,0(s1)
80002354:	0807f793          	andi	a5,a5,128
80002358:	02079c63          	bnez	a5,80002390 <__swhatbuf_r+0x6c>
8000235c:	40000793          	li	a5,1024
80002360:	0340006f          	j	80002394 <__swhatbuf_r+0x70>
80002364:	00810613          	addi	a2,sp,8
80002368:	2e1000ef          	jal	ra,80002e48 <_fstat_r>
8000236c:	fe0540e3          	bltz	a0,8000234c <__swhatbuf_r+0x28>
80002370:	00c12703          	lw	a4,12(sp)
80002374:	0000f7b7          	lui	a5,0xf
80002378:	00e7f7b3          	and	a5,a5,a4
8000237c:	ffffe737          	lui	a4,0xffffe
80002380:	00e787b3          	add	a5,a5,a4
80002384:	0017b793          	seqz	a5,a5
80002388:	00f4a023          	sw	a5,0(s1)
8000238c:	fd1ff06f          	j	8000235c <__swhatbuf_r+0x38>
80002390:	04000793          	li	a5,64
80002394:	06c12083          	lw	ra,108(sp)
80002398:	00f42023          	sw	a5,0(s0)
8000239c:	06812403          	lw	s0,104(sp)
800023a0:	06412483          	lw	s1,100(sp)
800023a4:	06012903          	lw	s2,96(sp)
800023a8:	00000513          	li	a0,0
800023ac:	07010113          	addi	sp,sp,112
800023b0:	00008067          	ret

800023b4 <__smakebuf_r>:
__smakebuf_r():
800023b4:	00c5d783          	lhu	a5,12(a1)
800023b8:	fe010113          	addi	sp,sp,-32
800023bc:	00812c23          	sw	s0,24(sp)
800023c0:	00112e23          	sw	ra,28(sp)
800023c4:	00912a23          	sw	s1,20(sp)
800023c8:	01212823          	sw	s2,16(sp)
800023cc:	0027f793          	andi	a5,a5,2
800023d0:	00058413          	mv	s0,a1
800023d4:	02078863          	beqz	a5,80002404 <__smakebuf_r+0x50>
800023d8:	04740793          	addi	a5,s0,71
800023dc:	00f42023          	sw	a5,0(s0)
800023e0:	00f42823          	sw	a5,16(s0)
800023e4:	00100793          	li	a5,1
800023e8:	00f42a23          	sw	a5,20(s0)
800023ec:	01c12083          	lw	ra,28(sp)
800023f0:	01812403          	lw	s0,24(sp)
800023f4:	01412483          	lw	s1,20(sp)
800023f8:	01012903          	lw	s2,16(sp)
800023fc:	02010113          	addi	sp,sp,32
80002400:	00008067          	ret
80002404:	00c10693          	addi	a3,sp,12
80002408:	00810613          	addi	a2,sp,8
8000240c:	00050913          	mv	s2,a0
80002410:	f15ff0ef          	jal	ra,80002324 <__swhatbuf_r>
80002414:	00812583          	lw	a1,8(sp)
80002418:	00050493          	mv	s1,a0
8000241c:	00090513          	mv	a0,s2
80002420:	268000ef          	jal	ra,80002688 <_malloc_r>
80002424:	02051063          	bnez	a0,80002444 <__smakebuf_r+0x90>
80002428:	00c41783          	lh	a5,12(s0)
8000242c:	2007f713          	andi	a4,a5,512
80002430:	fa071ee3          	bnez	a4,800023ec <__smakebuf_r+0x38>
80002434:	ffc7f793          	andi	a5,a5,-4
80002438:	0027e793          	ori	a5,a5,2
8000243c:	00f41623          	sh	a5,12(s0)
80002440:	f99ff06f          	j	800023d8 <__smakebuf_r+0x24>
80002444:	00000797          	auipc	a5,0x0
80002448:	c2078793          	addi	a5,a5,-992 # 80002064 <_cleanup_r>
8000244c:	02f92423          	sw	a5,40(s2)
80002450:	00c45783          	lhu	a5,12(s0)
80002454:	00a42023          	sw	a0,0(s0)
80002458:	00a42823          	sw	a0,16(s0)
8000245c:	0807e793          	ori	a5,a5,128
80002460:	00f41623          	sh	a5,12(s0)
80002464:	00812783          	lw	a5,8(sp)
80002468:	00f42a23          	sw	a5,20(s0)
8000246c:	00c12783          	lw	a5,12(sp)
80002470:	02078263          	beqz	a5,80002494 <__smakebuf_r+0xe0>
80002474:	00e41583          	lh	a1,14(s0)
80002478:	00090513          	mv	a0,s2
8000247c:	211000ef          	jal	ra,80002e8c <_isatty_r>
80002480:	00050a63          	beqz	a0,80002494 <__smakebuf_r+0xe0>
80002484:	00c45783          	lhu	a5,12(s0)
80002488:	ffc7f793          	andi	a5,a5,-4
8000248c:	0017e793          	ori	a5,a5,1
80002490:	00f41623          	sh	a5,12(s0)
80002494:	00c45503          	lhu	a0,12(s0)
80002498:	00a4e4b3          	or	s1,s1,a0
8000249c:	00941623          	sh	s1,12(s0)
800024a0:	f4dff06f          	j	800023ec <__smakebuf_r+0x38>

800024a4 <malloc>:
malloc():
800024a4:	00050593          	mv	a1,a0
800024a8:	8081a503          	lw	a0,-2040(gp) # 90000068 <_impure_ptr>
800024ac:	1dc0006f          	j	80002688 <_malloc_r>

800024b0 <memset>:
memset():
800024b0:	00f00313          	li	t1,15
800024b4:	00050713          	mv	a4,a0
800024b8:	02c37e63          	bgeu	t1,a2,800024f4 <memset+0x44>
800024bc:	00f77793          	andi	a5,a4,15
800024c0:	0a079063          	bnez	a5,80002560 <memset+0xb0>
800024c4:	08059263          	bnez	a1,80002548 <memset+0x98>
800024c8:	ff067693          	andi	a3,a2,-16
800024cc:	00f67613          	andi	a2,a2,15
800024d0:	00e686b3          	add	a3,a3,a4
800024d4:	00b72023          	sw	a1,0(a4) # ffffe000 <_sp+0x6ffee000>
800024d8:	00b72223          	sw	a1,4(a4)
800024dc:	00b72423          	sw	a1,8(a4)
800024e0:	00b72623          	sw	a1,12(a4)
800024e4:	01070713          	addi	a4,a4,16
800024e8:	fed766e3          	bltu	a4,a3,800024d4 <memset+0x24>
800024ec:	00061463          	bnez	a2,800024f4 <memset+0x44>
800024f0:	00008067          	ret
800024f4:	40c306b3          	sub	a3,t1,a2
800024f8:	00269693          	slli	a3,a3,0x2
800024fc:	00000297          	auipc	t0,0x0
80002500:	005686b3          	add	a3,a3,t0
80002504:	00c68067          	jr	12(a3) # 100c <__stack_size+0x80c>
80002508:	00b70723          	sb	a1,14(a4)
8000250c:	00b706a3          	sb	a1,13(a4)
80002510:	00b70623          	sb	a1,12(a4)
80002514:	00b705a3          	sb	a1,11(a4)
80002518:	00b70523          	sb	a1,10(a4)
8000251c:	00b704a3          	sb	a1,9(a4)
80002520:	00b70423          	sb	a1,8(a4)
80002524:	00b703a3          	sb	a1,7(a4)
80002528:	00b70323          	sb	a1,6(a4)
8000252c:	00b702a3          	sb	a1,5(a4)
80002530:	00b70223          	sb	a1,4(a4)
80002534:	00b701a3          	sb	a1,3(a4)
80002538:	00b70123          	sb	a1,2(a4)
8000253c:	00b700a3          	sb	a1,1(a4)
80002540:	00b70023          	sb	a1,0(a4)
80002544:	00008067          	ret
80002548:	0ff5f593          	andi	a1,a1,255
8000254c:	00859693          	slli	a3,a1,0x8
80002550:	00d5e5b3          	or	a1,a1,a3
80002554:	01059693          	slli	a3,a1,0x10
80002558:	00d5e5b3          	or	a1,a1,a3
8000255c:	f6dff06f          	j	800024c8 <memset+0x18>
80002560:	00279693          	slli	a3,a5,0x2
80002564:	00000297          	auipc	t0,0x0
80002568:	005686b3          	add	a3,a3,t0
8000256c:	00008293          	mv	t0,ra
80002570:	fa0680e7          	jalr	-96(a3)
80002574:	00028093          	mv	ra,t0
80002578:	ff078793          	addi	a5,a5,-16
8000257c:	40f70733          	sub	a4,a4,a5
80002580:	00f60633          	add	a2,a2,a5
80002584:	f6c378e3          	bgeu	t1,a2,800024f4 <memset+0x44>
80002588:	f3dff06f          	j	800024c4 <memset+0x14>

8000258c <_free_r>:
_free_r():
8000258c:	0e058c63          	beqz	a1,80002684 <_free_r+0xf8>
80002590:	ffc5a783          	lw	a5,-4(a1)
80002594:	fe010113          	addi	sp,sp,-32
80002598:	00812c23          	sw	s0,24(sp)
8000259c:	00112e23          	sw	ra,28(sp)
800025a0:	ffc58413          	addi	s0,a1,-4
800025a4:	0007d463          	bgez	a5,800025ac <_free_r+0x20>
800025a8:	00f40433          	add	s0,s0,a5
800025ac:	00a12623          	sw	a0,12(sp)
800025b0:	189000ef          	jal	ra,80002f38 <__malloc_lock>
800025b4:	81c18713          	addi	a4,gp,-2020 # 9000007c <__malloc_free_list>
800025b8:	00072783          	lw	a5,0(a4)
800025bc:	00c12503          	lw	a0,12(sp)
800025c0:	00079e63          	bnez	a5,800025dc <_free_r+0x50>
800025c4:	00042223          	sw	zero,4(s0)
800025c8:	00872023          	sw	s0,0(a4)
800025cc:	01812403          	lw	s0,24(sp)
800025d0:	01c12083          	lw	ra,28(sp)
800025d4:	02010113          	addi	sp,sp,32
800025d8:	1650006f          	j	80002f3c <__malloc_unlock>
800025dc:	02f47463          	bgeu	s0,a5,80002604 <_free_r+0x78>
800025e0:	00042603          	lw	a2,0(s0)
800025e4:	00c406b3          	add	a3,s0,a2
800025e8:	00d79a63          	bne	a5,a3,800025fc <_free_r+0x70>
800025ec:	0007a683          	lw	a3,0(a5)
800025f0:	0047a783          	lw	a5,4(a5)
800025f4:	00c686b3          	add	a3,a3,a2
800025f8:	00d42023          	sw	a3,0(s0)
800025fc:	00f42223          	sw	a5,4(s0)
80002600:	fc9ff06f          	j	800025c8 <_free_r+0x3c>
80002604:	00078713          	mv	a4,a5
80002608:	0047a783          	lw	a5,4(a5)
8000260c:	00078463          	beqz	a5,80002614 <_free_r+0x88>
80002610:	fef47ae3          	bgeu	s0,a5,80002604 <_free_r+0x78>
80002614:	00072683          	lw	a3,0(a4)
80002618:	00d70633          	add	a2,a4,a3
8000261c:	02861863          	bne	a2,s0,8000264c <_free_r+0xc0>
80002620:	00042603          	lw	a2,0(s0)
80002624:	00c686b3          	add	a3,a3,a2
80002628:	00d72023          	sw	a3,0(a4)
8000262c:	00d70633          	add	a2,a4,a3
80002630:	f8c79ee3          	bne	a5,a2,800025cc <_free_r+0x40>
80002634:	0007a603          	lw	a2,0(a5)
80002638:	0047a783          	lw	a5,4(a5)
8000263c:	00d606b3          	add	a3,a2,a3
80002640:	00d72023          	sw	a3,0(a4)
80002644:	00f72223          	sw	a5,4(a4)
80002648:	f85ff06f          	j	800025cc <_free_r+0x40>
8000264c:	00c47863          	bgeu	s0,a2,8000265c <_free_r+0xd0>
80002650:	00c00793          	li	a5,12
80002654:	00f52023          	sw	a5,0(a0)
80002658:	f75ff06f          	j	800025cc <_free_r+0x40>
8000265c:	00042603          	lw	a2,0(s0)
80002660:	00c406b3          	add	a3,s0,a2
80002664:	00d79a63          	bne	a5,a3,80002678 <_free_r+0xec>
80002668:	0007a683          	lw	a3,0(a5)
8000266c:	0047a783          	lw	a5,4(a5)
80002670:	00c686b3          	add	a3,a3,a2
80002674:	00d42023          	sw	a3,0(s0)
80002678:	00f42223          	sw	a5,4(s0)
8000267c:	00872223          	sw	s0,4(a4)
80002680:	f4dff06f          	j	800025cc <_free_r+0x40>
80002684:	00008067          	ret

80002688 <_malloc_r>:
_malloc_r():
80002688:	fe010113          	addi	sp,sp,-32
8000268c:	00912a23          	sw	s1,20(sp)
80002690:	00358493          	addi	s1,a1,3
80002694:	ffc4f493          	andi	s1,s1,-4
80002698:	01212823          	sw	s2,16(sp)
8000269c:	00112e23          	sw	ra,28(sp)
800026a0:	00812c23          	sw	s0,24(sp)
800026a4:	01312623          	sw	s3,12(sp)
800026a8:	00848493          	addi	s1,s1,8
800026ac:	00c00793          	li	a5,12
800026b0:	00050913          	mv	s2,a0
800026b4:	06f4f463          	bgeu	s1,a5,8000271c <_malloc_r+0x94>
800026b8:	00c00493          	li	s1,12
800026bc:	06b4e263          	bltu	s1,a1,80002720 <_malloc_r+0x98>
800026c0:	00090513          	mv	a0,s2
800026c4:	075000ef          	jal	ra,80002f38 <__malloc_lock>
800026c8:	81c18693          	addi	a3,gp,-2020 # 9000007c <__malloc_free_list>
800026cc:	0006a703          	lw	a4,0(a3)
800026d0:	00070413          	mv	s0,a4
800026d4:	06041a63          	bnez	s0,80002748 <_malloc_r+0xc0>
800026d8:	82018413          	addi	s0,gp,-2016 # 90000080 <__malloc_sbrk_start>
800026dc:	00042783          	lw	a5,0(s0)
800026e0:	00079a63          	bnez	a5,800026f4 <_malloc_r+0x6c>
800026e4:	00000593          	li	a1,0
800026e8:	00090513          	mv	a0,s2
800026ec:	560000ef          	jal	ra,80002c4c <_sbrk_r>
800026f0:	00a42023          	sw	a0,0(s0)
800026f4:	00048593          	mv	a1,s1
800026f8:	00090513          	mv	a0,s2
800026fc:	550000ef          	jal	ra,80002c4c <_sbrk_r>
80002700:	fff00993          	li	s3,-1
80002704:	0b351a63          	bne	a0,s3,800027b8 <_malloc_r+0x130>
80002708:	00c00793          	li	a5,12
8000270c:	00f92023          	sw	a5,0(s2)
80002710:	00090513          	mv	a0,s2
80002714:	029000ef          	jal	ra,80002f3c <__malloc_unlock>
80002718:	0100006f          	j	80002728 <_malloc_r+0xa0>
8000271c:	fa04d0e3          	bgez	s1,800026bc <_malloc_r+0x34>
80002720:	00c00793          	li	a5,12
80002724:	00f92023          	sw	a5,0(s2)
80002728:	00000513          	li	a0,0
8000272c:	01c12083          	lw	ra,28(sp)
80002730:	01812403          	lw	s0,24(sp)
80002734:	01412483          	lw	s1,20(sp)
80002738:	01012903          	lw	s2,16(sp)
8000273c:	00c12983          	lw	s3,12(sp)
80002740:	02010113          	addi	sp,sp,32
80002744:	00008067          	ret
80002748:	00042783          	lw	a5,0(s0)
8000274c:	409787b3          	sub	a5,a5,s1
80002750:	0407ce63          	bltz	a5,800027ac <_malloc_r+0x124>
80002754:	00b00613          	li	a2,11
80002758:	00f67a63          	bgeu	a2,a5,8000276c <_malloc_r+0xe4>
8000275c:	00f42023          	sw	a5,0(s0)
80002760:	00f40433          	add	s0,s0,a5
80002764:	00942023          	sw	s1,0(s0)
80002768:	0100006f          	j	80002778 <_malloc_r+0xf0>
8000276c:	00442783          	lw	a5,4(s0)
80002770:	02871a63          	bne	a4,s0,800027a4 <_malloc_r+0x11c>
80002774:	00f6a023          	sw	a5,0(a3)
80002778:	00090513          	mv	a0,s2
8000277c:	7c0000ef          	jal	ra,80002f3c <__malloc_unlock>
80002780:	00b40513          	addi	a0,s0,11
80002784:	00440793          	addi	a5,s0,4
80002788:	ff857513          	andi	a0,a0,-8
8000278c:	40f50733          	sub	a4,a0,a5
80002790:	f8f50ee3          	beq	a0,a5,8000272c <_malloc_r+0xa4>
80002794:	00e40433          	add	s0,s0,a4
80002798:	40a787b3          	sub	a5,a5,a0
8000279c:	00f42023          	sw	a5,0(s0)
800027a0:	f8dff06f          	j	8000272c <_malloc_r+0xa4>
800027a4:	00f72223          	sw	a5,4(a4)
800027a8:	fd1ff06f          	j	80002778 <_malloc_r+0xf0>
800027ac:	00040713          	mv	a4,s0
800027b0:	00442403          	lw	s0,4(s0)
800027b4:	f21ff06f          	j	800026d4 <_malloc_r+0x4c>
800027b8:	00350413          	addi	s0,a0,3
800027bc:	ffc47413          	andi	s0,s0,-4
800027c0:	fa8502e3          	beq	a0,s0,80002764 <_malloc_r+0xdc>
800027c4:	40a405b3          	sub	a1,s0,a0
800027c8:	00090513          	mv	a0,s2
800027cc:	480000ef          	jal	ra,80002c4c <_sbrk_r>
800027d0:	f9351ae3          	bne	a0,s3,80002764 <_malloc_r+0xdc>
800027d4:	f35ff06f          	j	80002708 <_malloc_r+0x80>

800027d8 <__sfputc_r>:
__sfputc_r():
800027d8:	00862783          	lw	a5,8(a2)
800027dc:	fff78793          	addi	a5,a5,-1
800027e0:	00f62423          	sw	a5,8(a2)
800027e4:	0007dc63          	bgez	a5,800027fc <__sfputc_r+0x24>
800027e8:	01862703          	lw	a4,24(a2)
800027ec:	00e7c663          	blt	a5,a4,800027f8 <__sfputc_r+0x20>
800027f0:	00a00793          	li	a5,10
800027f4:	00f59463          	bne	a1,a5,800027fc <__sfputc_r+0x24>
800027f8:	a04ff06f          	j	800019fc <__swbuf_r>
800027fc:	00062783          	lw	a5,0(a2)
80002800:	00058513          	mv	a0,a1
80002804:	00178713          	addi	a4,a5,1
80002808:	00e62023          	sw	a4,0(a2)
8000280c:	00b78023          	sb	a1,0(a5)
80002810:	00008067          	ret

80002814 <__sfputs_r>:
__sfputs_r():
80002814:	fe010113          	addi	sp,sp,-32
80002818:	00812c23          	sw	s0,24(sp)
8000281c:	00912a23          	sw	s1,20(sp)
80002820:	01212823          	sw	s2,16(sp)
80002824:	01312623          	sw	s3,12(sp)
80002828:	01412423          	sw	s4,8(sp)
8000282c:	00112e23          	sw	ra,28(sp)
80002830:	00050913          	mv	s2,a0
80002834:	00058993          	mv	s3,a1
80002838:	00060413          	mv	s0,a2
8000283c:	00d604b3          	add	s1,a2,a3
80002840:	fff00a13          	li	s4,-1
80002844:	00941663          	bne	s0,s1,80002850 <__sfputs_r+0x3c>
80002848:	00000513          	li	a0,0
8000284c:	01c0006f          	j	80002868 <__sfputs_r+0x54>
80002850:	00044583          	lbu	a1,0(s0)
80002854:	00098613          	mv	a2,s3
80002858:	00090513          	mv	a0,s2
8000285c:	f7dff0ef          	jal	ra,800027d8 <__sfputc_r>
80002860:	00140413          	addi	s0,s0,1
80002864:	ff4510e3          	bne	a0,s4,80002844 <__sfputs_r+0x30>
80002868:	01c12083          	lw	ra,28(sp)
8000286c:	01812403          	lw	s0,24(sp)
80002870:	01412483          	lw	s1,20(sp)
80002874:	01012903          	lw	s2,16(sp)
80002878:	00c12983          	lw	s3,12(sp)
8000287c:	00812a03          	lw	s4,8(sp)
80002880:	02010113          	addi	sp,sp,32
80002884:	00008067          	ret

80002888 <_vfiprintf_r>:
_vfiprintf_r():
80002888:	f6010113          	addi	sp,sp,-160
8000288c:	08812c23          	sw	s0,152(sp)
80002890:	08912a23          	sw	s1,148(sp)
80002894:	09212823          	sw	s2,144(sp)
80002898:	09312623          	sw	s3,140(sp)
8000289c:	08112e23          	sw	ra,156(sp)
800028a0:	09412423          	sw	s4,136(sp)
800028a4:	09512223          	sw	s5,132(sp)
800028a8:	09612023          	sw	s6,128(sp)
800028ac:	07712e23          	sw	s7,124(sp)
800028b0:	07812c23          	sw	s8,120(sp)
800028b4:	07912a23          	sw	s9,116(sp)
800028b8:	00050993          	mv	s3,a0
800028bc:	00058493          	mv	s1,a1
800028c0:	00060913          	mv	s2,a2
800028c4:	00068413          	mv	s0,a3
800028c8:	00050863          	beqz	a0,800028d8 <_vfiprintf_r+0x50>
800028cc:	01852783          	lw	a5,24(a0)
800028d0:	00079463          	bnez	a5,800028d8 <_vfiprintf_r+0x50>
800028d4:	809ff0ef          	jal	ra,800020dc <__sinit>
800028d8:	00001797          	auipc	a5,0x1
800028dc:	e5078793          	addi	a5,a5,-432 # 80003728 <__sf_fake_stdin>
800028e0:	12f49263          	bne	s1,a5,80002a04 <_vfiprintf_r+0x17c>
800028e4:	0049a483          	lw	s1,4(s3)
800028e8:	00c4d783          	lhu	a5,12(s1)
800028ec:	0087f793          	andi	a5,a5,8
800028f0:	12078e63          	beqz	a5,80002a2c <_vfiprintf_r+0x1a4>
800028f4:	0104a783          	lw	a5,16(s1)
800028f8:	12078a63          	beqz	a5,80002a2c <_vfiprintf_r+0x1a4>
800028fc:	02000793          	li	a5,32
80002900:	02f104a3          	sb	a5,41(sp)
80002904:	03000793          	li	a5,48
80002908:	02012223          	sw	zero,36(sp)
8000290c:	02f10523          	sb	a5,42(sp)
80002910:	00812623          	sw	s0,12(sp)
80002914:	02500b93          	li	s7,37
80002918:	00001a97          	auipc	s5,0x1
8000291c:	e50a8a93          	addi	s5,s5,-432 # 80003768 <__sf_fake_stdout+0x20>
80002920:	00100c13          	li	s8,1
80002924:	00a00b13          	li	s6,10
80002928:	00090413          	mv	s0,s2
8000292c:	00044783          	lbu	a5,0(s0)
80002930:	00078463          	beqz	a5,80002938 <_vfiprintf_r+0xb0>
80002934:	15779063          	bne	a5,s7,80002a74 <_vfiprintf_r+0x1ec>
80002938:	41240cb3          	sub	s9,s0,s2
8000293c:	03240663          	beq	s0,s2,80002968 <_vfiprintf_r+0xe0>
80002940:	000c8693          	mv	a3,s9
80002944:	00090613          	mv	a2,s2
80002948:	00048593          	mv	a1,s1
8000294c:	00098513          	mv	a0,s3
80002950:	ec5ff0ef          	jal	ra,80002814 <__sfputs_r>
80002954:	fff00793          	li	a5,-1
80002958:	2cf50063          	beq	a0,a5,80002c18 <_vfiprintf_r+0x390>
8000295c:	02412783          	lw	a5,36(sp)
80002960:	019787b3          	add	a5,a5,s9
80002964:	02f12223          	sw	a5,36(sp)
80002968:	00044783          	lbu	a5,0(s0)
8000296c:	2a078663          	beqz	a5,80002c18 <_vfiprintf_r+0x390>
80002970:	fff00793          	li	a5,-1
80002974:	00140913          	addi	s2,s0,1
80002978:	00012823          	sw	zero,16(sp)
8000297c:	00012e23          	sw	zero,28(sp)
80002980:	00f12a23          	sw	a5,20(sp)
80002984:	00012c23          	sw	zero,24(sp)
80002988:	040109a3          	sb	zero,83(sp)
8000298c:	06012423          	sw	zero,104(sp)
80002990:	00094583          	lbu	a1,0(s2)
80002994:	00500613          	li	a2,5
80002998:	000a8513          	mv	a0,s5
8000299c:	578000ef          	jal	ra,80002f14 <memchr>
800029a0:	01012783          	lw	a5,16(sp)
800029a4:	00190413          	addi	s0,s2,1
800029a8:	0c051a63          	bnez	a0,80002a7c <_vfiprintf_r+0x1f4>
800029ac:	0107f713          	andi	a4,a5,16
800029b0:	00070663          	beqz	a4,800029bc <_vfiprintf_r+0x134>
800029b4:	02000713          	li	a4,32
800029b8:	04e109a3          	sb	a4,83(sp)
800029bc:	0087f713          	andi	a4,a5,8
800029c0:	00070663          	beqz	a4,800029cc <_vfiprintf_r+0x144>
800029c4:	02b00713          	li	a4,43
800029c8:	04e109a3          	sb	a4,83(sp)
800029cc:	00094683          	lbu	a3,0(s2)
800029d0:	02a00713          	li	a4,42
800029d4:	0ce68063          	beq	a3,a4,80002a94 <_vfiprintf_r+0x20c>
800029d8:	01c12783          	lw	a5,28(sp)
800029dc:	00090413          	mv	s0,s2
800029e0:	00000693          	li	a3,0
800029e4:	00900613          	li	a2,9
800029e8:	00044703          	lbu	a4,0(s0)
800029ec:	00140593          	addi	a1,s0,1
800029f0:	fd070713          	addi	a4,a4,-48
800029f4:	10e67263          	bgeu	a2,a4,80002af8 <_vfiprintf_r+0x270>
800029f8:	0a068a63          	beqz	a3,80002aac <_vfiprintf_r+0x224>
800029fc:	00f12e23          	sw	a5,28(sp)
80002a00:	0ac0006f          	j	80002aac <_vfiprintf_r+0x224>
80002a04:	00001797          	auipc	a5,0x1
80002a08:	d4478793          	addi	a5,a5,-700 # 80003748 <__sf_fake_stdout>
80002a0c:	00f49663          	bne	s1,a5,80002a18 <_vfiprintf_r+0x190>
80002a10:	0089a483          	lw	s1,8(s3)
80002a14:	ed5ff06f          	j	800028e8 <_vfiprintf_r+0x60>
80002a18:	00001797          	auipc	a5,0x1
80002a1c:	cf078793          	addi	a5,a5,-784 # 80003708 <__sf_fake_stderr>
80002a20:	ecf494e3          	bne	s1,a5,800028e8 <_vfiprintf_r+0x60>
80002a24:	00c9a483          	lw	s1,12(s3)
80002a28:	ec1ff06f          	j	800028e8 <_vfiprintf_r+0x60>
80002a2c:	00048593          	mv	a1,s1
80002a30:	00098513          	mv	a0,s3
80002a34:	900ff0ef          	jal	ra,80001b34 <__swsetup_r>
80002a38:	ec0502e3          	beqz	a0,800028fc <_vfiprintf_r+0x74>
80002a3c:	fff00513          	li	a0,-1
80002a40:	09c12083          	lw	ra,156(sp)
80002a44:	09812403          	lw	s0,152(sp)
80002a48:	09412483          	lw	s1,148(sp)
80002a4c:	09012903          	lw	s2,144(sp)
80002a50:	08c12983          	lw	s3,140(sp)
80002a54:	08812a03          	lw	s4,136(sp)
80002a58:	08412a83          	lw	s5,132(sp)
80002a5c:	08012b03          	lw	s6,128(sp)
80002a60:	07c12b83          	lw	s7,124(sp)
80002a64:	07812c03          	lw	s8,120(sp)
80002a68:	07412c83          	lw	s9,116(sp)
80002a6c:	0a010113          	addi	sp,sp,160
80002a70:	00008067          	ret
80002a74:	00140413          	addi	s0,s0,1
80002a78:	eb5ff06f          	j	8000292c <_vfiprintf_r+0xa4>
80002a7c:	41550533          	sub	a0,a0,s5
80002a80:	00ac1533          	sll	a0,s8,a0
80002a84:	00a7e7b3          	or	a5,a5,a0
80002a88:	00f12823          	sw	a5,16(sp)
80002a8c:	00040913          	mv	s2,s0
80002a90:	f01ff06f          	j	80002990 <_vfiprintf_r+0x108>
80002a94:	00c12703          	lw	a4,12(sp)
80002a98:	00470693          	addi	a3,a4,4
80002a9c:	00072703          	lw	a4,0(a4)
80002aa0:	00d12623          	sw	a3,12(sp)
80002aa4:	04074063          	bltz	a4,80002ae4 <_vfiprintf_r+0x25c>
80002aa8:	00e12e23          	sw	a4,28(sp)
80002aac:	00044703          	lbu	a4,0(s0)
80002ab0:	02e00793          	li	a5,46
80002ab4:	08f71463          	bne	a4,a5,80002b3c <_vfiprintf_r+0x2b4>
80002ab8:	00144703          	lbu	a4,1(s0)
80002abc:	02a00793          	li	a5,42
80002ac0:	04f71a63          	bne	a4,a5,80002b14 <_vfiprintf_r+0x28c>
80002ac4:	00c12783          	lw	a5,12(sp)
80002ac8:	00240413          	addi	s0,s0,2
80002acc:	00478713          	addi	a4,a5,4
80002ad0:	0007a783          	lw	a5,0(a5)
80002ad4:	00e12623          	sw	a4,12(sp)
80002ad8:	0207ca63          	bltz	a5,80002b0c <_vfiprintf_r+0x284>
80002adc:	00f12a23          	sw	a5,20(sp)
80002ae0:	05c0006f          	j	80002b3c <_vfiprintf_r+0x2b4>
80002ae4:	40e00733          	neg	a4,a4
80002ae8:	0027e793          	ori	a5,a5,2
80002aec:	00e12e23          	sw	a4,28(sp)
80002af0:	00f12823          	sw	a5,16(sp)
80002af4:	fb9ff06f          	j	80002aac <_vfiprintf_r+0x224>
80002af8:	036787b3          	mul	a5,a5,s6
80002afc:	00058413          	mv	s0,a1
80002b00:	00100693          	li	a3,1
80002b04:	00e787b3          	add	a5,a5,a4
80002b08:	ee1ff06f          	j	800029e8 <_vfiprintf_r+0x160>
80002b0c:	fff00793          	li	a5,-1
80002b10:	fcdff06f          	j	80002adc <_vfiprintf_r+0x254>
80002b14:	00140413          	addi	s0,s0,1
80002b18:	00012a23          	sw	zero,20(sp)
80002b1c:	00000693          	li	a3,0
80002b20:	00000793          	li	a5,0
80002b24:	00900613          	li	a2,9
80002b28:	00044703          	lbu	a4,0(s0)
80002b2c:	00140593          	addi	a1,s0,1
80002b30:	fd070713          	addi	a4,a4,-48
80002b34:	08e67a63          	bgeu	a2,a4,80002bc8 <_vfiprintf_r+0x340>
80002b38:	fa0692e3          	bnez	a3,80002adc <_vfiprintf_r+0x254>
80002b3c:	00044583          	lbu	a1,0(s0)
80002b40:	00300613          	li	a2,3
80002b44:	00001517          	auipc	a0,0x1
80002b48:	c2c50513          	addi	a0,a0,-980 # 80003770 <__sf_fake_stdout+0x28>
80002b4c:	3c8000ef          	jal	ra,80002f14 <memchr>
80002b50:	02050463          	beqz	a0,80002b78 <_vfiprintf_r+0x2f0>
80002b54:	00001797          	auipc	a5,0x1
80002b58:	c1c78793          	addi	a5,a5,-996 # 80003770 <__sf_fake_stdout+0x28>
80002b5c:	40f50533          	sub	a0,a0,a5
80002b60:	04000793          	li	a5,64
80002b64:	00a797b3          	sll	a5,a5,a0
80002b68:	01012503          	lw	a0,16(sp)
80002b6c:	00140413          	addi	s0,s0,1
80002b70:	00f56533          	or	a0,a0,a5
80002b74:	00a12823          	sw	a0,16(sp)
80002b78:	00044583          	lbu	a1,0(s0)
80002b7c:	00600613          	li	a2,6
80002b80:	00001517          	auipc	a0,0x1
80002b84:	bf450513          	addi	a0,a0,-1036 # 80003774 <__sf_fake_stdout+0x2c>
80002b88:	00140913          	addi	s2,s0,1
80002b8c:	02b10423          	sb	a1,40(sp)
80002b90:	384000ef          	jal	ra,80002f14 <memchr>
80002b94:	08050c63          	beqz	a0,80002c2c <_vfiprintf_r+0x3a4>
80002b98:	00000793          	li	a5,0
80002b9c:	04079863          	bnez	a5,80002bec <_vfiprintf_r+0x364>
80002ba0:	01012703          	lw	a4,16(sp)
80002ba4:	00c12783          	lw	a5,12(sp)
80002ba8:	10077713          	andi	a4,a4,256
80002bac:	02070863          	beqz	a4,80002bdc <_vfiprintf_r+0x354>
80002bb0:	00478793          	addi	a5,a5,4
80002bb4:	00f12623          	sw	a5,12(sp)
80002bb8:	02412783          	lw	a5,36(sp)
80002bbc:	014787b3          	add	a5,a5,s4
80002bc0:	02f12223          	sw	a5,36(sp)
80002bc4:	d65ff06f          	j	80002928 <_vfiprintf_r+0xa0>
80002bc8:	036787b3          	mul	a5,a5,s6
80002bcc:	00058413          	mv	s0,a1
80002bd0:	00100693          	li	a3,1
80002bd4:	00e787b3          	add	a5,a5,a4
80002bd8:	f51ff06f          	j	80002b28 <_vfiprintf_r+0x2a0>
80002bdc:	00778793          	addi	a5,a5,7
80002be0:	ff87f793          	andi	a5,a5,-8
80002be4:	00878793          	addi	a5,a5,8
80002be8:	fcdff06f          	j	80002bb4 <_vfiprintf_r+0x32c>
80002bec:	00c10713          	addi	a4,sp,12
80002bf0:	00000697          	auipc	a3,0x0
80002bf4:	c2468693          	addi	a3,a3,-988 # 80002814 <__sfputs_r>
80002bf8:	00048613          	mv	a2,s1
80002bfc:	01010593          	addi	a1,sp,16
80002c00:	00098513          	mv	a0,s3
80002c04:	00000097          	auipc	ra,0x0
80002c08:	000000e7          	jalr	zero # 0 <__stack_size-0x800>
80002c0c:	fff00793          	li	a5,-1
80002c10:	00050a13          	mv	s4,a0
80002c14:	faf512e3          	bne	a0,a5,80002bb8 <_vfiprintf_r+0x330>
80002c18:	00c4d783          	lhu	a5,12(s1)
80002c1c:	0407f793          	andi	a5,a5,64
80002c20:	e0079ee3          	bnez	a5,80002a3c <_vfiprintf_r+0x1b4>
80002c24:	02412503          	lw	a0,36(sp)
80002c28:	e19ff06f          	j	80002a40 <_vfiprintf_r+0x1b8>
80002c2c:	00c10713          	addi	a4,sp,12
80002c30:	00000697          	auipc	a3,0x0
80002c34:	be468693          	addi	a3,a3,-1052 # 80002814 <__sfputs_r>
80002c38:	00048613          	mv	a2,s1
80002c3c:	01010593          	addi	a1,sp,16
80002c40:	00098513          	mv	a0,s3
80002c44:	4ac000ef          	jal	ra,800030f0 <_printf_i>
80002c48:	fc5ff06f          	j	80002c0c <_vfiprintf_r+0x384>

80002c4c <_sbrk_r>:
_sbrk_r():
80002c4c:	ff010113          	addi	sp,sp,-16
80002c50:	00812423          	sw	s0,8(sp)
80002c54:	00050413          	mv	s0,a0
80002c58:	00058513          	mv	a0,a1
80002c5c:	8001aa23          	sw	zero,-2028(gp) # 90000074 <errno>
80002c60:	00112623          	sw	ra,12(sp)
80002c64:	f80fd0ef          	jal	ra,800003e4 <_sbrk>
80002c68:	fff00793          	li	a5,-1
80002c6c:	00f51863          	bne	a0,a5,80002c7c <_sbrk_r+0x30>
80002c70:	8141a783          	lw	a5,-2028(gp) # 90000074 <errno>
80002c74:	00078463          	beqz	a5,80002c7c <_sbrk_r+0x30>
80002c78:	00f42023          	sw	a5,0(s0)
80002c7c:	00c12083          	lw	ra,12(sp)
80002c80:	00812403          	lw	s0,8(sp)
80002c84:	01010113          	addi	sp,sp,16
80002c88:	00008067          	ret

80002c8c <__sread>:
__sread():
80002c8c:	ff010113          	addi	sp,sp,-16
80002c90:	00812423          	sw	s0,8(sp)
80002c94:	00058413          	mv	s0,a1
80002c98:	00e59583          	lh	a1,14(a1)
80002c9c:	00112623          	sw	ra,12(sp)
80002ca0:	7f4000ef          	jal	ra,80003494 <_read_r>
80002ca4:	02054063          	bltz	a0,80002cc4 <__sread+0x38>
80002ca8:	05442783          	lw	a5,84(s0)
80002cac:	00a787b3          	add	a5,a5,a0
80002cb0:	04f42a23          	sw	a5,84(s0)
80002cb4:	00c12083          	lw	ra,12(sp)
80002cb8:	00812403          	lw	s0,8(sp)
80002cbc:	01010113          	addi	sp,sp,16
80002cc0:	00008067          	ret
80002cc4:	00c45783          	lhu	a5,12(s0)
80002cc8:	fffff737          	lui	a4,0xfffff
80002ccc:	fff70713          	addi	a4,a4,-1 # ffffefff <_sp+0x6ffeefff>
80002cd0:	00e7f7b3          	and	a5,a5,a4
80002cd4:	00f41623          	sh	a5,12(s0)
80002cd8:	fddff06f          	j	80002cb4 <__sread+0x28>

80002cdc <__swrite>:
__swrite():
80002cdc:	00c5d783          	lhu	a5,12(a1)
80002ce0:	fe010113          	addi	sp,sp,-32
80002ce4:	00812c23          	sw	s0,24(sp)
80002ce8:	00912a23          	sw	s1,20(sp)
80002cec:	01212823          	sw	s2,16(sp)
80002cf0:	01312623          	sw	s3,12(sp)
80002cf4:	00112e23          	sw	ra,28(sp)
80002cf8:	1007f793          	andi	a5,a5,256
80002cfc:	00050493          	mv	s1,a0
80002d00:	00058413          	mv	s0,a1
80002d04:	00060913          	mv	s2,a2
80002d08:	00068993          	mv	s3,a3
80002d0c:	00078a63          	beqz	a5,80002d20 <__swrite+0x44>
80002d10:	00e59583          	lh	a1,14(a1)
80002d14:	00200693          	li	a3,2
80002d18:	00000613          	li	a2,0
80002d1c:	1b0000ef          	jal	ra,80002ecc <_lseek_r>
80002d20:	00c45783          	lhu	a5,12(s0)
80002d24:	fffff737          	lui	a4,0xfffff
80002d28:	fff70713          	addi	a4,a4,-1 # ffffefff <_sp+0x6ffeefff>
80002d2c:	00e7f7b3          	and	a5,a5,a4
80002d30:	00e41583          	lh	a1,14(s0)
80002d34:	00f41623          	sh	a5,12(s0)
80002d38:	01812403          	lw	s0,24(sp)
80002d3c:	01c12083          	lw	ra,28(sp)
80002d40:	00098693          	mv	a3,s3
80002d44:	00090613          	mv	a2,s2
80002d48:	00c12983          	lw	s3,12(sp)
80002d4c:	01012903          	lw	s2,16(sp)
80002d50:	00048513          	mv	a0,s1
80002d54:	01412483          	lw	s1,20(sp)
80002d58:	02010113          	addi	sp,sp,32
80002d5c:	0640006f          	j	80002dc0 <_write_r>

80002d60 <__sseek>:
__sseek():
80002d60:	ff010113          	addi	sp,sp,-16
80002d64:	00812423          	sw	s0,8(sp)
80002d68:	00058413          	mv	s0,a1
80002d6c:	00e59583          	lh	a1,14(a1)
80002d70:	00112623          	sw	ra,12(sp)
80002d74:	158000ef          	jal	ra,80002ecc <_lseek_r>
80002d78:	fff00793          	li	a5,-1
80002d7c:	00c45703          	lhu	a4,12(s0)
80002d80:	02f51263          	bne	a0,a5,80002da4 <__sseek+0x44>
80002d84:	fffff7b7          	lui	a5,0xfffff
80002d88:	fff78793          	addi	a5,a5,-1 # ffffefff <_sp+0x6ffeefff>
80002d8c:	00e7f7b3          	and	a5,a5,a4
80002d90:	00f41623          	sh	a5,12(s0)
80002d94:	00c12083          	lw	ra,12(sp)
80002d98:	00812403          	lw	s0,8(sp)
80002d9c:	01010113          	addi	sp,sp,16
80002da0:	00008067          	ret
80002da4:	000017b7          	lui	a5,0x1
80002da8:	00f767b3          	or	a5,a4,a5
80002dac:	00f41623          	sh	a5,12(s0)
80002db0:	04a42a23          	sw	a0,84(s0)
80002db4:	fe1ff06f          	j	80002d94 <__sseek+0x34>

80002db8 <__sclose>:
__sclose():
80002db8:	00e59583          	lh	a1,14(a1)
80002dbc:	04c0006f          	j	80002e08 <_close_r>

80002dc0 <_write_r>:
_write_r():
80002dc0:	ff010113          	addi	sp,sp,-16
80002dc4:	00812423          	sw	s0,8(sp)
80002dc8:	00050413          	mv	s0,a0
80002dcc:	00058513          	mv	a0,a1
80002dd0:	00060593          	mv	a1,a2
80002dd4:	00068613          	mv	a2,a3
80002dd8:	8001aa23          	sw	zero,-2028(gp) # 90000074 <errno>
80002ddc:	00112623          	sw	ra,12(sp)
80002de0:	e40fd0ef          	jal	ra,80000420 <_write>
80002de4:	fff00793          	li	a5,-1
80002de8:	00f51863          	bne	a0,a5,80002df8 <_write_r+0x38>
80002dec:	8141a783          	lw	a5,-2028(gp) # 90000074 <errno>
80002df0:	00078463          	beqz	a5,80002df8 <_write_r+0x38>
80002df4:	00f42023          	sw	a5,0(s0)
80002df8:	00c12083          	lw	ra,12(sp)
80002dfc:	00812403          	lw	s0,8(sp)
80002e00:	01010113          	addi	sp,sp,16
80002e04:	00008067          	ret

80002e08 <_close_r>:
_close_r():
80002e08:	ff010113          	addi	sp,sp,-16
80002e0c:	00812423          	sw	s0,8(sp)
80002e10:	00050413          	mv	s0,a0
80002e14:	00058513          	mv	a0,a1
80002e18:	8001aa23          	sw	zero,-2028(gp) # 90000074 <errno>
80002e1c:	00112623          	sw	ra,12(sp)
80002e20:	d38fd0ef          	jal	ra,80000358 <_close>
80002e24:	fff00793          	li	a5,-1
80002e28:	00f51863          	bne	a0,a5,80002e38 <_close_r+0x30>
80002e2c:	8141a783          	lw	a5,-2028(gp) # 90000074 <errno>
80002e30:	00078463          	beqz	a5,80002e38 <_close_r+0x30>
80002e34:	00f42023          	sw	a5,0(s0)
80002e38:	00c12083          	lw	ra,12(sp)
80002e3c:	00812403          	lw	s0,8(sp)
80002e40:	01010113          	addi	sp,sp,16
80002e44:	00008067          	ret

80002e48 <_fstat_r>:
_fstat_r():
80002e48:	ff010113          	addi	sp,sp,-16
80002e4c:	00812423          	sw	s0,8(sp)
80002e50:	00050413          	mv	s0,a0
80002e54:	00058513          	mv	a0,a1
80002e58:	00060593          	mv	a1,a2
80002e5c:	8001aa23          	sw	zero,-2028(gp) # 90000074 <errno>
80002e60:	00112623          	sw	ra,12(sp)
80002e64:	d04fd0ef          	jal	ra,80000368 <_fstat>
80002e68:	fff00793          	li	a5,-1
80002e6c:	00f51863          	bne	a0,a5,80002e7c <_fstat_r+0x34>
80002e70:	8141a783          	lw	a5,-2028(gp) # 90000074 <errno>
80002e74:	00078463          	beqz	a5,80002e7c <_fstat_r+0x34>
80002e78:	00f42023          	sw	a5,0(s0)
80002e7c:	00c12083          	lw	ra,12(sp)
80002e80:	00812403          	lw	s0,8(sp)
80002e84:	01010113          	addi	sp,sp,16
80002e88:	00008067          	ret

80002e8c <_isatty_r>:
_isatty_r():
80002e8c:	ff010113          	addi	sp,sp,-16
80002e90:	00812423          	sw	s0,8(sp)
80002e94:	00050413          	mv	s0,a0
80002e98:	00058513          	mv	a0,a1
80002e9c:	8001aa23          	sw	zero,-2028(gp) # 90000074 <errno>
80002ea0:	00112623          	sw	ra,12(sp)
80002ea4:	cf0fd0ef          	jal	ra,80000394 <_isatty>
80002ea8:	fff00793          	li	a5,-1
80002eac:	00f51863          	bne	a0,a5,80002ebc <_isatty_r+0x30>
80002eb0:	8141a783          	lw	a5,-2028(gp) # 90000074 <errno>
80002eb4:	00078463          	beqz	a5,80002ebc <_isatty_r+0x30>
80002eb8:	00f42023          	sw	a5,0(s0)
80002ebc:	00c12083          	lw	ra,12(sp)
80002ec0:	00812403          	lw	s0,8(sp)
80002ec4:	01010113          	addi	sp,sp,16
80002ec8:	00008067          	ret

80002ecc <_lseek_r>:
_lseek_r():
80002ecc:	ff010113          	addi	sp,sp,-16
80002ed0:	00812423          	sw	s0,8(sp)
80002ed4:	00050413          	mv	s0,a0
80002ed8:	00058513          	mv	a0,a1
80002edc:	00060593          	mv	a1,a2
80002ee0:	00068613          	mv	a2,a3
80002ee4:	8001aa23          	sw	zero,-2028(gp) # 90000074 <errno>
80002ee8:	00112623          	sw	ra,12(sp)
80002eec:	cb0fd0ef          	jal	ra,8000039c <_lseek>
80002ef0:	fff00793          	li	a5,-1
80002ef4:	00f51863          	bne	a0,a5,80002f04 <_lseek_r+0x38>
80002ef8:	8141a783          	lw	a5,-2028(gp) # 90000074 <errno>
80002efc:	00078463          	beqz	a5,80002f04 <_lseek_r+0x38>
80002f00:	00f42023          	sw	a5,0(s0)
80002f04:	00c12083          	lw	ra,12(sp)
80002f08:	00812403          	lw	s0,8(sp)
80002f0c:	01010113          	addi	sp,sp,16
80002f10:	00008067          	ret

80002f14 <memchr>:
memchr():
80002f14:	0ff5f593          	andi	a1,a1,255
80002f18:	00c50633          	add	a2,a0,a2
80002f1c:	00c51663          	bne	a0,a2,80002f28 <memchr+0x14>
80002f20:	00000513          	li	a0,0
80002f24:	00008067          	ret
80002f28:	00054783          	lbu	a5,0(a0)
80002f2c:	feb78ce3          	beq	a5,a1,80002f24 <memchr+0x10>
80002f30:	00150513          	addi	a0,a0,1
80002f34:	fe9ff06f          	j	80002f1c <memchr+0x8>

80002f38 <__malloc_lock>:
__malloc_lock():
80002f38:	00008067          	ret

80002f3c <__malloc_unlock>:
__malloc_unlock():
80002f3c:	00008067          	ret

80002f40 <_printf_common>:
_printf_common():
80002f40:	fd010113          	addi	sp,sp,-48
80002f44:	01412c23          	sw	s4,24(sp)
80002f48:	0105a783          	lw	a5,16(a1)
80002f4c:	00070a13          	mv	s4,a4
80002f50:	0085a703          	lw	a4,8(a1)
80002f54:	02812423          	sw	s0,40(sp)
80002f58:	02912223          	sw	s1,36(sp)
80002f5c:	01312e23          	sw	s3,28(sp)
80002f60:	01512a23          	sw	s5,20(sp)
80002f64:	02112623          	sw	ra,44(sp)
80002f68:	03212023          	sw	s2,32(sp)
80002f6c:	01612823          	sw	s6,16(sp)
80002f70:	01712623          	sw	s7,12(sp)
80002f74:	00050993          	mv	s3,a0
80002f78:	00058413          	mv	s0,a1
80002f7c:	00060493          	mv	s1,a2
80002f80:	00068a93          	mv	s5,a3
80002f84:	00e7d463          	bge	a5,a4,80002f8c <_printf_common+0x4c>
80002f88:	00070793          	mv	a5,a4
80002f8c:	00f4a023          	sw	a5,0(s1)
80002f90:	04344703          	lbu	a4,67(s0)
80002f94:	00070663          	beqz	a4,80002fa0 <_printf_common+0x60>
80002f98:	00178793          	addi	a5,a5,1 # 1001 <__stack_size+0x801>
80002f9c:	00f4a023          	sw	a5,0(s1)
80002fa0:	00042783          	lw	a5,0(s0)
80002fa4:	0207f793          	andi	a5,a5,32
80002fa8:	00078863          	beqz	a5,80002fb8 <_printf_common+0x78>
80002fac:	0004a783          	lw	a5,0(s1)
80002fb0:	00278793          	addi	a5,a5,2
80002fb4:	00f4a023          	sw	a5,0(s1)
80002fb8:	00042903          	lw	s2,0(s0)
80002fbc:	00697913          	andi	s2,s2,6
80002fc0:	00091e63          	bnez	s2,80002fdc <_printf_common+0x9c>
80002fc4:	01940b13          	addi	s6,s0,25
80002fc8:	fff00b93          	li	s7,-1
80002fcc:	00c42783          	lw	a5,12(s0)
80002fd0:	0004a703          	lw	a4,0(s1)
80002fd4:	40e787b3          	sub	a5,a5,a4
80002fd8:	08f94263          	blt	s2,a5,8000305c <_printf_common+0x11c>
80002fdc:	04344783          	lbu	a5,67(s0)
80002fe0:	00f036b3          	snez	a3,a5
80002fe4:	00042783          	lw	a5,0(s0)
80002fe8:	0207f793          	andi	a5,a5,32
80002fec:	0c079063          	bnez	a5,800030ac <_printf_common+0x16c>
80002ff0:	04340613          	addi	a2,s0,67
80002ff4:	000a8593          	mv	a1,s5
80002ff8:	00098513          	mv	a0,s3
80002ffc:	000a00e7          	jalr	s4
80003000:	fff00793          	li	a5,-1
80003004:	06f50863          	beq	a0,a5,80003074 <_printf_common+0x134>
80003008:	00042783          	lw	a5,0(s0)
8000300c:	00400613          	li	a2,4
80003010:	0004a703          	lw	a4,0(s1)
80003014:	0067f793          	andi	a5,a5,6
80003018:	00c42683          	lw	a3,12(s0)
8000301c:	00000493          	li	s1,0
80003020:	00c79863          	bne	a5,a2,80003030 <_printf_common+0xf0>
80003024:	40e684b3          	sub	s1,a3,a4
80003028:	0004d463          	bgez	s1,80003030 <_printf_common+0xf0>
8000302c:	00000493          	li	s1,0
80003030:	00842783          	lw	a5,8(s0)
80003034:	01042703          	lw	a4,16(s0)
80003038:	00f75663          	bge	a4,a5,80003044 <_printf_common+0x104>
8000303c:	40e787b3          	sub	a5,a5,a4
80003040:	00f484b3          	add	s1,s1,a5
80003044:	00000913          	li	s2,0
80003048:	01a40413          	addi	s0,s0,26
8000304c:	fff00b13          	li	s6,-1
80003050:	09249063          	bne	s1,s2,800030d0 <_printf_common+0x190>
80003054:	00000513          	li	a0,0
80003058:	0200006f          	j	80003078 <_printf_common+0x138>
8000305c:	00100693          	li	a3,1
80003060:	000b0613          	mv	a2,s6
80003064:	000a8593          	mv	a1,s5
80003068:	00098513          	mv	a0,s3
8000306c:	000a00e7          	jalr	s4
80003070:	03751a63          	bne	a0,s7,800030a4 <_printf_common+0x164>
80003074:	fff00513          	li	a0,-1
80003078:	02c12083          	lw	ra,44(sp)
8000307c:	02812403          	lw	s0,40(sp)
80003080:	02412483          	lw	s1,36(sp)
80003084:	02012903          	lw	s2,32(sp)
80003088:	01c12983          	lw	s3,28(sp)
8000308c:	01812a03          	lw	s4,24(sp)
80003090:	01412a83          	lw	s5,20(sp)
80003094:	01012b03          	lw	s6,16(sp)
80003098:	00c12b83          	lw	s7,12(sp)
8000309c:	03010113          	addi	sp,sp,48
800030a0:	00008067          	ret
800030a4:	00190913          	addi	s2,s2,1
800030a8:	f25ff06f          	j	80002fcc <_printf_common+0x8c>
800030ac:	00d40733          	add	a4,s0,a3
800030b0:	03000613          	li	a2,48
800030b4:	04c701a3          	sb	a2,67(a4)
800030b8:	04544703          	lbu	a4,69(s0)
800030bc:	00168793          	addi	a5,a3,1
800030c0:	00f407b3          	add	a5,s0,a5
800030c4:	00268693          	addi	a3,a3,2
800030c8:	04e781a3          	sb	a4,67(a5)
800030cc:	f25ff06f          	j	80002ff0 <_printf_common+0xb0>
800030d0:	00100693          	li	a3,1
800030d4:	00040613          	mv	a2,s0
800030d8:	000a8593          	mv	a1,s5
800030dc:	00098513          	mv	a0,s3
800030e0:	000a00e7          	jalr	s4
800030e4:	f96508e3          	beq	a0,s6,80003074 <_printf_common+0x134>
800030e8:	00190913          	addi	s2,s2,1
800030ec:	f65ff06f          	j	80003050 <_printf_common+0x110>

800030f0 <_printf_i>:
_printf_i():
800030f0:	fd010113          	addi	sp,sp,-48
800030f4:	02812423          	sw	s0,40(sp)
800030f8:	02912223          	sw	s1,36(sp)
800030fc:	03212023          	sw	s2,32(sp)
80003100:	01312e23          	sw	s3,28(sp)
80003104:	02112623          	sw	ra,44(sp)
80003108:	01412c23          	sw	s4,24(sp)
8000310c:	01512a23          	sw	s5,20(sp)
80003110:	01612823          	sw	s6,16(sp)
80003114:	0185c803          	lbu	a6,24(a1)
80003118:	07800793          	li	a5,120
8000311c:	00050493          	mv	s1,a0
80003120:	00058413          	mv	s0,a1
80003124:	00060913          	mv	s2,a2
80003128:	00068993          	mv	s3,a3
8000312c:	0107ee63          	bltu	a5,a6,80003148 <_printf_i+0x58>
80003130:	06200793          	li	a5,98
80003134:	04358693          	addi	a3,a1,67
80003138:	0107ee63          	bltu	a5,a6,80003154 <_printf_i+0x64>
8000313c:	28080c63          	beqz	a6,800033d4 <_printf_i+0x2e4>
80003140:	05800793          	li	a5,88
80003144:	1cf80263          	beq	a6,a5,80003308 <_printf_i+0x218>
80003148:	04240a93          	addi	s5,s0,66
8000314c:	05040123          	sb	a6,66(s0)
80003150:	0480006f          	j	80003198 <_printf_i+0xa8>
80003154:	f9d80793          	addi	a5,a6,-99
80003158:	0ff7f793          	andi	a5,a5,255
8000315c:	01500613          	li	a2,21
80003160:	fef664e3          	bltu	a2,a5,80003148 <_printf_i+0x58>
80003164:	00000617          	auipc	a2,0x0
80003168:	64060613          	addi	a2,a2,1600 # 800037a4 <__sf_fake_stdout+0x5c>
8000316c:	00279793          	slli	a5,a5,0x2
80003170:	00c787b3          	add	a5,a5,a2
80003174:	0007a783          	lw	a5,0(a5)
80003178:	00c787b3          	add	a5,a5,a2
8000317c:	00078067          	jr	a5
80003180:	00072783          	lw	a5,0(a4)
80003184:	04258a93          	addi	s5,a1,66
80003188:	00478693          	addi	a3,a5,4
8000318c:	0007a783          	lw	a5,0(a5)
80003190:	00d72023          	sw	a3,0(a4)
80003194:	04f58123          	sb	a5,66(a1)
80003198:	00100793          	li	a5,1
8000319c:	2740006f          	j	80003410 <_printf_i+0x320>
800031a0:	0005a783          	lw	a5,0(a1)
800031a4:	00072503          	lw	a0,0(a4)
800031a8:	0807f613          	andi	a2,a5,128
800031ac:	00450593          	addi	a1,a0,4
800031b0:	02060663          	beqz	a2,800031dc <_printf_i+0xec>
800031b4:	00052783          	lw	a5,0(a0)
800031b8:	00b72023          	sw	a1,0(a4)
800031bc:	0007d863          	bgez	a5,800031cc <_printf_i+0xdc>
800031c0:	02d00713          	li	a4,45
800031c4:	40f007b3          	neg	a5,a5
800031c8:	04e401a3          	sb	a4,67(s0)
800031cc:	00000617          	auipc	a2,0x0
800031d0:	5b060613          	addi	a2,a2,1456 # 8000377c <__sf_fake_stdout+0x34>
800031d4:	00a00813          	li	a6,10
800031d8:	0680006f          	j	80003240 <_printf_i+0x150>
800031dc:	0407f613          	andi	a2,a5,64
800031e0:	00052783          	lw	a5,0(a0)
800031e4:	00b72023          	sw	a1,0(a4)
800031e8:	fc060ae3          	beqz	a2,800031bc <_printf_i+0xcc>
800031ec:	01079793          	slli	a5,a5,0x10
800031f0:	4107d793          	srai	a5,a5,0x10
800031f4:	fc9ff06f          	j	800031bc <_printf_i+0xcc>
800031f8:	0005a603          	lw	a2,0(a1)
800031fc:	00072783          	lw	a5,0(a4)
80003200:	08067513          	andi	a0,a2,128
80003204:	00478593          	addi	a1,a5,4
80003208:	00050863          	beqz	a0,80003218 <_printf_i+0x128>
8000320c:	00b72023          	sw	a1,0(a4)
80003210:	0007a783          	lw	a5,0(a5)
80003214:	0140006f          	j	80003228 <_printf_i+0x138>
80003218:	04067613          	andi	a2,a2,64
8000321c:	00b72023          	sw	a1,0(a4)
80003220:	fe0608e3          	beqz	a2,80003210 <_printf_i+0x120>
80003224:	0007d783          	lhu	a5,0(a5)
80003228:	06f00713          	li	a4,111
8000322c:	00000617          	auipc	a2,0x0
80003230:	55060613          	addi	a2,a2,1360 # 8000377c <__sf_fake_stdout+0x34>
80003234:	14e80e63          	beq	a6,a4,80003390 <_printf_i+0x2a0>
80003238:	00a00813          	li	a6,10
8000323c:	040401a3          	sb	zero,67(s0)
80003240:	00442703          	lw	a4,4(s0)
80003244:	00e42423          	sw	a4,8(s0)
80003248:	00074863          	bltz	a4,80003258 <_printf_i+0x168>
8000324c:	00042583          	lw	a1,0(s0)
80003250:	ffb5f593          	andi	a1,a1,-5
80003254:	00b42023          	sw	a1,0(s0)
80003258:	00079663          	bnez	a5,80003264 <_printf_i+0x174>
8000325c:	00068a93          	mv	s5,a3
80003260:	02070463          	beqz	a4,80003288 <_printf_i+0x198>
80003264:	00068a93          	mv	s5,a3
80003268:	0307f733          	remu	a4,a5,a6
8000326c:	fffa8a93          	addi	s5,s5,-1
80003270:	00e60733          	add	a4,a2,a4
80003274:	00074703          	lbu	a4,0(a4)
80003278:	00ea8023          	sb	a4,0(s5)
8000327c:	00078713          	mv	a4,a5
80003280:	0307d7b3          	divu	a5,a5,a6
80003284:	ff0772e3          	bgeu	a4,a6,80003268 <_printf_i+0x178>
80003288:	00800793          	li	a5,8
8000328c:	02f81463          	bne	a6,a5,800032b4 <_printf_i+0x1c4>
80003290:	00042783          	lw	a5,0(s0)
80003294:	0017f793          	andi	a5,a5,1
80003298:	00078e63          	beqz	a5,800032b4 <_printf_i+0x1c4>
8000329c:	00442703          	lw	a4,4(s0)
800032a0:	01042783          	lw	a5,16(s0)
800032a4:	00e7c863          	blt	a5,a4,800032b4 <_printf_i+0x1c4>
800032a8:	03000793          	li	a5,48
800032ac:	fefa8fa3          	sb	a5,-1(s5)
800032b0:	fffa8a93          	addi	s5,s5,-1
800032b4:	415686b3          	sub	a3,a3,s5
800032b8:	00d42823          	sw	a3,16(s0)
800032bc:	00098713          	mv	a4,s3
800032c0:	00090693          	mv	a3,s2
800032c4:	00c10613          	addi	a2,sp,12
800032c8:	00040593          	mv	a1,s0
800032cc:	00048513          	mv	a0,s1
800032d0:	c71ff0ef          	jal	ra,80002f40 <_printf_common>
800032d4:	fff00a13          	li	s4,-1
800032d8:	15451263          	bne	a0,s4,8000341c <_printf_i+0x32c>
800032dc:	fff00513          	li	a0,-1
800032e0:	02c12083          	lw	ra,44(sp)
800032e4:	02812403          	lw	s0,40(sp)
800032e8:	02412483          	lw	s1,36(sp)
800032ec:	02012903          	lw	s2,32(sp)
800032f0:	01c12983          	lw	s3,28(sp)
800032f4:	01812a03          	lw	s4,24(sp)
800032f8:	01412a83          	lw	s5,20(sp)
800032fc:	01012b03          	lw	s6,16(sp)
80003300:	03010113          	addi	sp,sp,48
80003304:	00008067          	ret
80003308:	050582a3          	sb	a6,69(a1)
8000330c:	00000617          	auipc	a2,0x0
80003310:	47060613          	addi	a2,a2,1136 # 8000377c <__sf_fake_stdout+0x34>
80003314:	00042583          	lw	a1,0(s0)
80003318:	00072503          	lw	a0,0(a4)
8000331c:	0805f813          	andi	a6,a1,128
80003320:	00052783          	lw	a5,0(a0)
80003324:	00450513          	addi	a0,a0,4
80003328:	04080863          	beqz	a6,80003378 <_printf_i+0x288>
8000332c:	00a72023          	sw	a0,0(a4)
80003330:	0015f713          	andi	a4,a1,1
80003334:	00070663          	beqz	a4,80003340 <_printf_i+0x250>
80003338:	0205e593          	ori	a1,a1,32
8000333c:	00b42023          	sw	a1,0(s0)
80003340:	01000813          	li	a6,16
80003344:	ee079ce3          	bnez	a5,8000323c <_printf_i+0x14c>
80003348:	00042703          	lw	a4,0(s0)
8000334c:	fdf77713          	andi	a4,a4,-33
80003350:	00e42023          	sw	a4,0(s0)
80003354:	ee9ff06f          	j	8000323c <_printf_i+0x14c>
80003358:	0005a783          	lw	a5,0(a1)
8000335c:	0207e793          	ori	a5,a5,32
80003360:	00f5a023          	sw	a5,0(a1)
80003364:	07800793          	li	a5,120
80003368:	04f402a3          	sb	a5,69(s0)
8000336c:	00000617          	auipc	a2,0x0
80003370:	42460613          	addi	a2,a2,1060 # 80003790 <__sf_fake_stdout+0x48>
80003374:	fa1ff06f          	j	80003314 <_printf_i+0x224>
80003378:	0405f813          	andi	a6,a1,64
8000337c:	00a72023          	sw	a0,0(a4)
80003380:	fa0808e3          	beqz	a6,80003330 <_printf_i+0x240>
80003384:	01079793          	slli	a5,a5,0x10
80003388:	0107d793          	srli	a5,a5,0x10
8000338c:	fa5ff06f          	j	80003330 <_printf_i+0x240>
80003390:	00800813          	li	a6,8
80003394:	ea9ff06f          	j	8000323c <_printf_i+0x14c>
80003398:	0005a603          	lw	a2,0(a1)
8000339c:	00072783          	lw	a5,0(a4)
800033a0:	0145a583          	lw	a1,20(a1)
800033a4:	08067813          	andi	a6,a2,128
800033a8:	00478513          	addi	a0,a5,4
800033ac:	00080a63          	beqz	a6,800033c0 <_printf_i+0x2d0>
800033b0:	00a72023          	sw	a0,0(a4)
800033b4:	0007a783          	lw	a5,0(a5)
800033b8:	00b7a023          	sw	a1,0(a5)
800033bc:	0180006f          	j	800033d4 <_printf_i+0x2e4>
800033c0:	00a72023          	sw	a0,0(a4)
800033c4:	04067613          	andi	a2,a2,64
800033c8:	0007a783          	lw	a5,0(a5)
800033cc:	fe0606e3          	beqz	a2,800033b8 <_printf_i+0x2c8>
800033d0:	00b79023          	sh	a1,0(a5)
800033d4:	00042823          	sw	zero,16(s0)
800033d8:	00068a93          	mv	s5,a3
800033dc:	ee1ff06f          	j	800032bc <_printf_i+0x1cc>
800033e0:	00072783          	lw	a5,0(a4)
800033e4:	0045a603          	lw	a2,4(a1)
800033e8:	00000593          	li	a1,0
800033ec:	00478693          	addi	a3,a5,4
800033f0:	00d72023          	sw	a3,0(a4)
800033f4:	0007aa83          	lw	s5,0(a5)
800033f8:	000a8513          	mv	a0,s5
800033fc:	b19ff0ef          	jal	ra,80002f14 <memchr>
80003400:	00050663          	beqz	a0,8000340c <_printf_i+0x31c>
80003404:	41550533          	sub	a0,a0,s5
80003408:	00a42223          	sw	a0,4(s0)
8000340c:	00442783          	lw	a5,4(s0)
80003410:	00f42823          	sw	a5,16(s0)
80003414:	040401a3          	sb	zero,67(s0)
80003418:	ea5ff06f          	j	800032bc <_printf_i+0x1cc>
8000341c:	01042683          	lw	a3,16(s0)
80003420:	000a8613          	mv	a2,s5
80003424:	00090593          	mv	a1,s2
80003428:	00048513          	mv	a0,s1
8000342c:	000980e7          	jalr	s3
80003430:	eb4506e3          	beq	a0,s4,800032dc <_printf_i+0x1ec>
80003434:	00042783          	lw	a5,0(s0)
80003438:	0027f793          	andi	a5,a5,2
8000343c:	04079463          	bnez	a5,80003484 <_printf_i+0x394>
80003440:	00c12783          	lw	a5,12(sp)
80003444:	00c42503          	lw	a0,12(s0)
80003448:	e8f55ce3          	bge	a0,a5,800032e0 <_printf_i+0x1f0>
8000344c:	00078513          	mv	a0,a5
80003450:	e91ff06f          	j	800032e0 <_printf_i+0x1f0>
80003454:	00100693          	li	a3,1
80003458:	000a8613          	mv	a2,s5
8000345c:	00090593          	mv	a1,s2
80003460:	00048513          	mv	a0,s1
80003464:	000980e7          	jalr	s3
80003468:	e7650ae3          	beq	a0,s6,800032dc <_printf_i+0x1ec>
8000346c:	001a0a13          	addi	s4,s4,1
80003470:	00c42783          	lw	a5,12(s0)
80003474:	00c12703          	lw	a4,12(sp)
80003478:	40e787b3          	sub	a5,a5,a4
8000347c:	fcfa4ce3          	blt	s4,a5,80003454 <_printf_i+0x364>
80003480:	fc1ff06f          	j	80003440 <_printf_i+0x350>
80003484:	00000a13          	li	s4,0
80003488:	01940a93          	addi	s5,s0,25
8000348c:	fff00b13          	li	s6,-1
80003490:	fe1ff06f          	j	80003470 <_printf_i+0x380>

80003494 <_read_r>:
_read_r():
80003494:	ff010113          	addi	sp,sp,-16
80003498:	00812423          	sw	s0,8(sp)
8000349c:	00050413          	mv	s0,a0
800034a0:	00058513          	mv	a0,a1
800034a4:	00060593          	mv	a1,a2
800034a8:	00068613          	mv	a2,a3
800034ac:	8001aa23          	sw	zero,-2028(gp) # 90000074 <errno>
800034b0:	00112623          	sw	ra,12(sp)
800034b4:	ef1fc0ef          	jal	ra,800003a4 <_read>
800034b8:	fff00793          	li	a5,-1
800034bc:	00f51863          	bne	a0,a5,800034cc <_read_r+0x38>
800034c0:	8141a783          	lw	a5,-2028(gp) # 90000074 <errno>
800034c4:	00078463          	beqz	a5,800034cc <_read_r+0x38>
800034c8:	00f42023          	sw	a5,0(s0)
800034cc:	00c12083          	lw	ra,12(sp)
800034d0:	00812403          	lw	s0,8(sp)
800034d4:	01010113          	addi	sp,sp,16
800034d8:	00008067          	ret
